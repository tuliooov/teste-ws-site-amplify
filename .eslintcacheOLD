[{"C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\index.js":"1","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\App.js":"2","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\serviceWorker.js":"3","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\routes.js":"4","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\services\\api.js":"5","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\services\\functions.js":"6","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\ApenasFidelidade\\cartelas.js":"7","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\ApenasFidelidade\\estabelecimentos.js":"8","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\produto.js":"9","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Cadastro\\comum.js":"10","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Deslogado\\estabelecimentos.js":"11","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\index.js":"12","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\ApenasFidelidade\\index.js":"13","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\imagensTematicas\\index.js":"14","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\AvaliacaoPedido\\index.js":"15","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Fidelidade\\index.js":"16","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Filter\\index.js":"17","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Login\\index.js":"18","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Downloads\\index.js":"19","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Perfil\\index.js":"20","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Creditcardweb\\index.js":"21","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Offline\\index.js":"22","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Enderecos\\index.js":"23","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\StatusPedido\\index.js":"24","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\ConectarMesa\\index.js":"25","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\HistoricoPedido\\index.js":"26","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Global\\cabecalho.js":"27","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\estabelecimento.js":"28","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Global\\rodape.js":"29","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\imagensTematicas\\Revellion.js":"30","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\imagensTematicas\\Natal.js":"31","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\imagensTematicas\\BlackFriday.js":"32","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\imagensTematicas\\DiaDosPais.js":"33","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\cardapio.js":"34","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\infoCardapio.js":"35","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\opcoesProdutos.js":"36","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\carrinho.js":"37","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\ganheDescontos.js":"38","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\StatusPedido\\popupDoacao.js":"39"},{"size":560,"mtime":1610732687284,"results":"40","hashOfConfig":"41"},{"size":5748,"mtime":1611252400902,"results":"42","hashOfConfig":"41"},{"size":6504,"mtime":1610732687324,"results":"43","hashOfConfig":"41"},{"size":28123,"mtime":1614191824711,"results":"44","hashOfConfig":"41"},{"size":511,"mtime":1614113815303,"results":"45","hashOfConfig":"41"},{"size":25468,"mtime":1613136198236,"results":"46","hashOfConfig":"41"},{"size":8964,"mtime":1610732687286,"results":"47","hashOfConfig":"41"},{"size":44454,"mtime":1610732687286,"results":"48","hashOfConfig":"41"},{"size":46978,"mtime":1613763683240,"results":"49","hashOfConfig":"41"},{"size":21678,"mtime":1612810365483,"results":"50","hashOfConfig":"41"},{"size":70398,"mtime":1612545293654,"results":"51","hashOfConfig":"41"},{"size":1550,"mtime":1610732687296,"results":"52","hashOfConfig":"41"},{"size":21226,"mtime":1610732687287,"results":"53","hashOfConfig":"41"},{"size":7139,"mtime":1610732687322,"results":"54","hashOfConfig":"41"},{"size":6763,"mtime":1610732687288,"results":"55","hashOfConfig":"41"},{"size":15804,"mtime":1610732687306,"results":"56","hashOfConfig":"41"},{"size":13458,"mtime":1612803818059,"results":"57","hashOfConfig":"41"},{"size":49856,"mtime":1614188011036,"results":"58","hashOfConfig":"41"},{"size":4488,"mtime":1610732687301,"results":"59","hashOfConfig":"41"},{"size":45438,"mtime":1612978497854,"results":"60","hashOfConfig":"41"},{"size":11058,"mtime":1610732687293,"results":"61","hashOfConfig":"41"},{"size":187,"mtime":1610732687313,"results":"62","hashOfConfig":"41"},{"size":36927,"mtime":1611684374032,"results":"63","hashOfConfig":"41"},{"size":10268,"mtime":1613134059915,"results":"64","hashOfConfig":"41"},{"size":12104,"mtime":1610732687291,"results":"65","hashOfConfig":"41"},{"size":12916,"mtime":1610732687310,"results":"66","hashOfConfig":"41"},{"size":12781,"mtime":1612201341087,"results":"67","hashOfConfig":"41"},{"size":2755,"mtime":1614190188205,"results":"68","hashOfConfig":"41"},{"size":9726,"mtime":1613756100828,"results":"69","hashOfConfig":"41"},{"size":8930,"mtime":1610732687321,"results":"70","hashOfConfig":"41"},{"size":9024,"mtime":1610732687321,"results":"71","hashOfConfig":"41"},{"size":6659,"mtime":1610732687319,"results":"72","hashOfConfig":"41"},{"size":4658,"mtime":1610732687320,"results":"73","hashOfConfig":"41"},{"size":111357,"mtime":1614615266363,"results":"74","hashOfConfig":"41"},{"size":5713,"mtime":1614615320033,"results":"75","hashOfConfig":"41"},{"size":3478,"mtime":1612198896945,"results":"76","hashOfConfig":"41"},{"size":53480,"mtime":1613758247832,"results":"77","hashOfConfig":"41"},{"size":10600,"mtime":1614614771563,"results":"78","hashOfConfig":"41"},{"size":2353,"mtime":1614611974740,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1r82u3i",{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":66,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":57,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":83,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"82"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"82"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\index.js",[],["186","187"],"C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\App.js",["188","189","190"],"import React, {useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Routes from './routes';\r\nimport firebase from 'firebase'\r\nimport { Fragment } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nfunction App() {     \r\n    const [open, setOpen] = React.useState(window.getCookie('lgpd-clientefiel') == \"\" ? true : false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n  useEffect(() => {\r\n\r\n    \r\n    // if( (window.location.hostname).includes(\"pablodelivery\") ){\r\n        var myRequest = new Request(`https://ws.appclientefiel.com.br/rest/clientefiel/FirebaseWeb/${window.location.hostname}`);\r\n        // var myRequest = new Request(`https://ws.appclientefiel.com.br/rest/clientefiel/FirebaseWeb/pablodelivery.clientefiel.app`);\r\n        fetch(myRequest).then(function(response) {\r\n            return response.text().then(function(data) {\r\n                if(data !== \"\"){\r\n\r\n                    firebase.initializeApp(JSON.parse(data));\r\n                    const messaging=firebase.messaging();\r\n                    \r\n                    function IntitalizeFireBaseMessaging() {\r\n                        messaging\r\n                            .requestPermission()\r\n                            .then(function () {\r\n                                console.log(\"Notification Permission\");\r\n                                return messaging.getToken();\r\n                            })\r\n                            .then(function (token) {\r\n                                console.log(\"Token : \"+token);\r\n                                localStorage.setItem('tokenNotificationFirebase', token)\r\n                            })\r\n                            .catch(function (reason) {\r\n                                console.log(reason);\r\n                            });\r\n                    }\r\n                    \r\n                    messaging.onMessage(function (payload) {\r\n                        console.log('onMessage', payload);\r\n                        const notificationOption={\r\n                            body:payload.notification.body,\r\n                            icon:payload.notification.icon\r\n                        };\r\n                        \r\n                        window.registration.showNotification(payload.notification.title,notificationOption);\r\n\r\n                        window.registration.onclick=function (ev) {\r\n                            ev.preventDefault();\r\n                            window.open(payload.notification.click_action,'_blank');\r\n                            window.registration.close();\r\n                        }\r\n\r\n                        // window.registration.update();\r\n                        \r\n                    });\r\n\r\n                    // messaging.onMessage(function (payload) {\r\n                    //     console.log(payload);\r\n                        \r\n                    //     const notificationOption={\r\n                    //         body:payload.notification.body,\r\n                    //         icon:payload.notification.icon\r\n                    //     };\r\n                    \r\n                    //     if(Notification.permission===\"granted\"){\r\n                    //         var notification=new Notification(payload.notification.title,notificationOption);\r\n                    \r\n                    //         notification.onclick=function (ev) {\r\n                    //             ev.preventDefault();\r\n                    //             window.open(payload.notification.click_action,'_blank');\r\n                    //             notification.close();\r\n                    //         }\r\n                    //     }\r\n                    \r\n                    // });\r\n                    messaging.onTokenRefresh(function () {\r\n                        messaging.getToken()\r\n                            .then(function (newtoken) {\r\n                                console.log(\"New Token : \"+ newtoken);\r\n                                localStorage.setItem('tokenNotificationFirebase', newtoken)\r\n\r\n                            })\r\n                            .catch(function (reason) {\r\n                                console.log(reason);\r\n                            })\r\n                    })\r\n                    IntitalizeFireBaseMessaging();\r\n                    \r\n                }\r\n\r\n            });\r\n        }).catch(console.error);\r\n    // }\r\n\r\n  },[])\r\n\r\n  function aceitarLGPD(){\r\n    window.setCookie('lgpd-clientefiel', 'aceitou', 365);\r\n    setOpen(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n        <Routes />\r\n        <Dialog\r\n        open={open}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n          Ao usar nosso site, você reconhece que leu e entendeu nossa <a href=\"https://appclientefiel.com.br/politicaprivacidade.html\"> Política de Privacidade e nossos Termos de Serviço</a>.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={ () => {\r\n            aceitarLGPD()\r\n          }} color=\"primary\" autoFocus fullWidth>\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\serviceWorker.js",[],"C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\routes.js",["191","192","193","194","195","196","197","198","199","200","201","202","203"],"C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\services\\api.js",[],"C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\services\\functions.js",["204","205","206"],"\r\n\r\nimport api from './api';\r\nimport React from 'react';\r\nimport * as Sentry from \"@sentry/react\";\r\nimport TagManager from 'react-gtm-module'\r\n\r\n\r\n\r\n\r\nexport function getMoney( str ){\r\n    return parseInt( str.replace(/[\\D]+/g,'') );\r\n}\r\n\r\nexport function formatReal( int ){\r\n    var tmp = int+'';\r\n    tmp = tmp.replace(/([0-9]{2})$/g, \",$1\");\r\n    if( tmp.length > 6 )\r\n            tmp = tmp.replace(/([0-9]{3}),([0-9]{2}$)/g, \".$1,$2\");\r\n\r\n    return tmp;\r\n}\r\n\r\n\r\nexport function isNumeric(str){\r\n    var er = /^[0-9]+$/;\r\n    return (er.test(str));\r\n}\r\n  \r\nexport function TestaCPF(strCPF) {\r\n    var Soma;\r\n    var Resto;\r\n    Soma = 0;\r\n    if (strCPF === \"00000000000\") return false;\r\n     \r\n    for (let i=1; i<=9; i++) Soma = Soma + parseInt(strCPF.substring(i-1, i)) * (11 - i);\r\n    Resto = (Soma * 10) % 11;\r\n   \r\n    if ((Resto === 10) || (Resto === 11))  Resto = 0;\r\n    if (Resto !== parseInt(strCPF.substring(9, 10)) ) return false;\r\n   \r\n    Soma = 0;\r\n    for (let i = 1; i <= 10; i++) Soma = Soma + parseInt(strCPF.substring(i-1, i)) * (12 - i);\r\n    Resto = (Soma * 10) % 11;\r\n   \r\n    if ((Resto === 10) || (Resto === 11))  Resto = 0;\r\n    if (Resto !== parseInt(strCPF.substring(10, 11) ) ) return false;\r\n    return true;\r\n}\r\n\r\n\r\nexport const identificarEstabelecimentoSelecionado = (aplicativoDados, id1 = -1, id2 = -1) => {\r\n    let resp = ''\r\n    try {\r\n        if(id1 !== -1){//indo pra tela de status do pedido\r\n            resp += `/${id1}`\r\n            if(id2 !== -1){\r\n                resp += `/${id2}`\r\n            }\r\n        }\r\n        if(aplicativoDados?.estabelecimento?.length !== 1){\r\n            let estabelecimento = localStorage.getItem('estabelecimentoAtualCF') ? JSON.parse(localStorage.getItem('estabelecimentoAtualCF')) : null\r\n            \r\n            if(estabelecimento?.codigo){\r\n                if(id1 !== -1 || id2 !== -1){//indo pra tela de status\r\n                    resp = `/${estabelecimento.codigo}${resp}`\r\n                }else{//outras telas\r\n                    resp += `?loja=${estabelecimento.codigo}`\r\n                }\r\n            }else if(estabelecimento?.id){\r\n                if(id1 !== -1 || id2 !== -1){\r\n                    resp = `/${estabelecimento.id}${resp}`\r\n                }else{\r\n                    resp += `?loja=${estabelecimento.id}`\r\n                }\r\n            }\r\n        }\r\n    } catch (error) {\r\n        \r\n    }\r\n    return resp;\r\n} \r\n// try {\r\n      \r\n//     const response = await chamada(data, aplicativoDados)\r\n\r\n//     if(response.retornoErro){\r\n//         //algum erro\r\n//     }else{ \r\n//         //tudo certo\r\n    \r\n//     }\r\n// }\r\n// catch (error) {\r\n//     Sentry.captureMessage(`NotFunctions buscarCardapioOffline ${window.location.hostname} - ${error}`);\r\n//     alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n// }\r\n\r\n/*\r\n    Evitar repetição de codigo, trata a resposta do sistema adm\r\n*/\r\nfunction tratamentoResponse(response, chamada){\r\n    if(response.data.codErro > 0) return {retornoErro: response.data.codErro, mensagem: response.data.mensagem}\r\n    \r\n    else if(typeof response.data == 'string' && response.data != \"\") return {retornoErro: 1, mensagem: chamada+' - Erro inesperado, entre em contato com os reponsáveis.'}\r\n    \r\n    else return response.data\r\n}\r\n\r\n/*\r\n    Evitar repetição de codigo, trata o erro na chamada da requisição\r\n*/\r\nconst ErroRequisicao = function(data, aplicativoDados){\r\n    try {\r\n        console.log('ErroRequisicao> ', data.request, data.message)\r\n        if(data.message == 'Network Error'){\r\n            return 'Verifique sua conexão!'\r\n            // return 'Sem Internet ou sistema fora do ar!'\r\n        }else if(data.message){\r\n            return 'Erro: ' + data.message\r\n        }\r\n        return false\r\n    } catch (error) {\r\n        Sentry.captureMessage(`ErroRequisicao - ${aplicativoDados?.appNome} - ${error}`);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n    Apenas para remover acentos de strings\r\n*/\r\nexport function removeAcento (text)\r\n{       \r\n    text = text.toLowerCase();                                                         \r\n    text = text.replace(new RegExp('[ÁÀÂÃ]','gi'), 'a');\r\n    text = text.replace(new RegExp('[ÉÈÊ]','gi'), 'e');\r\n    text = text.replace(new RegExp('[ÍÌÎ]','gi'), 'i');\r\n    text = text.replace(new RegExp('[ÓÒÔÕ]','gi'), 'o');\r\n    text = text.replace(new RegExp('[ÚÙÛ]','gi'), 'u');\r\n    text = text.replace(new RegExp('[Ç]','gi'), 'c');\r\n    return text;                 \r\n}\r\n\r\nexport const Buscardescontos = async function(idEstabelecimento, aplicativoDados){\r\n    try {\r\n        const response = await api.get(`integracao/buscardescontos/${idEstabelecimento}/${aplicativoDados.appNome}`, {\r\n            headers: {\"Content-Type\": \"application/json\",}\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('Buscardescontos => ', response)\r\n\r\n        return tratamentoResponse(response, 'Buscardescontos')\r\n        \r\n    } catch (error) {\r\n        Sentry.captureMessage(`Buscardescontos - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const ObterEnderecosComTaxaEntrega = async function(data, aplicativoDados){\r\n    try {\r\n        const response = await api.post('cliente/ObterEnderecosComTaxaEntrega', data, {\r\n            headers: {\"Content-Type\": \"application/json\", \"app\": aplicativoDados.appNome}\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('ObterEnderecosComTaxaEntrega => ', response)\r\n\r\n        return tratamentoResponse(response, 'ObterEnderecosComTaxaEntrega')\r\n        \r\n    } catch (error) {\r\n        Sentry.captureMessage(`ObterEnderecosComTaxaEntrega - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n/*\r\n    1º cadastrar o pedido\r\n*/\r\nexport const CadastrarPedido = async function(data, aplicativoDados){\r\n    try {\r\n        const response = await api.post('cliente/CadastrarPedido', data, {\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('CadastrarPedido => ', response)\r\n\r\n        return tratamentoResponse(response, 'CadastrarPedido')\r\n        \r\n    } catch (error) {\r\n        Sentry.captureMessage(`CadastrarPedido - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n/*\r\n    Cancelar pedido\r\n*/\r\nexport const CancelarPedido = async function(data, aplicativoDados){\r\n    try {\r\n        const response = await api.post('cliente/CancelarPedido', data, {\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('CancelarPedido => ', response)\r\n\r\n        return tratamentoResponse(response, 'CancelarPedido')\r\n        \r\n    } catch (error) {\r\n        Sentry.captureMessage(`CancelarPedido - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n/*\r\n    Atualizar status\r\n*/\r\nexport const AtualizarStatusPedido = async function(data, aplicativoDados){\r\n    try {\r\n        const response = await api.post('cliente/AtualizarStatusPedido', data, {\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('AtualizarStatusPedido => ', response)\r\n\r\n        return tratamentoResponse(response, 'AtualizarStatusPedido')\r\n        \r\n    } catch (error) {\r\n        Sentry.captureMessage(`AtualizarStatusPedido - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n/*\r\n    extrato cashback\r\n*/\r\nexport const ExtratoCashback = async function(data, aplicativoDados){\r\n\r\n    try {\r\n        \r\n        const response = await api.get('clientefiel/ExtratoCashback/'+ data, {\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('ExtratoCashback => ', response)\r\n\r\n        return tratamentoResponse(response, 'ExtratoCashback')\r\n        \r\n    } catch (error) {\r\n        Sentry.captureMessage(`ExtratoCashback - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n/*\r\n    verificar se um estabelecimento está aberto\r\n*/\r\nexport const ObterStatusPedido = async function(data, aplicativoDados){\r\n    try {\r\n        const response = await api.get('cliente/ObterStatusPedido/'+ data, {\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('ObterStatusPedido => ', response)\r\n\r\n        return tratamentoResponse(response, 'ObterStatusPedido')\r\n        \r\n    } catch (error) {\r\n        Sentry.captureMessage(`ObterStatusPedido - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n    verificar se um estabelecimento está aberto\r\n*/\r\nexport const EstabelecimentoAberto = async function(data, aplicativoDados){\r\n    try {\r\n        const response = await api.get('clientefiel/EstabelecimentoAberto/'+ data, {\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('EstabelecimentoAberto => ', response)\r\n\r\n        return tratamentoResponse(response, 'EstabelecimentoAberto')\r\n        \r\n    } catch (error) {\r\n        Sentry.captureMessage(`EstabelecimentoAberto - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n/*\r\n    buscar ultimo pedido do cliente nas ultimas x horas\r\n*/\r\nexport const BuscarUltimoPedidoCliente = async function(data, aplicativoDados){\r\n    try {\r\n        const response = await api.post('cliente/BuscarUltimoPedidoCliente', data, {\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('BuscarUltimoPedidoCliente => ', response)\r\n\r\n        return tratamentoResponse(response, 'BuscarUltimoPedidoCliente')\r\n        \r\n    } catch (error) {\r\n        Sentry.captureMessage(`BuscarUltimoPedidoCliente - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n/*\r\n    realizar login, usuario e senha, telefone e etc...\r\n*/\r\nexport const LoginGeral = async function(data, aplicativoDados){\r\n    try {\r\n        const response = await api.post('clientefiel/LoginGeral', data, {\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('LoginGeral => ', response)\r\n\r\n        return tratamentoResponse(response, 'LoginGeral')\r\n        \r\n    } catch (error) {\r\n        Sentry.captureMessage(`LoginGeral - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\nexport const AtualizarDispositivoUsuario = async function(data, aplicativoDados){\r\n    try {\r\n        const response = await api.post('cliente/AtualizarDispositivoUsuario', data, {\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('AtualizarDispositivoUsuario => ', response)\r\n\r\n        return tratamentoResponse(response, 'LoginGeral')\r\n        \r\n    } catch (error) {\r\n        Sentry.captureMessage(`AtualizarDispositivoUsuario - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n/*\r\n    buscar aplicativo dados\r\n*/\r\nexport const AplicativoDadosUrl = async function(data, appNome){\r\n    try {\r\n        \r\n        const response = await api.get('clientefiel/AplicativoDadosUrl/'+ data, {\r\n            headers: {\"Content-Type\": \"application/json\", \"app\": appNome}\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('AplicativoDadosUrl => ', response)\r\n        \r\n        // return tratamentoResponse(response, 'AplicativoDadosUrl')\r\n        return response.data\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`AplicativoDadosUrl - ${appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n    retorna todos os bairros daquele cep\r\n*/\r\nexport const ComumCep = async function(data, aplicativoDados){\r\n    try {\r\n        const response = await api.get('comum/Cep/'+ data, {\r\n            headers: {\"Content-Type\": \"application/json\", \"app\": aplicativoDados.appNome}\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('comum/Cep/ => ', response)\r\n        \r\n        return tratamentoResponse(response, 'ComumCep')\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`ComumCep - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n    buscar cardapio para pedido de mesa\r\n*/\r\nexport const ObterCupomDescontoCompleto = async function(data, aplicativoDados){\r\n    try {\r\n        const response = await api.post('cliente/ObterCupomDescontoCompleto', data, {\r\n            headers: { \"Content-Type\": \"application/json\", \"plataforma\": \"site\" }\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('ObterCupomDescontoCompleto => ', response)\r\n        \r\n        return tratamentoResponse(response, 'ObterCupomDescontoCompleto')\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`ObterCupomDescontoCompleto - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\nexport const eventoTagManager = function (id, evento, valor = null){\r\n    if(id){\r\n        const tagManagerArgs = {\r\n            gtmId: id,\r\n            events: {\r\n                event: evento,\r\n                venda: valor,\r\n            }\r\n          }\r\n          TagManager.initialize(tagManagerArgs)\r\n    }\r\n}\r\n\r\n/*\r\n    buscar cardapio para pedido de mesa\r\n*/\r\nexport const ObterCardapioPedidoMesa = async function(data, aplicativoDados){\r\n    try {\r\n        const response = await api.post('clientefiel/ObterCardapioPedidoMesa', data, {\r\n            headers: { \"Content-Type\": \"application/json\", \"plataforma\": \"site\" }\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('ObterCardapioPedidoMesa => ', response)\r\n        \r\n        return tratamentoResponse(response, 'ObterCardapioPedidoMesa')\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`ObterCardapioPedidoMesa - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n/* \r\nObterCardapioCompletoV1 retorna um json com as categorias dentro diferente do ObterCardapio\r\n*/\r\nexport const ObterCardapioCompletoV1 = async function(data, aplicativoDados){\r\n    try {\r\n        const response = await api.post('clientefiel/ObterCardapioCompletoV1', data, {\r\n            headers: { \"Content-Type\": \"application/json\", \"plataforma\": \"site\" }\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('ObterCardapioCompletoV1 => ', response)\r\n        \r\n        return tratamentoResponse(response, 'ObterCardapioCompletoV1')\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`ObterCardapioCompletoV1 - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n/* \r\n    cadastrar cartoes de pagamento online\r\n*/\r\nexport const CadastrarCartaoCliente = async function(data, aplicativoDados){\r\n    try {\r\n        const response =  await api.post('cliente/CadastrarCartaoCliente', data, {\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('CadastrarCartaoCliente => ', response)\r\n        \r\n        return tratamentoResponse(response, 'CadastrarCartaoCliente')\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`CadastrarCartaoCliente - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n/* \r\n    retorna todos os cartoes salvos do usuario\r\n*/\r\nexport const BuscarPedidosCliente = async function(data, aplicativoDados){\r\n    try {\r\n        const response =  await api.post('cliente/BuscarPedidosCliente', data, {\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('BuscarPedidosCliente => ', response)\r\n        \r\n        return tratamentoResponse(response, 'BuscarPedidosCliente')\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`BuscarPedidosCliente - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n\r\n/* \r\n    retorna todos os cartoes salvos do usuario\r\n*/\r\nexport const ObterCartoesCredito = async function(data, aplicativoDados){\r\n    try {\r\n        const response =  await api.post('cliente/ObterCartoesCredito', data, {\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('ObterCartoesCredito => ', response)\r\n        \r\n        return tratamentoResponse(response, 'ObterCartoesCredito')\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`ObterCartoesCredito - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n\r\n/* \r\nObterCardapio retorna um array de categorias diferente do ObterCardapioCompletoV1\r\n*/\r\nexport const ObterCardapio = async function(data, aplicativoDados){\r\n    console.log('ObterCardapio antes', data)\r\n    try {\r\n        const response =  await api.post('clientefiel/ObterCardapio', data, {\r\n            headers: { \"Content-Type\": \"application/json\", \"plataforma\": \"site\" }\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('ObterCardapio => ', response)\r\n        \r\n        return tratamentoResponse(response, 'ObterCardapio')\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`ObterCardapio - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n    cadastrar endereço em um cliente\r\n*/\r\nexport const CadastrarEnderecoCliente = async function(data, aplicativoDados){\r\n    try {\r\n        const response =  await api.post('cliente/CadastrarEnderecoCliente', data, {\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('CadastrarEnderecoCliente => ', response)\r\n        \r\n        return tratamentoResponse(response, 'CadastrarEnderecoCliente')\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`CadastrarEnderecoCliente - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n    buscar estabelecimentos que entregam naquele endereço\r\n*/\r\nexport const Post_ListarEstabelecimentosPorEndereco = async function(data, aplicativoDados){\r\n    try {\r\n        const response =  await api.post('clientefiel/ListarEstabelecimentosPorEndereco', data, {\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('ListarEstabelecimentosPorEndereco => ', response)\r\n        \r\n        return tratamentoResponse(response, 'ListarEstabelecimentosPorEndereco')\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`ListarEstabelecimentosPorEndereco - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n/*\r\n    CadastrarUsuario\r\n*/\r\nexport const CadastrarUsuario = async function(data, aplicativoDados){\r\n    try {\r\n        const response =  await api.post('cliente/CadastrarUsuario', data, {\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('CadastrarUsuario => ', response)\r\n        \r\n        return tratamentoResponse(response, 'CadastrarUsuario')\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`CadastrarUsuario - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n/*\r\n    RegistrarSeloSeguro2\r\n*/\r\nexport const RegistrarSeloSeguro2 = async function(data, aplicativoDados){\r\n    try { \r\n        const response =  await api.post('clientefiel/RegistrarSeloSeguro2', data, {\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('RegistrarSeloSeguro2 => ', response)\r\n        \r\n        return tratamentoResponse(response, 'RegistrarSeloSeguro2')\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`RegistrarSeloSeguro2 - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n    RegistrarSeloSeguro2\r\n*/\r\nexport const ResgatarCashBack = async function(data, aplicativoDados){\r\n    try {\r\n        const response =  await api.post('clientefiel/ResgatarCashBack', data, {\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('ResgatarCashBack => ', response)\r\n        \r\n        return tratamentoResponse(response, 'ResgatarCashBack')\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`ResgatarCashBack - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n    AvaliarPedido\r\n*/\r\nexport const AvaliarPedido = async function(data, aplicativoDados){\r\n    try {\r\n        const response =  await api.post('avaliacao/AvaliarPedido', data, {\r\n            headers: { \"Content-Type\": \"application/json\" }\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('AvaliarPedido => ', response)\r\n        \r\n        return tratamentoResponse(response, 'AvaliarPedido')\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`AvaliarPedido - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n    Redefinir senha\r\n*/\r\nexport const RedefinirSenha = async function(data, aplicativoDados){\r\n    try {\r\n        const response =  await api.post('cliente/RedefinirSenha' , data , {\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }).catch(function(error){\r\n            const resp = ErroRequisicao(error)\r\n            return {data:{codErro: 1, mensagem: resp}}\r\n        });\r\n\r\n        console.log('RedefinirSenha => ', response)\r\n        \r\n        return tratamentoResponse(response, 'RedefinirSenha')\r\n\r\n    } catch (error) {\r\n        Sentry.captureMessage(`RedefinirSenha - ${aplicativoDados?.appNome} - ${error}`);\r\n        return {retornoErro:1, mensagem:error.message}\r\n    }\r\n}","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\ApenasFidelidade\\cartelas.js",[],"C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\ApenasFidelidade\\estabelecimentos.js",["207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './styles.css';\r\nimport Cabecalho from '../Global/cabecalho';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport ReactPixel from 'react-facebook-pixel';\r\nimport * as Sentry from \"@sentry/react\"; \r\n\r\nimport {identificarEstabelecimentoSelecionado, Post_ListarEstabelecimentosPorEndereco, CadastrarEnderecoCliente, ObterCardapio, ObterCardapioCompletoV1, ComumCep } from '../../services/functions';\r\n\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\n\r\nimport AlertFixo from '@material-ui/lab/Alert';\r\n\r\nimport api from '../../services/api';\r\nimport enderecosVazios from '../../assets/endereco-flat.svg';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {fade, makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n//alert\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\n//import Loading from '../loading';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // root: {\r\n  //   maxWidth: 345,\r\n  // },\r\n  rootAlerts: {\r\n    margin: \"0 0 1em 0\",\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 999,\r\n    color: '#fff', \r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\n\r\nconst verificarSeEntrega = (estabelecimento, lojas) => {\r\n  for(var i = 0; i < lojas.length; i++){\r\n    if(lojas[i].id == estabelecimento.id){\r\n      if(lojas[i].taxaEntrega < 0){\r\n        return false\r\n      }else{\r\n        return true\r\n      }\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nconst qtdFiltro = (estabelecimentos, tipo, retirada, endereco, exibirTodasLojas) => {\r\n  if(retirada === true && (tipo != 1 && tipo != 2)){\r\n    tipo = 5\r\n  }\r\n\r\n  if(tipo === 0 && endereco === true && exibirTodasLojas === false ){\r\n    tipo = 7\r\n  }\r\n  \r\n  if(tipo === 0 && exibirTodasLojas === false){\r\n    tipo = 6\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  console.log(estabelecimentos, tipo, retirada, endereco, exibirTodasLojas)\r\n\r\n  // 0 = Todos \r\n  // 1 = aberto\r\n  // 2 = fechado\r\n  // 3 = Entregam\r\n  // 4 = nao entrega\r\n  // 5 = retirada\r\n  // 6 = nao exibir todas lojas \r\n  \r\n  let num = 0\r\n\r\n  if(estabelecimentos){\r\n    if(tipo == 0){\r\n      num = estabelecimentos.length\r\n    }else if(tipo == 1 || tipo == 2 || tipo == 6 ){\r\n      const estabelecimentos = document.getElementsByClassName(\"estabelecimento\")\r\n      console.log('estabelecimentosestabelecimentos', estabelecimentos)\r\n      for(let i = 0; i < estabelecimentos.length; i++){\r\n        if(estabelecimentos[i].style.display != \"none\"){\r\n          num++\r\n        }\r\n      }\r\n    }else{\r\n      estabelecimentos.forEach(loja => {  \r\n        if(tipo == 7 && loja.taxaEntrega >= 0){\r\n          num++\r\n        } else  \r\n        if(tipo == 5 && loja.permiteRetiradaBalcao){\r\n          num++\r\n        }else if(tipo == 3 && (loja.taxaEntrega >= 0)){\r\n          num++\r\n        }else if(tipo == 4 && (loja.taxaEntrega == -1)){\r\n          num++\r\n        }\r\n      })\r\n    }\r\n  }\r\n  console.log('qtd', num)\r\n  return num \r\n}\r\n\r\nconst quantoEntregam = (estabelecimentos, todos = true, retirada = false) => {\r\n  console.log(estabelecimentos, todos, retirada)\r\n  let num = 0\r\n  if(estabelecimentos){\r\n    estabelecimentos.forEach(loja => {     \r\n      if(!retirada && todos == true){\r\n        num++\r\n      }else if(!retirada && loja.taxaEntrega >= 0 && todos == false){\r\n        num++\r\n      }else if(loja.permiteRetiradaBalcao && retirada){\r\n        num++\r\n      }\r\n    })\r\n  }\r\n  console.log('quantoEntregam', num)\r\n  return num \r\n}\r\n\r\nfunction removeAcento (text){       \r\n  text = text.toLowerCase();                                                         \r\n  text = text.replace(new RegExp('[ÁÀÂÃ]','gi'), 'a');\r\n  text = text.replace(new RegExp('[ÉÈÊ]','gi'), 'e');\r\n  text = text.replace(new RegExp('[ÍÌÎ]','gi'), 'i');\r\n  text = text.replace(new RegExp('[ÓÒÔÕ]','gi'), 'o');\r\n  text = text.replace(new RegExp('[ÚÙÛ]','gi'), 'u');\r\n  text = text.replace(new RegExp('[Ç]','gi'), 'c');\r\n  return text;                 \r\n}\r\n\r\nconst procurarEstabelecimento = (e) => {\r\n  const valorPesqusa = removeAcento(e.target.value.toLocaleLowerCase())\r\n  const estabelecimentos = document.getElementsByClassName(\"estabelecimento\")\r\n\r\n  for(let j = 0; j < estabelecimentos.length; j++){\r\n    const nome = removeAcento(estabelecimentos[j].getElementsByClassName(\"nomeLoja\")[0].innerHTML.toLocaleLowerCase()).includes(valorPesqusa)\r\n    const descricao = removeAcento(estabelecimentos[j].getElementsByClassName(\"descricaoLoja\")[0].innerHTML.toLocaleLowerCase()).includes(valorPesqusa) \r\n    if(nome || descricao){\r\n      estabelecimentos[j].style.display = \"\"\r\n    }else{\r\n      estabelecimentos[j].style.display = \"none\"\r\n    }\r\n  }\r\n}\r\n\r\nconst possuiOpcao = (array, string) => {\r\n  for(var i = 0; i < array.length; i++){\r\n    if(array[i] === string){\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n\r\nexport default function Estabelecimentos() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  \r\n  \r\n  const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))\r\n  const usuarioLogado = JSON.parse(localStorage.getItem(\"usuarioCF\"))  \r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const SkeletonQtd = [0,1,2,3,4,5]\r\n  const [verTodasAsLojas, setVerTodasAsLojas] = useState(false);\r\n  const [temAlgum, setTemAlgum] = useState(true);\r\n  const [enderecoAtual, setEnderecoAtual] = useState(JSON.parse(localStorage.getItem(\"enderecoAtualCF\")));\r\n\r\n  let estabelecimentosCepDeslogadoCF = []\r\n  try {\r\n    estabelecimentosCepDeslogadoCF = JSON.parse(localStorage.getItem('estabelecimentosCepDeslogadoCF'))\r\n  } catch (error) {\r\n    \r\n  }\r\n  // const [estabelecimentos, setEstabelecimentos] = useState(enderecoAtual?.bairro ? ( (usuarioLogado?.logado || (!localStorage.getItem('estabelecimentosCepDeslogadoCF') || localStorage.getItem('estabelecimentosCepDeslogadoCF') == \"undefined\"))  ? aplicativoDados.estabelecimentos : JSON.parse(localStorage.getItem('estabelecimentosCepDeslogadoCF'))) : (aplicativoDados.estabelecimentos.length > 0 ? aplicativoDados.estabelecimentos : []));\r\n  const [estabelecimentos, setEstabelecimentos] = useState(\r\n    (enderecoAtual?.bairro && estabelecimentosCepDeslogadoCF?.length === 0)\r\n    ? estabelecimentosCepDeslogadoCF\r\n    : (aplicativoDados?.estabelecimentos?.length > 0 \r\n        ? aplicativoDados.estabelecimentos \r\n        : [])\r\n  );\r\n  \r\n  const [abrirAdicionarEndereco, setAbrirAdicionarEndereco] = useState(false);\r\n  const [estabelecimentoDesejado, setEstabelecimentoDesejado] = useState({});\r\n\r\n  const [confirmarDesejo, setConfirmarDesejo] = useState(false);\r\n  const [bairrosCepUnico, setBairrosCepUnico] = React.useState([]);\r\n  const [bairroCepUnicoSelecionado, setBairroCepUnicoSelecionado] = React.useState('');\r\n  const [retirarNoLocal, setRetirarNoLocal] = React.useState(enderecoAtual?.id == \"retirada\" ? true : false);\r\n  const [cep, setCep] = React.useState('');\r\n  const [uf, setUf] = React.useState('');\r\n  const [cidade, setCidade] = React.useState('');\r\n  const [bairro, setBairro] = React.useState('');\r\n  const [rua, setRua] = React.useState('');\r\n  const [numero, setNumero] = React.useState('');\r\n  const [complemento, setComplemento] = React.useState('');\r\n  const [referencia, setReferencia] = React.useState('');\r\n  const [popUpCep, setPopUpCep] = React.useState(false);\r\n  const [filtroSelect, setFiltroSelect] = React.useState(0);\r\n  const [quantosEntregam, setQuantosEntregam] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    setQuantosEntregam(qtdFiltro(estabelecimentos, filtroSelect, !!retirarNoLocal, !!enderecoAtual?.logradouro, (aplicativoDados?.exibirTodasUnidadesNoDelivery || verTodasAsLojas) ? true : false));\r\n  }, [retirarNoLocal, estabelecimentos, filtroSelect, enderecoAtual, verTodasAsLojas])\r\n\r\n  useEffect(() => {\r\n\r\n    if(aplicativoDados.pixelFacebook){\r\n          ReactPixel.track('Search')\r\n    }\r\n\r\n    if(retirarNoLocal){\r\n      filtroTipoRetirada(true)\r\n    }else if(enderecoAtual?.bairro){\r\n      listarEstabelecimentosPorEndereco(enderecoAtual)\r\n    }\r\n    \r\n\r\n    // const interval = setInterval(() => {\r\n    //     //console.log(\"procurando atualizações \")\r\n    //     if(!aplicativoDados.clienteFielStart){\r\n    //       verificarAberto()\r\n    //       buscarUltimoPedido()  \r\n    //     }\r\n    //     // if(new Date() - new Date(localStorage.getItem('dateCardapioCF')) > 300000){\r\n    //     //   verificarCardapio(estabelecimentoAtual)\r\n    //     // }\r\n    // }, 10000);\r\n    // return () => clearInterval(interval);\r\n  }, []);\r\n\r\n\r\n  const allBanners = () => {\r\n    var array = []\r\n    for(let i = 0; i < aplicativoDados?.estabelecimentos?.length; i++){\r\n        if(aplicativoDados.estabelecimentos[i].banners){\r\n          for(let j = 0; j < aplicativoDados.estabelecimentos[i].banners.length; j++){\r\n            array.push({\"url\": aplicativoDados.estabelecimentos[i].banners[j], \"id\": aplicativoDados.estabelecimentos[i].id})\r\n          }\r\n        }\r\n    }\r\n    return array;\r\n  }\r\n\r\n\r\n  const [todosBanners, setTodosBanners] = React.useState(allBanners());\r\n  // console.log('todosBanners', todosBanners)\r\n  \r\n  const [loading, setLoading] = React.useState(false);\r\n  const [loadingLogadoEnderecos, setLoadingLogadoEnderecos] = React.useState((enderecoAtual?.bairro) ? true : false);\r\n\r\n \r\n  \r\n  //console.log(\"aplicativoDados\", aplicativoDados)\r\n  //console.log(\"estabelecimentos\", estabelecimentos)\r\n  const limparEnderecos = () =>{\r\n    setCep('')\r\n    setUf('')\r\n    setCidade('')\r\n    setBairro('')\r\n    setRua('')\r\n    setNumero('')\r\n    setComplemento('')\r\n    setReferencia('')\r\n    setBairrosCepUnico('')\r\n    setBairroCepUnicoSelecionado('')\r\n  }\r\n\r\n\r\n  const verificarCep = async (e) =>{\r\n    try {\r\n      let valorInput = e.target.value\r\n      valorInput = valorInput.replace(/-/g, '')\r\n      valorInput = valorInput.replace(/ /g, '')\r\n      valorInput = valorInput.replace(/\\//g, '')\r\n      // valorInput = valorInput.substring(0,8)\r\n      console.log(\"valorInput\", valorInput)\r\n      if(valorInput.length == 8 ){\r\n        setCep(valorInput)\r\n        setLoading(true)\r\n        //buscar dados do cep\r\n        const retornoCep = await ComumCep(valorInput, aplicativoDados)\r\n        \r\n        console.log(\"retornoCep\", retornoCep)\r\n        if(retornoCep.retornoErro){\r\n          alertStart(retornoCep.mensagem, \"error\")\r\n        }else{\r\n          if(retornoCep.id || retornoCep.logradouro){\r\n            setBairrosCepUnico('')\r\n            setBairro(retornoCep.bairro)\r\n            setCidade(retornoCep.localidade)\r\n            setRua(retornoCep.logradouro)\r\n            setUf(retornoCep.uf)\r\n            setPopUpCep(false)\r\n            setAbrirAdicionarEndereco(true)\r\n          }else if(retornoCep.bairros.length >= 1){     \r\n            setBairrosCepUnico(retornoCep.bairros)\r\n            setPopUpCep(false)\r\n            setAbrirAdicionarEndereco(true)\r\n          }else{\r\n            //DEU ERRO, OU NAO EXISTE\r\n            alertStart(\"CEP não encontrado\", \"error\")   \r\n            // setAbrirAdicionarEndereco(false)\r\n            limparEnderecos()\r\n\r\n            if(popUpCep){\r\n              document.getElementById(\"cepDigitando2\").value = ''\r\n              document.getElementById(\"cepDigitando2\").focus()\r\n            }else{\r\n              document.getElementById(\"cepDigitando\").value = ''\r\n              document.getElementById(\"cepDigitando\").focus()\r\n            }\r\n            \r\n          }\r\n        }\r\n\r\n        setLoading(false)\r\n      } \r\n    } catch (error) {\r\n      Sentry.captureMessage(`NotFunctions verificarCep - ${aplicativoDados.appNome} - ${error}`);\r\n      alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n    }\r\n  }\r\n\r\n  const buscarCardapioId = (id) => {\r\n    aplicativoDados.estabelecimentos.forEach(estabelecimento => {\r\n      if(estabelecimento.id == id){\r\n        buscarCardapio(estabelecimento)\r\n        return true\r\n      }\r\n    });\r\n  }\r\n\r\n  const buscarCardapioDelivery = async (estabelecimento) => {\r\n\r\n    const enderecoAtual = JSON.parse(localStorage.getItem('enderecoAtualCF'))\r\n    if(estabelecimento.possuiDelivery == false && estabelecimento.possuiEntrega == false){\r\n      alertStart(\"Esse estabelecimento não faz delivery!\", \"warning\")\r\n    }else if( estabelecimento.taxaEntrega < 0){\r\n      setEstabelecimentoDesejado(estabelecimento)\r\n      setConfirmarDesejo(true)\r\n      // alertStart(\"Esse estabelecimento não entrega no seu endereço!\", \"warning\")\r\n    }else if(estabelecimento.online == false){\r\n      setEstabelecimentoDesejado(estabelecimento)\r\n      setConfirmarDesejo(true)\r\n      // alertStart(\"Esse estabelecimento não esta aberto no momento!\", \"warning\")\r\n    }else if(!enderecoAtual?.logradouro){\r\n      // alertStart(\"Cadastre seu endereço!\", \"warning\")\r\n      setEstabelecimentoDesejado(estabelecimento)\r\n      setAbrirAdicionarEndereco(true)\r\n      setPopUpCep(true)\r\n    }else if(enderecoAtual?.logradouro){\r\n      buscarCardapio(estabelecimento)\r\n    }\r\n  }\r\n\r\n  const buscarCardapioRetirada = (estabelecimento) => {\r\n    if(estabelecimento.online == false){\r\n      setEstabelecimentoDesejado(estabelecimento)\r\n      setConfirmarDesejo(true)\r\n      // alertStart(\"Esse estabelecimento não esta aberto no momento!\", \"warning\")\r\n    }else{\r\n      setEnderecoAtual({\"id\":\"retirada\"})\r\n      localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({\"id\":\"retirada\"}))\r\n      buscarCardapio(estabelecimento)\r\n    }\r\n  }\r\n  \r\n  const buscarCardapio = async (estabelecimento) => {  \r\n    try {\r\n      localStorage.removeItem('estabelecimentosCepDeslogadoCF')  \r\n      console.log('buscar cardapio> ', estabelecimento)\r\n      estabelecimento.token = `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`       \r\n\r\n      setLoading(true)\r\n      localStorage.setItem('estabelecimentoAtualCF', JSON.stringify(estabelecimento));\r\n\r\n      \r\n\r\n      if(usuarioLogado?.logado){\r\n        const enderecoAtual = JSON.parse(localStorage.getItem('enderecoAtualCF'))\r\n        let data = {\r\n          \"idCliente\": usuarioLogado.cliente.id,\r\n          \"idEstabelecimento\": estabelecimento.id,\r\n          \"idEndereco\": enderecoAtual.id ? (enderecoAtual.id != 'retirada' ? enderecoAtual.id : null) : null,\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n        } \r\n\r\n        const response = await ObterCardapioCompletoV1(data, aplicativoDados)\r\n        \r\n        console.log(\"ObterCardapioCompletoV1\", response)\r\n        if(response.retornoErro){\r\n          alertStart(response.mensagem, \"error\")\r\n          setLoading(false)\r\n        }else{\r\n          const retorno = response\r\n          console.log(\"ObterCardapioCompletoV1\", retorno)  \r\n\r\n\r\n          const carrinhoRetorno = {}\r\n          carrinhoRetorno.valorMinimoPedido = retorno.valorMinimoPedido\r\n          carrinhoRetorno.valorDesconto = retorno.valorDesconto\r\n          carrinhoRetorno.percentualDesconto = retorno.percentualDesconto\r\n          carrinhoRetorno.minimoEntregaGratis = retorno.minimoEntregaGratis\r\n          carrinhoRetorno.maximoPedidoComDesconto = retorno.maximoPedidoComDesconto\r\n          carrinhoRetorno.maximoDesconto = retorno.maximoDesconto\r\n          carrinhoRetorno.cupomDesconto = retorno.cupomDesconto\r\n    \r\n          carrinhoRetorno.pedido = {\r\n            \"entregaImediata\": false,\r\n            \"formaPagamento\": {},\r\n            \"itens\": [],\r\n            \"taxaEntrega\": null,\r\n            \"tokenCartaoCredito\": null,\r\n            \"troco\": null,\r\n            \"valorDesconto\": null,\r\n            \"valorEntrega\": null,\r\n            \"valorTotal\": 0,\r\n            \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          }\r\n\r\n          if(enderecoAtual?.id == \"retirada\"){\r\n            carrinhoRetorno.pedido.tipoPedido = 1\r\n            carrinhoRetorno.pedido.entregaAgendada = \"Retirar(Buscar) no local\"\r\n          }\r\n    \r\n          localStorage.setItem(\"carrinhoCF\", JSON.stringify(carrinhoRetorno)) \r\n\r\n          \r\n          localStorage.setItem(\"cardapioCF\", JSON.stringify(retorno))   \r\n\r\n          if(!localStorage.getItem(\"enderecoAtualCF\") || enderecoAtual?.id == \"retirada\"){\r\n            localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({})) \r\n          }else if(retorno.enderecos != null && retorno.enderecos?.length > 0 && enderecoAtual?.id != \"retirada\"){\r\n            localStorage.setItem(\"enderecoAtualCF\", JSON.stringify(retorno.enderecos[0]))  \r\n          }\r\n    \r\n          history.push(`/delivery${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n        }\r\n\r\n      }else{\r\n\r\n        const response = await ObterCardapio(estabelecimento, aplicativoDados)\r\n        \r\n        console.log(\"ObterCardapio\", response)\r\n        if(response.retornoErro){\r\n          alertStart(response.mensagem, \"error\")\r\n          setLoading(false)\r\n        }else{\r\n          const retorno = response\r\n          const carrinhoRetorno = {}\r\n          carrinhoRetorno.valorMinimoPedido = retorno.valorMinimoPedido\r\n          carrinhoRetorno.valorDesconto = retorno.valorDesconto\r\n          carrinhoRetorno.percentualDesconto = retorno.percentualDesconto\r\n          carrinhoRetorno.minimoEntregaGratis = retorno.minimoEntregaGratis\r\n          carrinhoRetorno.maximoPedidoComDesconto = retorno.maximoPedidoComDesconto\r\n          carrinhoRetorno.maximoDesconto = retorno.maximoDesconto\r\n          carrinhoRetorno.cupomDesconto = retorno.cupomDesconto\r\n    \r\n          carrinhoRetorno.pedido = {\r\n            \"entregaImediata\": false,\r\n            \"formaPagamento\": {},\r\n            \"itens\": [],\r\n            \"taxaEntrega\": null,\r\n            \"tokenCartaoCredito\": null,\r\n            \"troco\": null,\r\n            \"valorDesconto\": null,\r\n            \"valorEntrega\": null,\r\n            \"valorTotal\": 0,\r\n            \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          }\r\n    \r\n          localStorage.setItem(\"carrinhoCF\", JSON.stringify(carrinhoRetorno)) \r\n\r\n\r\n          const dataRetorno = {}\r\n          dataRetorno.categorias = retorno\r\n          dataRetorno.id = \"usuarioDeslogado\"\r\n          \r\n          localStorage.setItem(\"cardapioCF\", JSON.stringify(dataRetorno))   \r\n\r\n          if(!localStorage.getItem(\"enderecoAtualCF\")){\r\n            localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({})) \r\n          }else if(retorno.enderecos != null && retorno.enderecos?.length > 0 && enderecoAtual?.id != \"retirada\"){\r\n            localStorage.setItem(\"enderecoAtualCF\", JSON.stringify(retorno.enderecos[0]))  \r\n          }\r\n\r\n          localStorage.setItem(\"usuarioCF\", JSON.stringify({}))    \r\n    \r\n          history.push(`/delivery${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n        }\r\n      }\r\n    } catch (error) {\r\n      Sentry.captureMessage(`NotFunctions buscarCardapio - ${aplicativoDados.appNome} - ${error}`);\r\n      alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n    }\r\n  }\r\n\r\n  \r\n    //alerts    \r\n    const [alert, setAlert] = useState({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n    \r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    \r\n    const alertStart = (msg, tipo) => {\r\n        setAlert({\"status\": true, \"tipo\": tipo, \"mesangem\": msg});\r\n    };\r\n\r\n    const alertClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAlert({\"status\": false, \"tipo\": alert.tipo, \"mesangem\": alert.mesangem});\r\n    };\r\n\r\n    const filtroTipo = (e) =>{\r\n      e.preventDefault()\r\n      setFiltroSelect(e.target.value)\r\n      const numero = e.target.value\r\n\r\n      // 0 = Todos \r\n      // 1 = Abertos\r\n      // 2 = Fechados\r\n\r\n      const estabelecimentos = document.getElementsByClassName(\"estabelecimento\")\r\n      var valorPesqusa = \"\"\r\n      switch (numero) {\r\n        case 0:\r\n          valorPesqusa = \"\"\r\n          break;\r\n        case 1:\r\n          valorPesqusa = \"aberto-Estabelecimentos\"\r\n          break;\r\n        case 2:\r\n          valorPesqusa = \"fechado-Estabelecimentos\"\r\n          break;\r\n      \r\n      }\r\n      var qtd = 0\r\n      //console.log('valor', valorPesqusa)\r\n      //console.log('estabelecimentos', estabelecimentos)\r\n      for(let j = 0; j < estabelecimentos.length; j++){\r\n        const filtro = (estabelecimentos[j].classList.value).includes(valorPesqusa)\r\n        if(filtro){\r\n          estabelecimentos[j].style.display = \"\"\r\n          qtd++\r\n        }else{\r\n          estabelecimentos[j].style.display = \"none\"\r\n        }\r\n      }\r\n\r\n      if(qtd > 0){\r\n        setTemAlgum(true)\r\n      }else{\r\n        setTemAlgum(false)\r\n      }\r\n    }\r\n\r\n\r\n    const filtroTipoRetirada = async (retiradaSim) => {\r\n      console.log('filtroTipoRetirada', retirarNoLocal, retiradaSim)\r\n      document.getElementById(\"cepDigitando\").value = \"\"\r\n      var retirada = true\r\n      if(!retiradaSim){\r\n        retirada = !retirarNoLocal\r\n        setRetirarNoLocal(retirada)\r\n        setVerTodasAsLojas(false)\r\n      }\r\n      if(retirada){\r\n        setEnderecoAtual({\"id\":\"retirada\"})\r\n        localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({\"id\":\"retirada\"}))\r\n        setEstabelecimentos(aplicativoDados.estabelecimentos)\r\n      }else{\r\n        setEnderecoAtual({})\r\n        localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({}))\r\n      }\r\n\r\n      const estabelecimentos = document.getElementsByClassName(\"naoPermiteRetirada\")\r\n      for(let j = 0; j < estabelecimentos.length; j++){\r\n        if(retirada == true){\r\n          estabelecimentos[j].style.display = \"none\"\r\n        }else{\r\n          estabelecimentos[j].style.display = \"\"\r\n        }\r\n      }\r\n      var qtd = document.getElementsByClassName(\"permiteRetirada\").length;\r\n      if(qtd > 0){\r\n        setTemAlgum(true)\r\n      }else{\r\n        setTemAlgum(false)\r\n      }\r\n      // setQtdDisponivel(qtd)\r\n    }\r\n    \r\n    const filtroTipoEndereco = (e) =>{\r\n      e.preventDefault()\r\n      setFiltroSelect(e.target.value)\r\n      const numero = e.target.value\r\n\r\n      // 0 = Todos \r\n      // 1 = aberto\r\n      // 2 = fechado\r\n      // 3 = Entregam\r\n      // 4 = nao entrega\r\n\r\n      const estabelecimentos = document.getElementsByClassName(\"estabelecimento\")\r\n      var valorPesqusa = \"\"\r\n      switch (numero) {\r\n        case 0:\r\n          valorPesqusa = \"\"\r\n          break;\r\n        case 3:\r\n          valorPesqusa = \"entregaEndereco-Estabelecimentos\"\r\n          break;\r\n        case 4:\r\n          valorPesqusa = \"naoEntregaEndereco-Estabelecimentos\"\r\n          break;\r\n        case 1:\r\n          valorPesqusa = \"aberto-Estabelecimentos\"\r\n          break;\r\n        case 2:\r\n          valorPesqusa = \"fechado-Estabelecimentos\"\r\n          break;\r\n      \r\n      }\r\n\r\n      var qtd = 0\r\n      //console.log('valor', valorPesqusa)\r\n      //console.log('estabelecimentos', estabelecimentos)\r\n      for(let j = 0; j < estabelecimentos.length; j++){\r\n        const filtro = (estabelecimentos[j].classList.value).includes(valorPesqusa)\r\n        if(filtro){\r\n          estabelecimentos[j].style.display = \"\"\r\n          qtd++\r\n        }else{\r\n          estabelecimentos[j].style.display = \"none\"\r\n        }\r\n      }\r\n\r\n      if(qtd > 0){\r\n        setTemAlgum(true)\r\n      }else{\r\n        setTemAlgum(false)\r\n      }\r\n\r\n    } \r\n    \r\n    const cadastrarEnderecoNoUsuario = async (data) => {\r\n      try {\r\n\r\n        data.idCliente = usuarioLogado.cliente.id\r\n\r\n        \r\n        if(aplicativoDados.tipoEntregaBairro == 1){\r\n          data.bairroEspecifico = 1\r\n        }else{\r\n          data.bairroEspecifico = 0\r\n        }\r\n\r\n        const retorno = await CadastrarEnderecoCliente(data, aplicativoDados)\r\n      \r\n        console.log(\"CadastrarEnderecoCliente\", retorno)\r\n        if(retorno.retornoErro){\r\n          alertStart(retorno.mensagem, \"error\")\r\n          listarEstabelecimentosPorEndereco(data)\r\n          setLoading(false)\r\n        }else{\r\n          usuarioLogado.cliente.enderecos.push(retorno)\r\n          localStorage.setItem('usuarioCF', JSON.stringify(usuarioLogado))\r\n          localStorage.setItem(\"enderecoAtualCF\", JSON.stringify(retorno))\r\n          setEnderecoAtual(retorno)\r\n          listarEstabelecimentosPorEndereco(retorno)//data com id\r\n        }\r\n\r\n      } catch (error) {\r\n        Sentry.captureMessage(`NotFunctions cadastrarEnderecoNoUsuario - ${aplicativoDados.appNome} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores!. Erro: \"+error.message, \"error\")    \r\n      }\r\n    }\r\n\r\n  \r\n\r\n    const listarEstabelecimentosPorEndereco = async (data ) => {\r\n      try {\r\n        data.token = `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`  \r\n        data.appNome = aplicativoDados.appNome\r\n\r\n        const retorno = await Post_ListarEstabelecimentosPorEndereco(data, aplicativoDados)\r\n      \r\n        if(retorno.retornoErro){\r\n          alertStart(retorno.mensagem, \"error\") \r\n          setLoading(false)\r\n        }else{\r\n          localStorage.setItem('estabelecimentosCepDeslogadoCF', JSON.stringify(retorno))\r\n          setEstabelecimentos(retorno)\r\n          setEnderecoAtual(data)\r\n          \r\n          if(estabelecimentoDesejado?.id && !verificarSeEntrega(estabelecimentoDesejado, retorno)){\r\n            setConfirmarDesejo(true)\r\n            setLoading(false)\r\n          }else if(estabelecimentoDesejado?.id){\r\n            buscarCardapio(estabelecimentoDesejado)\r\n            setEstabelecimentoDesejado({})\r\n          }else{\r\n            setLoading(false)\r\n          }\r\n          if(retorno.mensagem){\r\n            alertStart(retorno.mensagem, \"success\")\r\n            setLoading(false)\r\n          } \r\n        }\r\n        \r\n        \r\n        setAbrirAdicionarEndereco(false)\r\n\r\n        if(!!document.getElementById(\"cepDigitando\")){\r\n          document.getElementById(\"cepDigitando\").value = ''\r\n          document.getElementById(\"cepDigitando\").blur()\r\n        }\r\n        \r\n\r\n      } catch (error) {\r\n        Sentry.captureMessage(`NotFunctions ListarEstabelecimentosPorEndereco - ${aplicativoDados.appNome} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores!. Erro: \"+error.message, \"error\")    \r\n      }\r\n\r\n      setLoadingLogadoEnderecos(false)\r\n    }\r\n    const buscarLojasQueEntregam = async () =>{\r\n      if(bairrosCepUnico.length && !bairro){\r\n        alertStart(\"Necessario a escolha do bairro!\", \"warning\")     \r\n        return false\r\n      }else if(!uf){\r\n        alertStart(\"Necessario o preenchimento da sigla do estado!\", \"warning\")     \r\n        document.getElementById(\"cadastroUf\").focus()\r\n        return false\r\n      }else if(!cidade){\r\n        alertStart(\"Necessario o preenchimento da cidade!\", \"warning\")     \r\n        document.getElementById(\"cadastroCidade\").focus()\r\n        return false\r\n      }else if(!bairro){\r\n        alertStart(\"Necessario o preenchimento do bairro!\", \"warning\")     \r\n        document.getElementById(\"cadastroBairro\").focus()\r\n        return false\r\n      }else if(!rua){\r\n        alertStart(\"Necessario o preenchimento da rua!\", \"warning\")     \r\n        document.getElementById(\"cadastroRua\").focus()\r\n        return false\r\n      }else if(!numero){\r\n        alertStart(\"Necessario o preenchimento do numero!\", \"warning\")     \r\n        document.getElementById(\"cadastroNumero\").focus()\r\n        return false\r\n      }else if(!complemento){\r\n        alertStart(\"Necessario o preenchimento do complemento!\", \"warning\")     \r\n        document.getElementById(\"cadastroComplemento\").focus()\r\n        return false\r\n      }\r\n      setVerTodasAsLojas(false)\r\n      setAbrirAdicionarEndereco(false)\r\n      setLoading(true)\r\n        try {\r\n          const data = {\r\n            //\"idCliente\": usuarioLogado.cliente.id,\r\n            //\"idEstabelecimento\": estabelecimentoAtual.id,\r\n            \"cep\": cep,\r\n            \"uf\": uf,\r\n            \"cidade\": cidade,\r\n            \"bairro\": bairro,\r\n            \"logradouro\": rua,\r\n            \"numero\": numero,\r\n            \"complemento\": complemento,\r\n            \"referencia\": referencia,\r\n            \"appNome\": aplicativoDados.appNome,\r\n            \"latitude\": 0,\r\n            \"longitude\": 0,\r\n            \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          } \r\n\r\n          if(aplicativoDados.tipoEntregaBairro == 1){\r\n            localStorage.removeItem('bairroEspecifico')\r\n            data.bairroEspecifico = 1\r\n          }else{\r\n            data.bairroEspecifico = 0\r\n          }\r\n\r\n          if(usuarioLogado?.logado){\r\n            await cadastrarEnderecoNoUsuario(data)\r\n          }else{\r\n            localStorage.setItem(\"enderecoAtualCF\", JSON.stringify(data))\r\n            //console.log(\"data\", data)\r\n            listarEstabelecimentosPorEndereco(data)\r\n          }\r\n\r\n          \r\n          \r\n        } catch (error) {\r\n          Sentry.captureMessage(`ListarEstabelecimentosPorEndereco - ${aplicativoDados.appNome} - ${error}`);\r\n          alertStart(\"Procure os desenvolvedores \"+error.message, \"error\")    \r\n          setLoading(false)\r\n          setAbrirAdicionarEndereco(false)\r\n        }\r\n\r\n        limparEnderecos()\r\n\r\n    }\r\n  return (\r\n    <>\r\n    <Cabecalho nomeUsuarioFidelidade={true} voltarApenasFidelidade={true}></Cabecalho>\r\n    <Snackbar open={alert.status} autoHideDuration={6000} onClose={alertClose}>\r\n        <Alert onClose={alertClose} severity={alert.tipo}>\r\n        {alert.mesangem}\r\n        </Alert>\r\n    </Snackbar>\r\n\r\n      \r\n\r\n      \r\n\r\n\r\n      <div className=\"container container-Estabelecimentos-deslogado\">\r\n        {\r\n          todosBanners.length > 0\r\n          ? <Row>\r\n              <AppBar position=\"static\" color=\"default\" id=\"todosBanners\" style={{\"margin\":\"1em 0\",\"backgroundColor\": \"#f8f8f8\", \"zIndex\":\"1\", \"box-shadow\":\"none\"}}>\r\n                <Tabs\r\n                  // value={0}\r\n                  // onChange={mudarCategoria}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"auto\"\r\n                >\r\n                    {\r\n                      (todosBanners.map((banner, index) => (\r\n                        <img className={\"bannerLojas\"} style={{\"cursor\":\"pointer\"}} src={banner.url} key={index}/>    \r\n                      )))\r\n                    }\r\n                </Tabs>\r\n            </AppBar>\r\n            </Row>\r\n          : null\r\n        }\r\n\r\n        <Row>\r\n          {\r\n            (!todosBanners.length && aplicativoDados)\r\n            ? <Col xs={12} md={12} lg={12} className=\"bannerAppLogo\" style={{\"marginBottom\": \"1em\", \"backgroundImage\": `url(\"${aplicativoDados?.urlFundoSite}\")`}}>\r\n                {/* <img src={aplicativoDados.urlLogo}/> */}\r\n                <img src={aplicativoDados?.urlLogo} className={\"logoNoBanner\"}/>\r\n              </Col>\r\n            : null\r\n          }\r\n        </Row>\r\n        \r\n          <Row>\r\n            \r\n         \r\n          \r\n          {/* <Col xs={12} md={12} lg={12} >\r\n            <Typography gutterBottom variant=\"h6\" >\r\n              Selecione o estabelecimento\r\n            </Typography>\r\n          </Col> */}\r\n          \r\n          \r\n\r\n         \r\n        {\r\n          ( loadingLogadoEnderecos == false && (verTodasAsLojas || aplicativoDados?.exibirTodasUnidadesNoDelivery || enderecoAtual?.bairro || retirarNoLocal)) \r\n          ? <React.Fragment>\r\n              {enderecoAtual?.bairro\r\n                ?  <Col xs={12} md={12} lg={6} style={{ \"alignSelf\": \"center\"}}> \r\n                      <Typography gutterBottom variant=\"h6\" >\r\n                        {quantosEntregam == 0 \r\n                        ? null //' Nenhum entrega no seu endereço' \r\n                        : quantosEntregam == 1\r\n                          ? quantosEntregam + ' Estabelecimento'\r\n                          : quantosEntregam + ' Estabelecimentos'}\r\n                      </Typography> \r\n                  </Col>\r\n                :  <Col xs={12} md={12} lg={(enderecoAtual?.logradouro  || retirarNoLocal) ? 6 : 12} >   \r\n                    <Typography gutterBottom variant=\"h6\" style={{ \"alignSelf\": \"center\"}}>\r\n                      {quantosEntregam} {quantosEntregam > 1 ? \"Estabelecimentos encontradas\" : \"Estabelecimento encontrada\"} \r\n                    </Typography> \r\n                  </Col>}\r\n\r\n\r\n                  \r\n                  <React.Fragment>\r\n                        <Col xs={6} md={8} lg={8} style={{\"marginTop\": \"1em\"}}>\r\n                          <TextField\r\n                            fullWidth\r\n                            label=\"Procurar...\"\r\n                            onChange={procurarEstabelecimento}\r\n                            variant=\"outlined\"\r\n                          />\r\n                        </Col>\r\n                        <Col xs={6} md={4} lg={4} style={{\"marginTop\": \"1em\" /* , \"textAlign\": \"right\" */}}>\r\n                          <FormControl variant=\"outlined\" style={{\"width\": \"100%\"}}>\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Filtro</InputLabel>\r\n                            <Select\r\n                              labelId=\"demo-simple-select-outlined-label\"\r\n                              id=\"demo-simple-select-outlined\"\r\n                              value={filtroSelect}\r\n                              onChange={filtroTipo}\r\n                              label=\"Filtro\"\r\n                            > \r\n                              <MenuItem key={0} value={0}>{\"Todos\"}</MenuItem>\r\n                              <MenuItem key={1} value={1}>{\"Abertos\"}</MenuItem>\r\n                              <MenuItem key={2} value={2}>{\"Fechados\"}</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </Col>\r\n                      </React.Fragment>\r\n                  \r\n          {/* <Skeleton variant=\"circle\" width={40} height={40} /> */}\r\n\r\n          \r\n          \r\n                {\r\n                  estabelecimentos.map( (estabelecimento, index) => (\r\n                    <React.Fragment key={index}>\r\n                      {\r\n                        ( verTodasAsLojas || (aplicativoDados?.exibirTodasUnidadesNoDelivery && !retirarNoLocal) || ((enderecoAtual?.bairro && (estabelecimento.taxaEntrega >= 0 ) || (!enderecoAtual?.bairro && retirarNoLocal && ( /*estabelecimento.possuiDelivery || estabelecimento.possuiEntrega || */ estabelecimento.permiteRetiradaBalcao)))))\r\n                        ? <Col xs={12} md={6} lg={4} key={index} style={{\"margin\": \"1em 0\"}}  className={\"estabelecimento \" \r\n                              + (estabelecimento.online ? \"aberto-Estabelecimentos\" : \"fechado-Estabelecimentos \") \r\n                              + (estabelecimento.permiteRetiradaBalcao ? \" permiteRetirada \" : \" naoPermiteRetirada \") \r\n                              + \" estabelecimento-Estabelecimentos\" \r\n                              + (enderecoAtual?.bairro && ((estabelecimento.taxaEntrega >= 0 && estabelecimento.taxaEntrega != null) ? \" entregaEndereco-Estabelecimentos\" : \" naoEntregaEndereco-Estabelecimentos\"))}>\r\n                              \r\n                              <Card className={classes.root} style={{\"height\": \"100%\"}}>\r\n                                <CardActionArea  style={{ \"height\": \"100%\", \"flexFlow\": \"column-reverse\", \"alignItems\": \"normal\"}} onClick={() =>{\r\n                                }}>\r\n                                  {/* <CardContent style={{\"position\":\"absolute\", \"top\": \"0\"}} className={estabelecimento.online &&  estabelecimento.taxaEntrega>=0 ? \"disponivel\" : \"indisponivel\"}>\r\n                                    <Typography className={\"StatusEstabelecimento\"} variant=\"body2\"  component=\"p\">\r\n                                      {estabelecimento.online ? \"Aberto\" : \"Fechado\"}\r\n                                      {(enderecoAtual?.bairro) && (estabelecimento.taxaEntrega >= 0 && estabelecimento.taxaEntrega != null ? \" - Entrega\" : \" - Não Entrega\")}\r\n                                    </Typography>\r\n                                  </CardContent> */}\r\n                                  <Row style={{\"textAlign\": \"center\", \"width\": \"100%\", \"padding\": \"1em\", \"alignItems\": \"center\"}}>\r\n                                    <Col xs={5} md={6} lg={6}>\r\n                                      <CardMedia\r\n                                        component=\"img\"\r\n                                        className={\"logoLojas\"}\r\n                                        alt={estabelecimento.nome}\r\n                                        image={estabelecimento.urlLogo}\r\n                                        title={estabelecimento.nome}\r\n                                      />\r\n                                    </Col>\r\n                                    <Col xs={7} md={6} lg={6}>\r\n                                      <Typography className={\"StatusEstabelecimento\"} variant=\"body2\"  component=\"p\">\r\n                                        {estabelecimento.online ? <><CheckCircleIcon style={{\"fontSize\": \"initial\", \"color\":\"#28a745\"}}/> Aberto</> : <><CancelIcon style={{\"fontSize\": \"initial\"}}/> Fechado</>}\r\n                                        {/* {(enderecoAtual?.bairro) && (estabelecimento.taxaEntrega >= 0 && estabelecimento.taxaEntrega != null ? \" - Entrega\" : \" - Não Entrega\")} */}\r\n                                      </Typography>\r\n                                      \r\n                                      <Typography gutterBottom  component=\"h2\" className={\"nomeLoja\"}>                    \r\n                                        {estabelecimento.nomeAlternativo ? estabelecimento.nomeAlternativo : estabelecimento.nome}\r\n                                      </Typography>\r\n                                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={\"descricaoLoja\"}>\r\n                                        {estabelecimento.endereco}\r\n                                      </Typography>\r\n                                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {estabelecimento.tempoEntregaTexto}\r\n                                      </Typography>\r\n                                    </Col>\r\n                                  \r\n                                  </Row>\r\n                                  \r\n                                  <CardContent style={{\"padding\": \"0 16px\"}}>\r\n                                 \r\n                                  </CardContent>\r\n                                </CardActionArea>\r\n                              </Card>\r\n                            </Col>\r\n                        : null\r\n                      }\r\n                    </React.Fragment>\r\n                  ))\r\n                }\r\n\r\n                { (verTodasAsLojas || quantosEntregam || loadingLogadoEnderecos) \r\n                ? null \r\n                : <Col xs={12} md={12} lg={12} style={{\"textAlign\": \"center\", \"marginTop\": \"3em\"}}> \r\n                    <Typography variant=\"h6\" >\r\n                      Nenhum estabelecimento disponível\r\n                    </Typography>\r\n                  </Col> }   \r\n            </React.Fragment>\r\n          :  \r\n              (loadingLogadoEnderecos \r\n              ? <>\r\n                  {/* <Row style={(enderecoAtual?.logradouro || retirarNoLocal) ? {\"display\":\"none\"}:null}>\r\n                    <Col xs={12} md={12} lg={12} style={{\"display\":\"flex\", \"justifyContent\": \"center\"}}>\r\n                      <Skeleton variant=\"rect\" width={400} height={40} />\r\n                    </Col>\r\n                    <Col xs={12} md={12} lg={12} style={{\"display\":\"flex\", \"justifyContent\": \"center\", \"margin\": \"1em 0\"}} >\r\n                      <Skeleton variant=\"rect\" width={300} height={56} />\r\n                    </Col>\r\n                    <Col xs={12} md={12} lg={12} style={{\"display\":\"flex\", \"justifyContent\": \"center\" , \"marginBottom\": \"1em\"}}>\r\n                      <Skeleton variant=\"rect\" width={155} height={42} />\r\n                    </Col>\r\n                    <Divider style={{\"width\": \"100%\", \"margin\": \"0 0 1em 0\"}}/>\r\n                  </Row> */}\r\n                    \r\n                  <Col  xs={12} md={6} lg={6} style={{\"display\":\"flex\", \"justifyContent\": \"center\" , \"alignItems\":\"center\", \"padding\": \"0.5em\"}}>\r\n                    <Skeleton variant=\"rect\" width={\"50%\"} height={30} />\r\n                  </Col>\r\n\r\n                  <Col  xs={12} md={6} lg={6} style={{\"padding\": \"0.5em\"}}>\r\n                    <Skeleton variant=\"rect\" width={\"100%\"} height={56} />\r\n                  </Col>\r\n                  \r\n                  <Col  xs={6} md={6} lg={8} style={{\"padding\": \"0.5em\"}}>\r\n                    <Skeleton variant=\"rect\" width={\"100%\"} height={56} />\r\n                  </Col>\r\n\r\n                  <Col  xs={6} md={6} lg={4} style={{\"padding\": \"0.5em\"}}>\r\n                    <Skeleton variant=\"rect\" width={\"100%\"} height={56} />\r\n                  </Col>\r\n                \r\n                  {SkeletonQtd.map((sk, index) => (\r\n                    <Col key={index} xs={12} md={6} lg={4} style={{\"padding\": \"0.5em\"}}>\r\n                      <Skeleton variant=\"rect\" width={\"100%\"} height={165} />\r\n                    </Col>\r\n                  ))}\r\n                </>\r\n              : null)\r\n        }\r\n        </Row>\r\n\r\n        {\r\n          (aplicativoDados?.exibirTodasUnidadesNoDelivery == false && loadingLogadoEnderecos  == false && aplicativoDados.exibirLojasOcultas)\r\n          ? <Row style={{\"textAlign\": \"center\"}}>\r\n              <Col xs={12} md={12} lg={12}>\r\n                {\r\n                  (verTodasAsLojas == false)\r\n                  ?  <Button size=\"small\"  onClick={() =>{setVerTodasAsLojas(true)}}>\r\n                        Ver Todas as Lojas\r\n                      </Button>\r\n                  : <Button size=\"small\"  onClick={() =>{setVerTodasAsLojas(false)}}>\r\n                        Ocultar Todas as Lojas\r\n                    </Button>\r\n                }\r\n              </Col>\r\n            </Row>\r\n          : null\r\n        }\r\n\r\n\r\n        {loading &&\r\n        (<Backdrop className={classes.backdrop} open={loading}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>)}\r\n\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\produto.js",["273","274","275","276","277","278","279","280","281","282"],"import React, { useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Cabecalho from '../Global/cabecalho';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Prato from '../../assets/pratos.svg';\r\nimport ReactPixel from 'react-facebook-pixel';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport * as Sentry from \"@sentry/react\";\r\n\r\n\r\nimport {\r\n  eventoTagManager,\r\n} from '../../services/functions';\r\n\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n\r\n\r\n\r\n\r\n\r\n//alert\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  backdrop: {\r\n    zIndex: '99999',\r\n    color: '#fff',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rootAlerts: {\r\n    margin: \"0 0 1em 0\",\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function VerticalLinearStepper() {\r\n  const { idProduto } = useParams()  //params id do produto selecionado\r\n\r\n  const carrinho = JSON.parse(localStorage.getItem(\"carrinhoCF\"))\r\n  const cardapio = JSON.parse(localStorage.getItem(\"cardapioCF\"))\r\n  const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\")) ;\r\n  const [observacao, setObservacao] = useState('');\r\n  const [quantidade, setQuantidade] = useState(1);\r\n  const [ScrollAtivo, setScrollAtivo] = useState(false);\r\n  const enderecoAtual = JSON.parse(localStorage.getItem(\"enderecoAtualCF\"))\r\n  const history = useHistory();\r\n\r\n\r\n    // busca infos do produto selecionado com id\r\n    const getProdutoPorId = function (id) {\r\n      const localSt = localStorage.getItem(\"produtoSelecionadoCF\")\r\n      //console.log(\"produtoSelecionadoCF\", localSt)\r\n      if(!localSt || JSON.parse(localSt).id !== idProduto){\r\n        //console.log(\"getProdutoPorId\")\r\n        let produtoSelecionado;\r\n        cardapio.categorias.forEach(categoria => {\r\n          categoria.produtos.forEach(produto => {\r\n            if (produto.id === id) {\r\n              produtoSelecionado = produto\r\n            }\r\n          });\r\n        });\r\n        console.log('produtoSelecionado', produtoSelecionado,cardapio.categorias)\r\n\r\n        produtoSelecionado.opcoes.forEach(function(grupo){    \r\n          grupo.quantidade = 0\r\n        })\r\n\r\n        localStorage.setItem(\"produtoSelecionadoCF\", JSON.stringify(produtoSelecionado))\r\n        return produtoSelecionado\r\n      }else{\r\n        return JSON.parse(localStorage.getItem(\"produtoSelecionadoCF\"))\r\n      }\r\n    }\r\n  \r\n  const [produtoSelecionado, setProdutoSelecionado] = useState(getProdutoPorId(parseInt(idProduto)));\r\n\r\n  //console.log(\"produtoSelecionado\",produtoSelecionado)  \r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  //produtoSelecionado.opcoes\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n\r\n  const [estabelecimento, setEstabelecimento] = useState(localStorage.getItem('estabelecimentoAtualCF') ? JSON.parse(localStorage.getItem('estabelecimentoAtualCF')): {});\r\n  /*const handleNext = (min, max, qtd) => {\r\n    //console.log(\"oiNext\")\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };*/\r\n  \r\n\r\n  const voltar = () => {    \r\n    history.goBack()\r\n  }\r\n  \r\n  const handleBack = () => {\r\n    if (activeStep === 0) {\r\n      voltar()\r\n    }\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  /* const resetarAdicionais = () => {\r\n    setActiveStep(0);\r\n  }; */\r\n\r\n  const calcularValorProduto = () => {\r\n\r\n    const produtoSele = JSON.parse(JSON.stringify(produtoSelecionado))\r\n    console.log('produtoSele', produtoSele)\r\n\r\n    //deletar valores pre calculados no cardapio\r\n    delete produtoSele.valorDeCalculado\r\n    delete produtoSele.valorRealCalculado\r\n\r\n\r\n    const produtoProCarrinho = {\r\n      \"id\": null,\r\n      \"produto\": produtoSele,\r\n      \"quantidade\": quantidade,\r\n      \"valorProdutoHistorico\": produtoSele.valor,\r\n      \"itensOpcaoProduto\": [],\r\n      \"observacao\": observacao ? observacao : '',\r\n      \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n    } \r\n\r\n    \r\n\r\n    produtoProCarrinho.produto.opcoes.forEach((grupo) =>{   \r\n      \r\n      \r\n      //considerar maior  valor - prioridade 1\r\n      const verificarMaiorValor = grupo.opcoes.length > 0 ? grupo.opcoes[0].considerarMaiorValor : false\r\n      var maiorValorDoGrupo = 0\r\n\r\n      //considerar media dos valores - prioridade 2\r\n      const verificarMediaValor = grupo.opcoes.length > 1 ? grupo.opcoes[0].considerarMedia : false\r\n      var valorTotalDasOpcoes = 0\r\n      var quantidadeDeOpcoes = 0\r\n\r\n\r\n\r\n      grupo.opcoes.forEach(opcao => {\r\n        if(opcao.quantidade > 0){\r\n          const temp = {\r\n            \"id\": null,        \r\n            \"opcaoProduto\" :  {}, \r\n            \"valorHistorico\": 0,      \r\n            \"quantidade\": 0,\r\n            \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          } \r\n\r\n\r\n          temp.opcaoProduto = opcao\r\n          temp.quantidade = opcao.quantidade\r\n          temp.valorHistorico = (opcao.valor * opcao.quantidade)\r\n          \r\n          console.log('valorHistorico', temp.valorHistorico)\r\n\r\n          if(verificarMaiorValor && (opcao.valor > maiorValorDoGrupo)){\r\n            maiorValorDoGrupo = opcao.valor\r\n          }else if(verificarMediaValor){\r\n            valorTotalDasOpcoes += temp.valorHistorico\r\n            quantidadeDeOpcoes += opcao.quantidade\r\n          }\r\n\r\n          if( grupo.adicional === 0 && opcao.quantidade === 1 && opcao.valor > 0){\r\n            produtoProCarrinho.valorProdutoHistorico = (produtoProCarrinho.valorProdutoHistorico - produtoSele.valor) + opcao.valor\r\n          }else if(!verificarMaiorValor && !verificarMediaValor){\r\n            produtoProCarrinho.valorProdutoHistorico += temp.valorHistorico\r\n          }\r\n\r\n\r\n          \r\n\r\n        }  \r\n      });\r\n\r\n      if(verificarMaiorValor){\r\n        produtoProCarrinho.valorProdutoHistorico += maiorValorDoGrupo\r\n      }else if(verificarMediaValor && valorTotalDasOpcoes > 0){\r\n        produtoProCarrinho.valorProdutoHistorico += valorTotalDasOpcoes / quantidadeDeOpcoes\r\n      }\r\n\r\n    })\r\n\r\n    produtoProCarrinho.valorProdutoHistorico *= produtoProCarrinho.quantidade\r\n    console.log('produtoProCarrinho', produtoProCarrinho)\r\n    return produtoProCarrinho.valorProdutoHistorico\r\n    \r\n  }\r\n\r\n  \r\n  const adicionarCarrinho = (e) => {\r\n\r\n    \r\n    eventoTagManager(estabelecimento.tagManager, \"addCart\")\r\n    eventoTagManager(aplicativoDados.tagManager, \"addCart\")\r\n\r\n    \r\n    if(aplicativoDados.pixelFacebook){\r\n      ReactPixel.track('AddToCart')\r\n    } \r\n\r\n    console.log('adicionarCarrinho',produtoSelecionado )\r\n    \r\n    //deletar valores pre calculados no cardapio\r\n    delete produtoSelecionado.valorDeCalculado\r\n    delete produtoSelecionado.valorRealCalculado\r\n\r\n    const produtoProCarrinho = {\r\n      \"id\": null,\r\n      \"produto\": produtoSelecionado,\r\n      \"quantidade\": quantidade,\r\n      \"valorProdutoHistorico\": produtoSelecionado.valor,\r\n      \"itensOpcaoProduto\": [],\r\n      \"observacao\": observacao ? observacao : '',\r\n      \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n    } \r\n\r\n    \r\n\r\n    produtoProCarrinho.produto.opcoes.forEach((grupo) =>{   \r\n      \r\n      \r\n      //considerar maior  valor - prioridade 1\r\n      const verificarMaiorValor = grupo.opcoes.length > 0 ? grupo.opcoes[0].considerarMaiorValor : false\r\n      var maiorValorDoGrupo = 0\r\n\r\n      //considerar media dos valores - prioridade 2\r\n      const verificarMediaValor = grupo.opcoes.length > 1 ? grupo.opcoes[0].considerarMedia : false\r\n      var valorTotalDasOpcoes = 0\r\n      var quantidadeDeOpcoes = 0\r\n\r\n\r\n\r\n      grupo.opcoes.forEach(opcao => {\r\n        if(opcao.quantidade > 0){\r\n          const temp = {\r\n            \"id\": null,        \r\n            \"opcaoProduto\" :  {}, \r\n            \"valorHistorico\": 0,      \r\n            \"quantidade\": 0,\r\n            \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          } \r\n\r\n\r\n          temp.opcaoProduto = opcao\r\n          temp.quantidade = opcao.quantidade\r\n          temp.valorHistorico = (opcao.valor * opcao.quantidade)\r\n          \r\n          if(verificarMaiorValor && (opcao.valor > maiorValorDoGrupo)){\r\n            maiorValorDoGrupo = opcao.valor\r\n          }else if(verificarMediaValor){\r\n            valorTotalDasOpcoes += temp.valorHistorico\r\n            quantidadeDeOpcoes += opcao.quantidade\r\n          }\r\n\r\n          if( grupo.adicional === 0 && opcao.quantidade === 1 && opcao.valor > 0){\r\n            produtoProCarrinho.valorProdutoHistorico = (produtoProCarrinho.valorProdutoHistorico - produtoSelecionado.valor) + opcao.valor\r\n          }else if(!verificarMaiorValor && !verificarMediaValor){\r\n            produtoProCarrinho.valorProdutoHistorico += temp.valorHistorico\r\n          }\r\n\r\n          delete temp.opcaoProduto.quantidade          \r\n          produtoProCarrinho.itensOpcaoProduto.push(temp)\r\n\r\n          \r\n\r\n        }  \r\n        delete opcao.quantidade;     \r\n      });\r\n\r\n      if(verificarMaiorValor){\r\n        produtoProCarrinho.valorProdutoHistorico += maiorValorDoGrupo\r\n      }else if(verificarMediaValor && valorTotalDasOpcoes>0 ){\r\n        produtoProCarrinho.valorProdutoHistorico += valorTotalDasOpcoes / quantidadeDeOpcoes\r\n      }\r\n\r\n      delete grupo.quantidade;   \r\n    })\r\n\r\n    produtoProCarrinho.valorProdutoHistorico *= produtoProCarrinho.quantidade\r\n\r\n    carrinho.pedido.itens.push(produtoProCarrinho)\r\n    carrinho.data = new Date()\r\n\r\n    let valorTotalItens = 0;\r\n    let valorProdutosPromocionais = 0;\r\n\r\n    carrinho.pedido.itens.forEach(item => {\r\n      valorTotalItens += item.valorProdutoHistorico      \r\n      if(item.produto.promocional){\r\n        valorProdutosPromocionais += item.valorProdutoHistorico\r\n      }\r\n    })\r\n\r\n    console.log(\"valorProdutosPromocionais\", valorProdutosPromocionais)\r\n    console.log(\"valorPrduto\", valorTotalItens)\r\n    \r\n    \r\n\r\n\r\n    let taxaDeEntrega = 0\r\n    if(carrinho.pedido.tipoPedido !== 1 && !(valorTotalItens > cardapio.minimoEntregaGratis  && cardapio.minimoEntregaGratis > 0)){ // NAO FOR RETIRADA NO LOCAL\r\n      taxaDeEntrega = carrinho.pedido.valorEntrega ? carrinho.pedido.valorEntrega : enderecoAtual.taxaEntrega ? enderecoAtual.taxaEntrega : 0\r\n    }\r\n\r\n    let valorFinalProdutos = 0;\r\n    if(cardapio.percentualDesconto && (cardapio.valorDesconto === 0 || !cardapio.valorDesconto)){\r\n      //desconto percetual - apenas em produtos nao promocionais\r\n      var descontoPercentual = ((valorTotalItens - valorProdutosPromocionais) * cardapio.percentualDesconto) / 100\r\n\r\n      //maximo que pode dar de desconto\r\n      if(cardapio.maximoDesconto && descontoPercentual > cardapio.maximoDesconto){\r\n        descontoPercentual = cardapio.maximoDesconto\r\n      }\r\n      \r\n\r\n      carrinho.percentualDescontoValor = descontoPercentual\r\n      valorFinalProdutos = ( valorTotalItens - descontoPercentual ) \r\n      console.log(\"valorFinalProdutosIf\", valorFinalProdutos)\r\n\r\n    }else{\r\n      //desconto fixo - apenas em produtos nao promocionais\r\n      var descontoFixo = carrinho.pedido.valorDesconto ? carrinho.pedido.valorDesconto : 0\r\n\r\n      //maximo que pode dar de desconto\r\n      if(cardapio.maximoDesconto && descontoFixo > cardapio.maximoDesconto){\r\n        descontoFixo = cardapio.maximoDesconto\r\n      }\r\n\r\n      // console.log(\" valorTotalItens - valorProdutosPromocionais\",  valorTotalItens - valorProdutosPromocionais)\r\n      let produtosNaoPromocionais = valorTotalItens - valorProdutosPromocionais\r\n      produtosNaoPromocionais -= descontoFixo      \r\n      // console.log(\"produtosNaoPromocionais\", produtosNaoPromocionais)\r\n      valorFinalProdutos = valorProdutosPromocionais + (produtosNaoPromocionais > 0 ? produtosNaoPromocionais : 0)     \r\n      // console.log(\"valorFinalProdutosElse\", valorFinalProdutos)\r\n    \r\n    }\r\n\r\n    // console.log(\"valorFinalProdutos\", valorFinalProdutos)\r\n    if(valorFinalProdutos < 0){\r\n      carrinho.pedido.valorTotal = taxaDeEntrega\r\n    }else{\r\n      carrinho.pedido.valorTotal = valorFinalProdutos + taxaDeEntrega\r\n    }\r\n\r\n\r\n\r\n    if(carrinho.pedido.valorTotal < 0){\r\n      carrinho.pedido.valorTotal = 0.0\r\n    }\r\n    \r\n\r\n\r\n    // console.log(\"fim carrinho\", carrinho)\r\n    localStorage.setItem('carrinhoCF', JSON.stringify(carrinho))\r\n    //console.log(\"add CART\")\r\n    history.goBack()\r\n  }\r\n\r\n  \r\n    //alerts    \r\n    const [alert, setAlert] = useState({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    \r\n    const alertStart = (msg, tipo) => {\r\n        setAlert({\"status\": true, \"tipo\": tipo, \"mesangem\": msg});\r\n    };\r\n\r\n    const alertClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAlert({\"status\": false, \"tipo\": alert.tipo, \"mesangem\": alert.mesangem});\r\n    };\r\n    \r\n  \r\n    \r\n  return (\r\n    <div>\r\n\r\n        {loading &&\r\n        (<Backdrop className={classes.backdrop} open={loading}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>)}\r\n\r\n\r\n      <Snackbar open={alert.status} autoHideDuration={6000} onClose={alertClose}>\r\n          <Alert onClose={alertClose} severity={alert.tipo}>\r\n          {alert.mesangem}\r\n          </Alert>\r\n      </Snackbar>\r\n\r\n      <Cabecalho voltar={true} produtoNome={produtoSelecionado.nome}></Cabecalho>\r\n      <div className=\"container ProdutoComponente\">         \r\n      <Row className=\"fotoProdutoNoAdicional\" style={{\"margin\": 0, \"padding\": \"1em\"}}>\r\n          \r\n          <Col xs={12} md={12} lg={4} style={{\"cursor\": \"pointer\"}}>\r\n          <img\r\n                className=\"d-block\"\r\n                style={{\"borderRadius\": \"30px\"}}\r\n                src={produtoSelecionado.urlImagem ? produtoSelecionado.urlImagem : Prato}\r\n                alt=\"First slide\"\r\n              />\r\n          </Col>\r\n          \r\n          <Col xs={12} md={12} lg={8} style={{\"cursor\": \"pointer\"}}>\r\n              <Typography style={{\"textAlign\": \"center\", \"padding\": \"0.5em 0\"}} variant=\"h6\">{produtoSelecionado.nome}</Typography>\r\n              <Typography style={{\"textAlign\": \"center\", \"padding\": \"-0.5em 1em\"}} >{produtoSelecionado.descricao}</Typography>\r\n                 {\r\n                 produtoSelecionado.promocional && (carrinho.valorDesconto || carrinho.percentualDesconto)\r\n                  ?\r\n                  <List component=\"div\" disablePadding  style={{\"textAlign\": \"center\", \"padding\": \"0.5em 1em\"}}>\r\n                      <ListItem  className={classes.nested} style={{\"paddingTop\": \"0\", \"display\": \"flex\", \"justifyContent\": \"center\"}}>\r\n                         <p className=\"promocionalElement promocionalProduct\">\r\n                             É promocional, então não recebe desconto.\r\n                         </p>\r\n                      </ListItem>\r\n                  </List> \r\n                  \r\n                  : null \r\n              }\r\n          </Col>\r\n        </Row>\r\n          <Divider></Divider>\r\n        <div>\r\n           \r\n          {produtoSelecionado.opcoes.length > 0 ? \r\n          (<Stepper activeStep={activeStep} id={`Stepper${activeStep}`} orientation=\"vertical\">\r\n            {console.log(activeStep)}\r\n            {produtoSelecionado.opcoes.map((grupo, index) => (\r\n              <Step  key={grupo.id} id={`Step${index}`}>\r\n                <StepLabel>{grupo.nome}</StepLabel>\r\n                \r\n                <StepContent className=\"campoGrupo\">\r\n                {(!!grupo.quantidadeMaxima || !!grupo.quantidadeMinima) &&\r\n                <FormLabel className=\"infoGrupoAdicionais\"> \r\n                  {(!!grupo.quantidadeMaxima && grupo.quantidadeMaxima !== 99999999) && (<span>Maximo: {grupo.quantidadeMaxima}</span>)}\r\n                  {((!!grupo.quantidadeMaxima && grupo.quantidadeMaxima != 99999999) && (!!grupo.quantidadeMinima && grupo.quantidadeMinima != 99999999)) && (<span> e </span>)}         \r\n                  {!!grupo.quantidadeMinima && (<span>Minimo: {grupo.quantidadeMinima}</span>)}         \r\n                </FormLabel>\r\n                }\r\n                  {\r\n                    grupo.adicional === 0 //RADIO\r\n                      ?\r\n                      (\r\n                        <RadioGroup aria-label={grupo.nome} name={grupo.nome} style={{\"marginBottom\": \"5em\"}}>\r\n                          {grupo.opcoes.map(opcao => (\r\n                            <span className=\"opcaoIndividual row\" key={opcao.id}>\r\n                              <Col xs={2} md={2} lg={2} style={{\"cursor\": \"pointer\"}} className=\"colOpcaoAdicional\">\r\n                                \r\n                                <FormControlLabel\r\n                                  value={\"#\"+opcao.id}\r\n                                  control={<Radio id={\"#\"+opcao.id} color=\"primary\" onClick={e => {\r\n\r\n                                    grupo.opcoes.forEach(opcoesDoGrupo => {\r\n                                      opcoesDoGrupo.quantidade = 0\r\n                                    });\r\n                                    grupo.quantidade = 1\r\n                                    opcao.quantidade = 1\r\n                                    \r\n                                    //console.log(e.target, \"g:\", grupo.quantidade, \"p:\", opcao.quantidade)\r\n                                    document.getElementsByClassName(`#butaoDo${grupo.id}`)[0].classList.remove(\"Mui-disabled\")    \r\n                                    //window.scrollTo(0, document.getElementById(\"BotaoDeAcoes\")?.offsetTop)\r\n                                  } }/>}\r\n                                />\r\n                              </Col>\r\n                              <Col xs={7} md={7} lg={7}  className=\"colNomeAdicional\" >\r\n                                <FormLabel style={{\"cursor\": \"pointer\"}} htmlFor={\"#\"+opcao.id}>{opcao.nome}</FormLabel>\r\n                              </Col>\r\n                              { //se tiver valor\r\n                                opcao.valor && <Col xs={3} md={3} lg={3} className=\"colValorAdicional\">\r\n                                  <FormLabel style={{\"cursor\": \"pointer\"}} htmlFor={\"#\"+opcao.id}>{Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(opcao.valor)}</FormLabel>\r\n                                </Col>\r\n                              }\r\n\r\n                              { //se tiver descricao\r\n                                opcao.descricao && <Col xs={12} md={12} lg={12} style={{\"cursor\": \"pointer\"}} className=\"colDescricaoAdicional\">\r\n                                  <FormLabel style={{\"cursor\": \"pointer\"}} htmlFor={\"#\"+opcao.id}>{opcao.descricao}</FormLabel>\r\n                                </Col>\r\n                              }\r\n\r\n\r\n                              <span style={{\"display\": \"none\"}}>\r\n                                {\r\n                                  console.log(\"nuns\", `${opcao.id}`, opcao.quantidade, grupo.quantidade)\r\n                                }\r\n                                { //GAMBIARRA PARA AO GRUPO COM RADIO VOLTAR SELECIONADO\r\n                                  setTimeout(() => {\r\n                                    if(document.getElementById(\"#\"+opcao.id)){\r\n                                      document.getElementById(\"#\"+opcao.id).checked = opcao.quantidade === 1 ? true : false                                      \r\n                                    }\r\n                                  }, 300) \r\n                                }\r\n                              </span>\r\n\r\n                            </span>\r\n                          ))}\r\n\r\n                         \r\n\r\n\r\n                        </RadioGroup>)\r\n                      : grupo.adicional === 1 //CHECK\r\n                        ?\r\n                        (\r\n                          <FormGroup aria-label=\"position\" name={grupo.id} style={{\"marginBottom\": \"5em\"}}>\r\n                            {grupo.opcoes.map(opcao => (\r\n                              <span className=\"opcaoIndividual row\" key={opcao.id}>\r\n                                <Col xs={2} md={2} lg={1} className=\"colOpcaoAdicional\">\r\n                                  <input type=\"checkbox\" color=\"primary\"  \r\n                                    value={opcao.nome}\r\n                                    name={opcao.nome}     \r\n                                    id={\"#\"+opcao.id}                               \r\n                                    className={\"#OpcaoDe\"+grupo.id}\r\n                                    style={{\"width\": \"23px\", \"height\": \"23px\", \"cursor\": \"pointer\"}}\r\n                                    //checked={opcao.quantidade ? true : false}\r\n                                    //disabled={grupo.quantidade === 1 ? true : false}   \r\n                                    onClick={e => {    \r\n                                      //console.log(e.target.checked)\r\n                                      if(e.target.checked && grupo.quantidade === grupo.quantidadeMaxima){                                         \r\n                                        e.target.checked = false\r\n                                        //console.log(\"1\")              \r\n                                      }else if(!e.target.checked && grupo.quantidade === grupo.quantidadeMaxima){\r\n                                        //console.log(\"2\")\r\n                                        grupo.quantidade--\r\n                                        opcao.quantidade--\r\n                                        e.target.checked = false\r\n                                      }else if(e.target.checked){\r\n                                        //console.log(\"3\")\r\n                                        grupo.quantidade++\r\n                                        opcao.quantidade++\r\n                                      }else{\r\n                                        //console.log(\"4\")\r\n                                        grupo.quantidade--\r\n                                        opcao.quantidade--\r\n                                      }\r\n\r\n                                      if(grupo.quantidade < grupo.quantidadeMinima){\r\n                                        document.getElementsByClassName(`#butaoDo${grupo.id}`)[0].classList.add(\"Mui-disabled\")                                         \r\n                                      }else{\r\n                                        document.getElementsByClassName(`#butaoDo${grupo.id}`)[0].classList.remove(\"Mui-disabled\")                                           \r\n                                      }\r\n\r\n                                      // if(grupo.quantidade === grupo.quantidadeMaxima){\r\n                                      //   window.scrollTo(0, document.getElementById(\"BotaoDeAcoes\")?.offsetTop)\r\n                                      // }\r\n\r\n                                      const newP = produtoSelecionado\r\n                                      setProdutoSelecionado(newP)\r\n                                      //console.log(\"qtd\", grupo.quantidade, opcao.quantidade)\r\n                                    }}  \r\n                                    \r\n                                    //onLoad={document.getElementById(\"#\"+opcao.id).checked = opcao.quantidade === 1 ? true : false}\r\n                                    \r\n                                  />\r\n                                </Col>\r\n                                <Col xs={7} md={7} lg={8}  className=\"colNomeAdicional\">\r\n                                  <FormLabel style={{\"cursor\": \"pointer\"}} htmlFor={\"#\"+opcao.id} control={opcao.nome}>{opcao.nome}</FormLabel>\r\n                                </Col>\r\n                                { //se tiver valor\r\n                                  <Col xs={3} md={3} lg={3} className=\"colValorAdicional\">\r\n                                    {opcao.valor ? <FormLabel htmlFor={\"#\"+opcao.id} style={{\"cursor\": \"pointer\"}}>{Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(opcao.valor)}</FormLabel> : null}\r\n                                  </Col>\r\n                                }\r\n\r\n                                { //se tiver descricao\r\n                                  opcao.descricao ? <>\r\n                                  <Col xs={12} md={12} lg={1}>\r\n                                    \r\n                                  </Col>\r\n\r\n                                  <Col xs={12} md={12} lg={11} className=\"colDescricaoAdicional\">\r\n                                    <FormLabel htmlFor={\"#\"+opcao.id} style={{\"cursor\": \"pointer\"}}>{opcao.descricao}</FormLabel>\r\n                                  </Col>\r\n                                  </> : null\r\n                                }\r\n\r\n                                <span style={{\"display\": \"none\"}}>\r\n                                { //GAMBIARRA PARA AO GRUPO COM CHECKBOX VOLTAR SELECIONADO\r\n                                  setTimeout(() => {\r\n                                    if(document.getElementById(\"#\"+opcao.id)){\r\n                                      document.getElementById(\"#\"+opcao.id).checked = opcao.quantidade === 1 ? true : false                                      \r\n                                    }\r\n                                  }, 300) \r\n                                }\r\n                                </span>\r\n                                \r\n                              </span>\r\n                            ))}\r\n                          </FormGroup>)\r\n                        : grupo.adicional === 2 //QTD \r\n                          ?\r\n                          (<FormGroup aria-label={grupo.id} name={grupo.id} style={{\"marginBottom\": \"5em\"}}>\r\n                            {grupo.opcoes.map( (opcao, index2) => (\r\n                              <span key={opcao.id} className=\"camposAddRemoveAdicionaisQuantitativos opcaoIndividual row\" >\r\n                                <Col xs={4} md={3} lg={2} className=\"colOpcaoAdicional\">\r\n\r\n                                  <ButtonGroup>\r\n                                    <Button\r\n                                      aria-label=\"reduce\"\r\n                                      onClick={()  => {\r\n                                        // REMOVER QTD\r\n                                        if(opcao.quantidade > 0){\r\n                                          document.getElementById(`${opcao.id}`).innerHTML = parseInt(document.getElementById(`${opcao.id}`).innerHTML)-1                                      \r\n                                          opcao.quantidade--\r\n                                          grupo.quantidade--\r\n                                          //console.log(\"remove\", `${opcao.id}`, opcao.quantidade, grupo.quantidade)\r\n                                        }   \r\n                                        if(grupo.quantidade < grupo.quantidadeMinima){\r\n                                          document.getElementsByClassName(`#butaoDo${grupo.id}`)[0].classList.add(\"Mui-disabled\")                                         \r\n                                        }else{\r\n                                          document.getElementsByClassName(`#butaoDo${grupo.id}`)[0].classList.remove(\"Mui-disabled\")                                           \r\n                                        }                                 \r\n                                      }} \r\n                                      style={{\"background\":\"#dc3545\", \"color\":\"white\"}}\r\n\r\n                                    >\r\n                                      <RemoveIcon fontSize=\"small\" />\r\n                                    </Button>\r\n\r\n                                    <Button\r\n                                      aria-label=\"increase\"\r\n                                    >\r\n                                      <span id={opcao.id}>{ /*isNaN(opcao.quantidade) ? opcao.quantidade = 0 : opcao.quantidade = */ opcao.quantidade}</span>\r\n                                    </Button>\r\n\r\n\r\n                                    <Button\r\n                                      aria-label=\"increase\"\r\n                                      style={{\"background\":\"#28a745\", \"color\":\"white\"}}\r\n                                      onClick={() => {   \r\n                                        // ADICIONAR QTD\r\n                                        if(grupo.quantidade < grupo.quantidadeMaxima || !grupo.quantidadeMaxima){\r\n                                          document.getElementById(`${opcao.id}`).innerHTML = parseInt(document.getElementById(`${opcao.id}`).innerHTML)+1\r\n                                          opcao.quantidade++ \r\n                                          grupo.quantidade++\r\n                                          //console.log(\"add\", `${opcao.id}`, opcao.quantidade, grupo.quantidade)\r\n                                        } \r\n    \r\n                                        if(grupo.quantidade < grupo.quantidadeMinima){\r\n                                          document.getElementsByClassName(`#butaoDo${grupo.id}`)[0].classList.add(\"Mui-disabled\")                                         \r\n                                        }else{\r\n                                          document.getElementsByClassName(`#butaoDo${grupo.id}`)[0].classList.remove(\"Mui-disabled\")                                           \r\n                                        }\r\n                                        // if(grupo.quantidade === grupo.quantidadeMaxima){\r\n                                        //   window.scrollTo(0, document.getElementById(\"BotaoDeAcoes\")?.offsetTop)\r\n                                        // }\r\n                                      }}\r\n                                    >\r\n                                      <AddIcon fontSize=\"small\" />\r\n                                    </Button>\r\n                                  </ButtonGroup>\r\n\r\n                                \r\n                                  \r\n                                  {/* <Button onClick={()  => {\r\n                                    // REMOVER QTD\r\n                                    if(opcao.quantidade > 0){\r\n                                      document.getElementById(`${opcao.id}`).innerHTML = parseInt(document.getElementById(`${opcao.id}`).innerHTML)-1                                      \r\n                                      opcao.quantidade--\r\n                                      grupo.quantidade--\r\n                                      //console.log(\"remove\", `${opcao.id}`, opcao.quantidade, grupo.quantidade)\r\n                                    }   \r\n                                    if(grupo.quantidade < grupo.quantidadeMinima){\r\n                                      document.getElementsByClassName(`#butaoDo${grupo.id}`)[0].classList.add(\"Mui-disabled\")                                         \r\n                                    }else{\r\n                                      document.getElementsByClassName(`#butaoDo${grupo.id}`)[0].classList.remove(\"Mui-disabled\")                                           \r\n                                    }                                 \r\n                                  }} color=\"secondary\">\r\n\r\n                                    <RemoveCircleIcon></RemoveCircleIcon>\r\n                                  </Button> */}\r\n                                  \r\n                                  \r\n\r\n                                  {/* <Button onClick={() => {   \r\n                                    // ADICIONAR QTD\r\n                                    if(grupo.quantidade < grupo.quantidadeMaxima || !grupo.quantidadeMaxima){\r\n                                      document.getElementById(`${opcao.id}`).innerHTML = parseInt(document.getElementById(`${opcao.id}`).innerHTML)+1\r\n                                      opcao.quantidade++ \r\n                                      grupo.quantidade++\r\n                                      //console.log(\"add\", `${opcao.id}`, opcao.quantidade, grupo.quantidade)\r\n                                    } \r\n\r\n                                    if(grupo.quantidade < grupo.quantidadeMinima){\r\n                                      document.getElementsByClassName(`#butaoDo${grupo.id}`)[0].classList.add(\"Mui-disabled\")                                         \r\n                                    }else{\r\n                                      document.getElementsByClassName(`#butaoDo${grupo.id}`)[0].classList.remove(\"Mui-disabled\")                                           \r\n                                    }\r\n                                    // if(grupo.quantidade === grupo.quantidadeMaxima){\r\n                                    //   window.scrollTo(0, document.getElementById(\"BotaoDeAcoes\")?.offsetTop)\r\n                                    // }\r\n                                  }} color=\"primary\">\r\n\r\n                                    <AddCircleIcon></AddCircleIcon>\r\n                                  </Button> */}\r\n                                </Col>\r\n                                <Col xs={5} md={6} lg={7} className=\"colNomeAdicional\"><FormLabel>{opcao.nome}</FormLabel> </Col>\r\n\r\n                                { //se tiver valor\r\n                                  <Col xs={3} md={3} lg={3} className=\"colValorAdicional\">\r\n                                    {(opcao.valor || opcao.valor > 0) &&  <FormLabel>{Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(opcao.valor)}</FormLabel>}\r\n                                  </Col>\r\n                                }\r\n\r\n                                { //se tiver descricao\r\n                                  opcao.descricao && <>\r\n                                  <Col xs={12} md={12} lg={2}>\r\n                                  </Col>\r\n                                  <Col xs={12} md={12} lg={10} className=\"colDescricaoAdicional\">\r\n                                    <FormLabel>{opcao.descricao}</FormLabel>\r\n                                  </Col>\r\n                                  </>\r\n                                }\r\n                                <Divider/>\r\n                              </span>\r\n                            ))}\r\n                          </FormGroup>)\r\n                        : grupo.adicional === 3 \r\n                          ?  (<FormGroup aria-label={grupo.id} name={grupo.id} style={{\"marginBottom\": \"5em\"}}>\r\n                          {grupo.opcoes.map( (opcao, index2) => (\r\n                            <span key={opcao.id} className=\"camposAddRemoveAdicionaisQuantitativos opcaoIndividual row\" >\r\n                              <Col xs={4} md={3} lg={2} className=\"colOpcaoAdicional\">\r\n\r\n                                <TextField\r\n                                  // inputProps={{\r\n                                  //   class:\"InputQuantidadeDigitavel\"\r\n                                  // }}\r\n                                  className= \"InputQuantidadeDigitavel\"\r\n                                  size=\"small\"\r\n                                  label=\"Quantidade\"\r\n                                  defaultValue={opcao.quantidade}\r\n                                  onChange={(e) => {\r\n                                    e.target.value = e.target.value.replace(/([^\\d])+/gim, '');\r\n                                    if(!e.target.value){\r\n                                      grupo.quantidade -= opcao.quantidade\r\n                                      opcao.quantidade = 0\r\n                                    }else{\r\n                                        grupo.quantidade -= opcao.quantidade\r\n                                        opcao.quantidade = parseInt(e.target.value)\r\n                                        grupo.quantidade += opcao.quantidade\r\n                                      } \r\n                                      // if(!e.target.value ){\r\n                                      //   opcao.quantidade = 0\r\n                                      //   grupo.quantidade = 0\r\n                                      // }\r\n                                      console.log(\"grupo quantidade\" + grupo.quantidade)\r\n                                      console.log(\"opcao quantidade\" + opcao.quantidade)\r\n                                      if(grupo.quantidade < grupo.quantidadeMinima || grupo.quantidade > grupo.quantidadeMaxima){\r\n                                        document.getElementsByClassName(`#butaoDo${grupo.id}`)[0].classList.add(\"Mui-disabled\")                                         \r\n                                      }else{\r\n                                        document.getElementsByClassName(`#butaoDo${grupo.id}`)[0].classList.remove(\"Mui-disabled\")                                           \r\n                                      }\r\n                                  }}\r\n                                  type=\"number\"\r\n                                  InputLabelProps={{\r\n                                    shrink: true,\r\n                                  }}\r\n                                  variant=\"outlined\"\r\n                                />\r\n                              </Col>\r\n                              <Col xs={5} md={6} lg={7} className=\"colNomeAdicional\"><FormLabel>{opcao.nome}</FormLabel> </Col>\r\n\r\n                              { //se tiver valor\r\n                                <Col xs={3} md={3} lg={3} className=\"colValorAdicional\">\r\n                                  {(opcao.valor || opcao.valor > 0) &&  <FormLabel>{Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(opcao.valor)}</FormLabel>}\r\n                                </Col>\r\n                              }\r\n\r\n                              { //se tiver descricao\r\n                                opcao.descricao && <>\r\n                                <Col xs={12} md={12} lg={2}>\r\n                                </Col>\r\n                                <Col xs={12} md={12} lg={10} className=\"colDescricaoAdicional\">\r\n                                  <FormLabel>{opcao.descricao}</FormLabel>\r\n                                </Col>\r\n                                </>\r\n                              }\r\n                              <Divider/>\r\n                            </span>\r\n                          ))}\r\n                        </FormGroup>)\r\n                        : null\r\n                  }\r\n\r\n                  \r\n\r\n\r\n                  <span style={{\"display\": \"none\"}}>\r\n                    {\r\n                      setTimeout(() => {\r\n                        if(document.getElementById(`Step${activeStep}`) && ScrollAtivo){\r\n                          window.scrollTo(0, document.getElementById(`Step${activeStep}`)?.offsetTop-70)\r\n                        }\r\n                      }, 300)\r\n                    }\r\n                  </span>\r\n                  \r\n\r\n                  {\r\n                    activeStep !== produtoSelecionado.opcoes.length\r\n                    && <div className={classes.actionsContainer} id=\"BotaoDeAcoes\">\r\n                          <div>\r\n                            <Button\r\n                              onClick={handleBack}\r\n                              className={classes.button}\r\n                            >\r\n                              Voltar\r\n                          </Button>\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() => {   \r\n                                setScrollAtivo(true)              \r\n                                if((grupo.quantidadeMaxima === null || grupo.quantidade <= grupo.quantidadeMaxima) && (grupo.quantidadeMinima === null || grupo.quantidade >= grupo.quantidadeMinima)){\r\n                                  setProdutoSelecionado(produtoSelecionado)\r\n                                  setActiveStep((prevActiveStep) => prevActiveStep + 1)\r\n                                }else if(grupo.quantidade > grupo.quantidadeMaxima){\r\n                                  alertStart(\"Você ultrapassou quantidade maxima\", \"warning\")\r\n                                }else if(grupo.quantidade < grupo.quantidadeMinima){\r\n                                  alertStart(\"Você tem uma quantidade minima de escolhas\", \"warning\")\r\n                                }else{\r\n                                  Sentry.captureMessage(`algum erro em relação aos adicionais nao identificado - ${aplicativoDados?.appNome}`);\r\n                                  alertStart(\"algum erro em relação aos adicionais nao identificado\", \"warning\")\r\n                                }                 \r\n                              }}\r\n                              className={classes.button + ` #butaoDo${grupo.id} ` + ((((grupo.quantidadeMinima || grupo.adicional == 0) && (grupo.quantidade < grupo.quantidadeMinima)) || (grupo.adicional == 0 && grupo.quantidade == 0)) ? ' Mui-disabled ' : '') }\r\n                            > \r\n                              {(activeStep === (produtoSelecionado.opcoes.length - 1)) ? 'Finalizar' : 'Proximo'}\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                  }\r\n\r\n\r\n                </StepContent>\r\n              </Step>\r\n            ))}\r\n          </Stepper>)\r\n          : null}\r\n\r\n\r\n          \r\n\r\n          {activeStep === produtoSelecionado.opcoes.length && (\r\n            <Paper id={`Step${produtoSelecionado.opcoes.length}`} square elevation={0} className={classes.resetContainer}>\r\n\r\n              \r\n              <Col xs={12} md={12} lg={12}>\r\n                <Typography style={{\"textAlign\": \"center\"}}>Quantos desse produto?</Typography>\r\n              </Col>\r\n              <Col xs={12} md={12} lg={12} className=\"colOpcaoAdicionalProduto\">\r\n\r\n\r\n              <ButtonGroup>\r\n                <Button\r\n                  aria-label=\"reduce\"\r\n                  onClick={()  => {\r\n                    if(quantidade > 1){\r\n                      setQuantidade(quantidade-1)\r\n                    }\r\n                  }}\r\n                  style={{\"background\":\"#dc3545\", \"color\":\"white\"}}\r\n                >\r\n                  <RemoveIcon fontSize=\"small\" />\r\n                </Button>\r\n\r\n                <Button\r\n                  aria-label=\"increase\"\r\n                  \r\n                >\r\n                   <span>{quantidade}</span>\r\n                </Button>\r\n\r\n\r\n                <Button\r\n                  aria-label=\"increase\"\r\n                  style={{\"background\":\"#28a745\", \"color\":\"white\"}}\r\n                  onClick={() => {setQuantidade(quantidade+1)}}\r\n                >\r\n                  <AddIcon fontSize=\"small\" />\r\n                </Button>\r\n              </ButtonGroup>\r\n\r\n              \r\n                {/* <Button onClick={()  => {\r\n                  if(quantidade > 1){\r\n                    setQuantidade(quantidade-1)\r\n                  }\r\n                }} color=\"secondary\">\r\n                  <RemoveCircleIcon></RemoveCircleIcon>\r\n                </Button>\r\n\r\n                <span>{quantidade}</span>\r\n\r\n                <Button onClick={() => {setQuantidade(quantidade+1)}} color=\"primary\">\r\n                  <AddCircleIcon></AddCircleIcon>\r\n                </Button> */}\r\n\r\n\r\n              </Col>\r\n\r\n              {produtoSelecionado.permiteObservacao\r\n              ? (<>\r\n                <Col xs={12} md={12} lg={12} style={{\"marginTop\": \"1em\"}}>\r\n                  <Typography style={{\"textAlign\": \"center\"}}>Alguma observação?</Typography>\r\n                </Col>\r\n                <Col xs={12} md={12} lg={12} style={{\"marginBottom\": \"1em\"}}>\r\n                  <TextField style={{\"margin\": \"0\"}}\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  value={observacao}\r\n                  onChange={(e) => {setObservacao(e.target.value)}}\r\n                  id=\"observacaoPedido\"\r\n                  label=\"Observação\"\r\n                  name=\"observacaoPedido\"\r\n                  type=\"text\"\r\n                  ></TextField>\r\n                </Col>\r\n              </>)\r\n              : null}\r\n\r\n\r\n              {\r\n                /*activeStep === 0 && <Button onClick={handleBack} className={classes.button}>\r\n                  Voltar\r\n                </Button>\r\n                \r\n                <Button onClick={resetarAdicionais} className={classes.button}>\r\n                  Voltar\r\n                </Button>\r\n              */\r\n              }\r\n\r\n\r\n              \r\n              \r\n              \r\n\r\n              <Button onClick={voltar} className={classes.button}>\r\n                Cancelar\r\n              </Button>\r\n\r\n              {\r\n                activeStep > 0 &&\r\n                <Button onClick={handleBack} className={classes.button}>\r\n                  Voltar\r\n              </Button>\r\n              }\r\n\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                id=\"tag-manager-add-cart\"\r\n                onClick={adicionarCarrinho}\r\n                className={classes.button}\r\n              >\r\n                Adicionar <span className={\"valorFinalizarPedido\"} style={{\"color\":\"#000000de\"}}>{Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(calcularValorProduto())}</span>\r\n            </Button>\r\n            </Paper>\r\n          )}\r\n\r\n  \r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Cadastro\\comum.js",["283","284","285","286"],"import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport * as Sentry from \"@sentry/react\";\r\n\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ReactPixel from 'react-facebook-pixel';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport {\r\n  CadastrarUsuario,\r\n  AtualizarDispositivoUsuario,\r\n  ObterCardapioCompletoV1,\r\n  LoginGeral,\r\n  identificarEstabelecimentoSelecionado,\r\n  CadastrarEnderecoCliente,\r\n} from '../../services/functions';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport './styles.css';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  rootAlert: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n  const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))  \r\n  \r\n  \r\n  const [nome, setNome] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [telefone, setTelefone] = useState('');\r\n  const [confirmarSenha, setConfirmarSenha] = useState('');\r\n  const [estabelecimentoAtual, setEstabelecimentoAtual] = useState(JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\")));\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const search = props.location.search;\r\n  const params = new URLSearchParams(search);\r\n  const [codigoIndicacao, setCodigoIndicacao] = React.useState({\"abrir\": false, \"codigo\": params.get('codigoAmigo') ? params.get('codigoAmigo') : \"\" });\r\n  const [alert, setAlert] = useState({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n\r\n\r\n\r\n  const cadastrarUsuario = async (e) =>{\r\n    try {\r\n      e.preventDefault()\r\n      //console.log(\"cadastrarUsuario\", cadastrarUsuario)\r\n\r\n      let telefoneReplace = telefone.replace(' ', '').replace('.','').replace('-','').replace('(','').replace(')','').replace('/','')\r\n      \r\n      if(telefoneReplace.charAt(0) == \"0\"){\r\n        telefoneReplace = telefoneReplace.substring(1)\r\n      }\r\n\r\n      \r\n      \r\n      if(senha.length < 6){\r\n        alertStart(\"Sua senha deve conter no minimo 6 caracteres!\", \"warning\")\r\n        return false\r\n      }else if(confirmarSenha !== senha){\r\n        alertStart(\"Senhas digitadas não são compativeis!\", \"warning\")      \r\n        return false\r\n      }else if(!(telefoneReplace.length >= 10 && telefoneReplace.length <= 11)){\r\n        alertStart(\"Seu telefone esta incompleto, verifique se você digitou o DDD e o digito 9!\", \"warning\")\r\n        return false\r\n      }\r\n\r\n      setLoading(true)\r\n\r\n      //ENVIAR CADASTRO\r\n      \r\n      const data = {\r\n        \"appNome\": aplicativoDados.appNome,\r\n        \"nome\": nome,\r\n        \"telefone\": telefone,\r\n        \"dataNascimentoTexto\": '',\r\n        \"email\": email ? email : '55'+telefoneReplace+\"@c.us\",\r\n        \"hashSenha\": senha,\r\n        \"cpf\": '',\r\n        \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n      }\r\n\r\n      if(codigoIndicacao){\r\n        data.codigoAmigo = codigoIndicacao.codigo\r\n      }\r\n  \r\n      //console.log(\"CadastrarUsuario\", data)\r\n\r\n      const response = await CadastrarUsuario(data, aplicativoDados)\r\n  \r\n      if(response.retornoErro){\r\n        //algum erro\r\n        alertStart(email === \"\" ? response.mensagem.replace(\"email\", \"telefone\") : response.mensagem, \"error\")\r\n        setLoading(false)\r\n        return false\r\n      }else{ \r\n        //tudo certo\r\n\r\n        if(aplicativoDados.pixelFacebook){\r\n            ReactPixel.track('CompleteRegistration')\r\n        }\r\n\r\n        alertStart(\"Seu usuario foi cadastrado corretamente! Aguarde o login automatico.\", \"success\")\r\n        realizarLogin_UsuarioSenha(response.email, response.hashSenha)\r\n        //CHAMAR LOGIN\r\n      }\r\n    }\r\n    catch (error) {\r\n        Sentry.captureMessage(`NotFunctions CadastrarUsuario ${window.location.hostname} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores! Erro: \" + error.message, \"error\")  \r\n        setLoading(false)\r\n    }\r\n    return true\r\n  }\r\n\r\n  function calcularValorTotal(carrinho){\r\n    \r\n    const cardapio = JSON.parse(localStorage.getItem('cardapioCF'))\r\n    const enderecoAtual = JSON.parse(localStorage.getItem('enderecoAtualCF'))\r\n\r\n    let valorTotalItens = 0;\r\n    let valorProdutosPromocionais = 0;\r\n\r\n    carrinho.pedido.itens.forEach(item => {\r\n      valorTotalItens += item.valorProdutoHistorico      \r\n      if(item.produto.promocional){\r\n        valorProdutosPromocionais += item.valorProdutoHistorico\r\n      }\r\n    })\r\n\r\n    //console.log(\"valorProdutosPromocionais\", valorProdutosPromocionais)\r\n    //console.log(\"valorPrduto\", valorTotalItens)\r\n    \r\n    \r\n\r\n\r\n    let taxaDeEntrega = 0\r\n    if(carrinho.pedido.tipoPedido !== 1 && !(valorTotalItens > cardapio.minimoEntregaGratis && cardapio.minimoEntregaGratis > 0)){ // NAO FOR RETIRADA NO LOCAL\r\n      taxaDeEntrega = carrinho.pedido.valorEntrega ? carrinho.pedido.valorEntrega : enderecoAtual.taxaEntrega ? enderecoAtual.taxaEntrega : 0\r\n    }\r\n\r\n    let valorFinalProdutos = 0;\r\n    if(cardapio.percentualDesconto && (cardapio.valorDesconto === 0 || !cardapio.valorDesconto)){\r\n      //desconto percetual - apenas em produtos nao promocionais\r\n      var descontoPercentual = ((valorTotalItens - valorProdutosPromocionais) * cardapio.percentualDesconto) / 100\r\n\r\n      //maximo que pode dar de desconto\r\n      if(cardapio.maximoDesconto && descontoPercentual > cardapio.maximoDesconto){\r\n        descontoPercentual = cardapio.maximoDesconto\r\n      }\r\n      \r\n\r\n      carrinho.percentualDescontoValor = descontoPercentual\r\n      valorFinalProdutos = ( valorTotalItens - descontoPercentual ) \r\n\r\n    }else{\r\n      //desconto fixo - apenas em produtos nao promocionais\r\n      var descontoFixo = carrinho.pedido.valorDesconto\r\n\r\n      //maximo que pode dar de desconto\r\n      if(cardapio.maximoDesconto && descontoFixo > cardapio.maximoDesconto){\r\n        descontoFixo = cardapio.maximoDesconto\r\n      }\r\n\r\n      let produtosNaoPromocionais = valorTotalItens - valorProdutosPromocionais\r\n      produtosNaoPromocionais -= descontoFixo      \r\n      valorFinalProdutos = valorProdutosPromocionais + (produtosNaoPromocionais > 0 ? produtosNaoPromocionais : 0)     \r\n    }\r\n\r\n    //console.log(\"valorFinalProdutos\", valorFinalProdutos)\r\n    if(valorFinalProdutos < 0){\r\n      carrinho.pedido.valorTotal = taxaDeEntrega\r\n    }else{\r\n      carrinho.pedido.valorTotal = valorFinalProdutos + taxaDeEntrega\r\n    }\r\n\r\n\r\n\r\n    if(carrinho.pedido.valorTotal < 0){\r\n      carrinho.pedido.valorTotal = 0.0\r\n    }\r\n\r\n    localStorage.setItem(\"carrinhoCF\", JSON.stringify(carrinho))     \r\n\r\n  }\r\n\r\n  const adicionarEndereco = async (usuarioLogado) => {  \r\n    var resp = null;\r\n\r\n    try {\r\n      const enderecoBackUp = JSON.parse(localStorage.getItem(\"enderecoAtualCF\"))\r\n      const data = {\r\n        \"idCliente\": usuarioLogado.cliente.id,\r\n        \"idEstabelecimento\": JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\"))?.id ? JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\"))?.id  : null,\r\n        \"cep\": enderecoBackUp.cep,\r\n        \"uf\": enderecoBackUp.uf,\r\n        \"cidade\": enderecoBackUp.cidade,\r\n        \"bairro\": enderecoBackUp.bairro,\r\n        \"logradouro\": enderecoBackUp.logradouro,\r\n        \"numero\": enderecoBackUp.numero,\r\n        \"complemento\": enderecoBackUp.complemento,\r\n        \"referencia\":  enderecoBackUp.referencia,\r\n        \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n      }\r\n\r\n      if(enderecoBackUp.bairroEspecifico){\r\n        data.bairroEspecifico = 1\r\n      }else{\r\n        data.bairroEspecifico = 0\r\n      }\r\n\r\n      const response = await CadastrarEnderecoCliente(data, aplicativoDados)\r\n  \r\n      if(response.retornoErro){\r\n        //algum erro\r\n        alertStart(response.mensagem, \"error\")\r\n      }else{ \r\n        //tudo certo\r\n        usuarioLogado.cliente.enderecos.push(response)\r\n        localStorage.setItem('usuarioCF', JSON.stringify(usuarioLogado))\r\n        resp = response.id\r\n      }\r\n    }\r\n    catch (error) {\r\n        Sentry.captureMessage(`NotFunctions CadastrarEnderecoCliente ${window.location.hostname} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores! Erro CadastrarEnderecoCliente: \"+error.message, \"error\")    \r\n    }\r\n    return resp\r\n  }\r\n\r\n  async function buscaCardapioInicial(usuarioLogado) {\r\n    try {\r\n      const cardapio = JSON.parse(localStorage.getItem(\"cardapioCF\"))\r\n      if(aplicativoDados.possuiDelivery === true){\r\n        if(!cardapio || cardapio.id === \"usuarioDeslogado\"){\r\n          \r\n          var idEndereco = null\r\n          if(!!JSON.parse(localStorage.getItem(\"enderecoAtualCF\")).bairro){\r\n            idEndereco = await adicionarEndereco(usuarioLogado);\r\n            console.log('cadastrar endereco', idEndereco)\r\n          }\r\n\r\n          let data = {\r\n            \"idCliente\": usuarioLogado.cliente.id,\r\n            \"idEstabelecimento\": localStorage.getItem('estabelecimentoAtualCF') ? JSON.parse(localStorage.getItem('estabelecimentoAtualCF')).id : usuarioLogado.estabelecimentos[0].id,\r\n            \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          }      \r\n          \r\n          if(idEndereco){\r\n            data.idEndereco = idEndereco\r\n          }\r\n\r\n          const response = await ObterCardapioCompletoV1(data, aplicativoDados)\r\n  \r\n          if(response.retornoErro){\r\n            //algum erro\r\n            alertStart(response.mensagem, \"error\")\r\n          }else{ \r\n            //tudo certo\r\n            const retorno = response\r\n      \r\n              localStorage.setItem(\"cardapioCF\", JSON.stringify(retorno))                        \r\n              localStorage.setItem(\"enderecoAtualCF\", JSON.stringify(!!retorno.enderecos[0] ? retorno.enderecos[0] : {}))\r\n      \r\n              const carrinhoRetorno = JSON.parse(localStorage.getItem(\"carrinhoCF\")) \r\n      \r\n              carrinhoRetorno.valorMinimoPedido = retorno.valorMinimoPedido\r\n              carrinhoRetorno.valorDesconto = retorno.valorDesconto\r\n              carrinhoRetorno.percentualDesconto = retorno.percentualDesconto\r\n              carrinhoRetorno.minimoEntregaGratis = retorno.minimoEntregaGratis\r\n              carrinhoRetorno.maximoPedidoComDesconto = retorno.maximoPedidoComDesconto\r\n              carrinhoRetorno.maximoDesconto = retorno.maximoDesconto\r\n              carrinhoRetorno.cupomDesconto = retorno.cupomDesconto\r\n\r\n              const produtosDoCarrinho = JSON.parse(localStorage.getItem('backupItensCarrinhoCF'))\r\n              localStorage.removeItem('backupItensCarrinhoCF')\r\n              carrinhoRetorno.pedido = {\r\n                \"entregaImediata\": false,\r\n                \"formaPagamento\": {},\r\n                \"itens\": produtosDoCarrinho?.length > 0 ? produtosDoCarrinho :  [],\r\n                \"taxaEntrega\": !!retorno.enderecos[0] ? retorno.enderecos[0].taxaEntrega : null,\r\n                //\"tipoDesconto\": null,\r\n                \"tokenCartaoCredito\": null,\r\n                \"troco\": null,\r\n                \"valorDesconto\": carrinhoRetorno.valorDesconto,\r\n                \"valorEntrega\": null,\r\n                \"valorTotal\": 0,\r\n                \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n              }\r\n              localStorage.setItem(\"carrinhoCF\", JSON.stringify(carrinhoRetorno))     \r\n      \r\n              if(produtosDoCarrinho?.length > 0){\r\n                calcularValorTotal(carrinhoRetorno)\r\n              }\r\n              \r\n              if(usuarioLogado.estabelecimentos.length === 1 || (JSON.parse(localStorage.getItem('estabelecimentoAtualCF'))?.id && produtosDoCarrinho?.length > 0)){\r\n                history.push(`/delivery${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n              }else if(usuarioLogado.estabelecimentos.length > 1 ){\r\n                history.push(`/estabelecimento`)\r\n              }\r\n          }\r\n        \r\n        }else{\r\n          history.push(`/delivery${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n        }\r\n      }else{\r\n        history.push(`/fidelidade${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n      }  \r\n    }\r\n    catch (error) {\r\n        Sentry.captureMessage(`NotFunctions adicionarEndereco ${window.location.hostname} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores! Erro adicionarEndereco: \"+error.message, \"error\")\r\n        setLoading(false)        \r\n    }\r\n\r\n  \r\n\r\n  }\r\n\r\n  async function realizarLogin_UsuarioSenha(usuarioVerificado, senhaVerificado) {\r\n\r\n    // os 2 parametros: usuarioVerificado e senhaVerificado\r\n    // são para usuarios que conectao por telefone, apenas reutilizei essa funcao para nao criar outra\r\n\r\n    try {\r\n      setLoading(true)\r\n      const data = {\r\n        \"appNome\": aplicativoDados.appNome,\r\n        \"cliente\":{\r\n          \"email\": usuarioVerificado,\r\n          \"hashSenha\": senhaVerificado,\r\n          \"appNome\": aplicativoDados.appNome,\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n        },\r\n        \"localizacao\":{\r\n          \"latitude\": \"\",\r\n          \"longitude\": \"\",\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          \"appNome\": aplicativoDados.appNome,\r\n        },\r\n        \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n      }\r\n      const response = await LoginGeral(data, aplicativoDados)\r\n  \r\n      if(response.retornoErro){\r\n        //algum erro\r\n        alertStart(response.mensagem, \"error\")\r\n        setLoading(false)\r\n\r\n      }else{ \r\n        //tudo certo\r\n\r\n        if(localStorage.getItem('tokenNotificationFirebase')){\r\n          if( response.cliente.codigoDispositivo !== localStorage.getItem('tokenNotificationFirebase' )){\r\n            response.cliente.codigoDispositivo = localStorage.getItem('tokenNotificationFirebase')\r\n            response.cliente.token = `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`\r\n            AtualizarDispositivoUsuario(response.cliente, aplicativoDados)\r\n          }\r\n        }\r\n\r\n        \r\n        localStorage.setItem('usuarioCF', JSON.stringify(response));\r\n\r\n        if(!JSON.parse(localStorage.getItem(\"enderecoAtualCF\"))?.bairro){\r\n          localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({}))\r\n        }\r\n\r\n        if(!JSON.parse(localStorage.getItem(\"carrinhoCF\"))){\r\n          localStorage.setItem(\"carrinhoCF\", JSON.stringify({}))\r\n        }\r\n\r\n        if(!localStorage.getItem(\"estabelecimentoAtualCF\")){\r\n          localStorage.setItem(\"estabelecimentoAtualCF\", JSON.stringify(response.estabelecimentos[0]))\r\n        }\r\n\r\n        if(response.estabelecimentos.length > 0){\r\n          await buscaCardapioInicial(response)\r\n        }else{\r\n          alertStart(\"Nenhum estabelecimento disponivel para esse usuario\", \"error\")   \r\n        }\r\n      }\r\n    }\r\n    catch (error) {\r\n        console.log('error ', error)\r\n        Sentry.captureMessage(`NotFunctions LoginGeral ${window.location.hostname} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores! Erro LoginGeral: \"+error.message, \"error\")    \r\n    }\r\n      \r\n  }\r\n\r\n  const alertStart = (msg, tipo) => {\r\n    setAlert({\"status\": true, \"tipo\": tipo, \"mesangem\": msg});\r\n  };\r\n  const alertClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlert({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      <Snackbar open={alert.status} autoHideDuration={6000} onClose={alertClose}>\r\n        <Alert onClose={alertClose} severity={alert.tipo}>\r\n          {alert.mesangem}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n      \r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Cadastrar Usuário\r\n        </Typography>\r\n        <form className={classes.form + \" container\"} onSubmit={cadastrarUsuario} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            onChange={e => setNome(e.target.value)}\r\n            id=\"nome\"\r\n            value={nome}\r\n            label=\"Nome\"\r\n            name=\"nome\"\r\n          />\r\n          \r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            min=\"10\"\r\n            max=\"11\"\r\n            value={telefone}\r\n            onChange={e => { setTelefone(e.target.value) }}\r\n            name=\"telefone\"\r\n            label=\"Telefone\"\r\n            type=\"number\"\r\n            id=\"telefone\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            name=\"email\"\r\n            label=\"Email (opcional)\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            min=\"6\"\r\n            required\r\n            fullWidth\r\n            value={senha}\r\n            onFocus={ () => {\r\n              window.scrollTo(0, document.querySelector(\"html\").scrollHeight)\r\n            }}\r\n            onChange={e => setSenha(e.target.value)}\r\n            name=\"senha\"\r\n            label=\"Senha\"\r\n            type=\"password\"\r\n            id=\"senha\"\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            min=\"6\"\r\n            onFocus={ () => {\r\n              window.scrollTo(0, document.querySelector(\"html\").scrollHeight)\r\n            }}\r\n            value={confirmarSenha}\r\n            onChange={e => setConfirmarSenha(e.target.value)}\r\n            name=\"confirmarSenha\"\r\n            label=\"Confirmar Senha\"\r\n            type=\"password\"\r\n            id=\"confirmarSenha\"\r\n          />\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link onClick={() => {\r\n                setCodigoIndicacao({\"abrir\": true, \"codigo\": codigoIndicacao.codigo})\r\n              }} variant=\"body2\" style={{\"color\":`${aplicativoDados.corSitePrimaria}`}}>\r\n                Código do Amigo {<b>{codigoIndicacao.codigo}</b>} \r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Cadastrar\r\n          </Button>\r\n\r\n          <Grid container style={{\"textAlign\": \"center\"}}>\r\n            <Grid item xs>\r\n              <Link to={`/login${identificarEstabelecimentoSelecionado(aplicativoDados)}`} variant=\"body2\" style={{\"color\":`${aplicativoDados.corSitePrimaria}`}}>\r\n                Ja tenho usuário\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          \r\n        </form>\r\n      </div>\r\n\r\n\r\n            <Dialog\r\n              open={codigoIndicacao.abrir}\r\n              aria-labelledby=\"codigoIndicacao\">\r\n              <DialogTitle id=\"codigoIndicacao\">{\"Código de Indicação\"}</DialogTitle>\r\n\r\n\r\n              <DialogContent>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  onChange={(e) =>{setCodigoIndicacao({\"abrir\": true, \"codigo\": e.target.value})}}\r\n                  value={codigoIndicacao.codigo}\r\n                  id=\"codigoIndicacao\"\r\n                  label=\"Código de Amigo\"\r\n                  name=\"codigoIndicacao\"\r\n                  type=\"text\"\r\n                  //autoFocus\r\n                />\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n\r\n                <Button onClick={(e) => {setCodigoIndicacao({\"abrir\": false, \"codigo\": codigoIndicacao.codigo})}} style={{\"color\": \"#dc3545\"}}>\r\n                  Voltar\r\n                </Button>\r\n                \r\n                <Button onClick={(e) => {setCodigoIndicacao({\"abrir\": false, \"codigo\": codigoIndicacao.codigo})}} style={{\"color\": \"white\", \"backgroundColor\":\"#28a745\"}}>\r\n                  Pronto\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n    </Container>\r\n\r\n\r\n  );\r\n}\r\n","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Deslogado\\estabelecimentos.js",["287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './styles.css';\r\nimport Cabecalho from '../Global/cabecalho';\r\nimport Rodape from '../Global/rodape';\r\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\r\nimport PersonPinCircleIcon from '@material-ui/icons/PersonPinCircle';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport ReactPixel from 'react-facebook-pixel';\r\nimport * as Sentry from \"@sentry/react\"; \r\n\r\nimport {identificarEstabelecimentoSelecionado, Post_ListarEstabelecimentosPorEndereco, CadastrarEnderecoCliente, ObterCardapio, ObterCardapioCompletoV1, ComumCep } from '../../services/functions';\r\n\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\n\r\nimport AlertFixo from '@material-ui/lab/Alert';\r\n\r\nimport api from '../../services/api';\r\nimport enderecosVazios from '../../assets/endereco-flat.svg';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {fade, makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n//alert\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\n//import Loading from '../loading';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // root: {\r\n  //   maxWidth: 345,\r\n  // },\r\n  rootAlerts: {\r\n    margin: \"0 0 1em 0\",\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 999,\r\n    color: '#fff', \r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\n\r\nconst verificarSeEntrega = (estabelecimento, lojas) => {\r\n  for(var i = 0; i < lojas.length; i++){\r\n    if(lojas[i].id == estabelecimento.id){\r\n      if(lojas[i].taxaEntrega < 0){\r\n        return false\r\n      }else{\r\n        return true\r\n      }\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nconst qtdFiltro = (estabelecimentos, tipo, retirada, endereco, exibirTodasLojas) => {\r\n  if(retirada === true && (tipo != 1 && tipo != 2)){\r\n    tipo = 5\r\n  }\r\n\r\n  if(tipo === 0 && endereco === true && exibirTodasLojas === false ){\r\n    tipo = 7\r\n  }\r\n  \r\n  if(tipo === 0 && exibirTodasLojas === false){\r\n    tipo = 6\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  console.log(estabelecimentos, tipo, retirada, endereco, exibirTodasLojas)\r\n\r\n  // 0 = Todos \r\n  // 1 = aberto\r\n  // 2 = fechado\r\n  // 3 = Entregam\r\n  // 4 = nao entrega\r\n  // 5 = retirada\r\n  // 6 = nao exibir todas lojas \r\n  \r\n  let num = 0\r\n\r\n  if(estabelecimentos){\r\n    if(tipo == 0){\r\n      num = estabelecimentos.length\r\n    }else if(tipo == 1 || tipo == 2 || tipo == 6 ){\r\n      const estabelecimentos = document.getElementsByClassName(\"estabelecimento\")\r\n      console.log('estabelecimentosestabelecimentos', estabelecimentos)\r\n      for(let i = 0; i < estabelecimentos.length; i++){\r\n        if(estabelecimentos[i].style.display != \"none\"){\r\n          num++\r\n        }\r\n      }\r\n    }else{\r\n      estabelecimentos.forEach(loja => {  \r\n        if(tipo == 7 && loja.taxaEntrega >= 0){\r\n          num++\r\n        } else  \r\n        if(tipo == 5 && loja.permiteRetiradaBalcao){\r\n          num++\r\n        }else if(tipo == 3 && (loja.taxaEntrega >= 0)){\r\n          num++\r\n        }else if(tipo == 4 && (loja.taxaEntrega == -1)){\r\n          num++\r\n        }\r\n      })\r\n    }\r\n  }\r\n  console.log('qtd', num)\r\n  return num \r\n}\r\n\r\nconst quantoEntregam = (estabelecimentos, todos = true, retirada = false) => {\r\n  console.log(estabelecimentos, todos, retirada)\r\n  let num = 0\r\n  if(estabelecimentos){\r\n    estabelecimentos.forEach(loja => {     \r\n      if(!retirada && todos == true){\r\n        num++\r\n      }else if(!retirada && loja.taxaEntrega >= 0 && todos == false){\r\n        num++\r\n      }else if(loja.permiteRetiradaBalcao && retirada){\r\n        num++\r\n      }\r\n    })\r\n  }\r\n  console.log('quantoEntregam', num)\r\n  return num \r\n}\r\n\r\nfunction removeAcento (text){       \r\n  text = text.toLowerCase();                                                         \r\n  text = text.replace(new RegExp('[ÁÀÂÃ]','gi'), 'a');\r\n  text = text.replace(new RegExp('[ÉÈÊ]','gi'), 'e');\r\n  text = text.replace(new RegExp('[ÍÌÎ]','gi'), 'i');\r\n  text = text.replace(new RegExp('[ÓÒÔÕ]','gi'), 'o');\r\n  text = text.replace(new RegExp('[ÚÙÛ]','gi'), 'u');\r\n  text = text.replace(new RegExp('[Ç]','gi'), 'c');\r\n  return text;                 \r\n}\r\n\r\nconst procurarEstabelecimento = (e) => {\r\n  const valorPesqusa = removeAcento(e.target.value.toLocaleLowerCase())\r\n  const estabelecimentos = document.getElementsByClassName(\"estabelecimento\")\r\n\r\n  for(let j = 0; j < estabelecimentos.length; j++){\r\n    const nome = removeAcento(estabelecimentos[j].getElementsByClassName(\"nomeLoja\")[0].innerHTML.toLocaleLowerCase()).includes(valorPesqusa)\r\n    const descricao = removeAcento(estabelecimentos[j].getElementsByClassName(\"descricaoLoja\")[0].innerHTML.toLocaleLowerCase()).includes(valorPesqusa) \r\n    if(nome || descricao){\r\n      estabelecimentos[j].style.display = \"\"\r\n    }else{\r\n      estabelecimentos[j].style.display = \"none\"\r\n    }\r\n  }\r\n}\r\n\r\nconst possuiOpcao = (array, string) => {\r\n  for(var i = 0; i < array.length; i++){\r\n    if(array[i] === string){\r\n      return true\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\n\r\nexport default function Estabelecimentos() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const [confirmarTipoEntrega, setConfirmarTipoEntrega] = useState(false);\r\n  \r\n  \r\n  const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))\r\n  const usuarioLogado = JSON.parse(localStorage.getItem(\"usuarioCF\"))  \r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const SkeletonQtd = [0,1,2,3,4,5]\r\n  const [verTodasAsLojas, setVerTodasAsLojas] = useState(false);\r\n  const [temAlgum, setTemAlgum] = useState(true);\r\n  const [enderecoAtual, setEnderecoAtual] = useState(JSON.parse(localStorage.getItem(\"enderecoAtualCF\")));\r\n\r\n  let estabelecimentosCepDeslogadoCF = []\r\n  try {\r\n    estabelecimentosCepDeslogadoCF = JSON.parse(localStorage.getItem('estabelecimentosCepDeslogadoCF'))\r\n  } catch (error) {\r\n    \r\n  }\r\n  // const [estabelecimentos, setEstabelecimentos] = useState(enderecoAtual?.bairro ? ( (usuarioLogado?.logado || (!localStorage.getItem('estabelecimentosCepDeslogadoCF') || localStorage.getItem('estabelecimentosCepDeslogadoCF') == \"undefined\"))  ? aplicativoDados.estabelecimentos : JSON.parse(localStorage.getItem('estabelecimentosCepDeslogadoCF'))) : (aplicativoDados.estabelecimentos.length > 0 ? aplicativoDados.estabelecimentos : []));\r\n  const [estabelecimentos, setEstabelecimentos] = useState(\r\n\r\n    ((enderecoAtual?.bairro && estabelecimentosCepDeslogadoCF?.length === 0)\r\n    ? estabelecimentosCepDeslogadoCF\r\n    : (aplicativoDados?.estabelecimentos?.length > 0 \r\n        ? aplicativoDados.estabelecimentos \r\n        : [])).filter((e) => e.visivel === true)\r\n\r\n  );\r\n  \r\n  const [abrirAdicionarEndereco, setAbrirAdicionarEndereco] = useState(false);\r\n  const [estabelecimentoDesejado, setEstabelecimentoDesejado] = useState({});\r\n\r\n  const [confirmarDesejo, setConfirmarDesejo] = useState(false);\r\n  const [bairrosCepUnico, setBairrosCepUnico] = React.useState([]);\r\n  const [bairroCepUnicoSelecionado, setBairroCepUnicoSelecionado] = React.useState('');\r\n  const [retirarNoLocal, setRetirarNoLocal] = React.useState(enderecoAtual?.id == \"retirada\" ? true : false);\r\n  const [cep, setCep] = React.useState('');\r\n  const [uf, setUf] = React.useState('');\r\n  const [cidade, setCidade] = React.useState('');\r\n  const [bairro, setBairro] = React.useState('');\r\n  const [rua, setRua] = React.useState('');\r\n  const [numero, setNumero] = React.useState('');\r\n  const [complemento, setComplemento] = React.useState('');\r\n  const [referencia, setReferencia] = React.useState('');\r\n  const [popUpCep, setPopUpCep] = React.useState(false);\r\n  const [filtroSelect, setFiltroSelect] = React.useState(0);\r\n  const [quantosEntregam, setQuantosEntregam] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    setQuantosEntregam(qtdFiltro(estabelecimentos, filtroSelect, !!retirarNoLocal, !!enderecoAtual?.logradouro, (aplicativoDados?.exibirTodasUnidadesNoDelivery || verTodasAsLojas) ? true : false));\r\n  }, [retirarNoLocal, estabelecimentos, filtroSelect, enderecoAtual, verTodasAsLojas])\r\n\r\n  useEffect(() => {\r\n\r\n    if(aplicativoDados.pixelFacebook){\r\n          ReactPixel.track('Search')\r\n    }\r\n\r\n    if(retirarNoLocal){\r\n      filtroTipoRetirada(true)\r\n    }else if(enderecoAtual?.bairro){\r\n      listarEstabelecimentosPorEndereco(enderecoAtual)\r\n    }\r\n    \r\n\r\n    // const interval = setInterval(() => {\r\n    //     //console.log(\"procurando atualizações \")\r\n    //     if(!aplicativoDados.clienteFielStart){\r\n    //       verificarAberto()\r\n    //       buscarUltimoPedido()  \r\n    //     }\r\n    //     // if(new Date() - new Date(localStorage.getItem('dateCardapioCF')) > 300000){\r\n    //     //   verificarCardapio(estabelecimentoAtual)\r\n    //     // }\r\n    // }, 10000);\r\n    // return () => clearInterval(interval);\r\n  }, []);\r\n\r\n\r\n  const allBanners = () => {\r\n    var array = []\r\n    for(let i = 0; i < aplicativoDados?.estabelecimentos?.length; i++){\r\n        if(aplicativoDados.estabelecimentos[i].banners){\r\n          for(let j = 0; j < aplicativoDados.estabelecimentos[i].banners.length; j++){\r\n            array.push({\"url\": aplicativoDados.estabelecimentos[i].banners[j], \"id\": aplicativoDados.estabelecimentos[i].id})\r\n          }\r\n        }\r\n    }\r\n    return array;\r\n  }\r\n\r\n\r\n  const [todosBanners, setTodosBanners] = React.useState(allBanners());\r\n  // console.log('todosBanners', todosBanners)\r\n  \r\n  const [loading, setLoading] = React.useState(false);\r\n  const [loadingLogadoEnderecos, setLoadingLogadoEnderecos] = React.useState((enderecoAtual?.bairro) ? true : false);\r\n\r\n \r\n  \r\n  //console.log(\"aplicativoDados\", aplicativoDados)\r\n  //console.log(\"estabelecimentos\", estabelecimentos)\r\n  const limparEnderecos = () =>{\r\n    setCep('')\r\n    setUf('')\r\n    setCidade('')\r\n    setBairro('')\r\n    setRua('')\r\n    setNumero('')\r\n    setComplemento('')\r\n    setReferencia('')\r\n    setBairrosCepUnico('')\r\n    setBairroCepUnicoSelecionado('')\r\n  }\r\n\r\n\r\n  const verificarCep = async (e) =>{\r\n    try {\r\n      let valorInput = e.target.value\r\n      valorInput = valorInput.replace(/-/g, '')\r\n      valorInput = valorInput.replace(/ /g, '')\r\n      valorInput = valorInput.replace(/\\//g, '')\r\n      // valorInput = valorInput.substring(0,8)\r\n      console.log(\"valorInput\", valorInput)\r\n      if(valorInput.length == 8 ){\r\n        setCep(valorInput)\r\n        setLoading(true)\r\n        //buscar dados do cep\r\n        const retornoCep = await ComumCep(valorInput, aplicativoDados)\r\n        \r\n        console.log(\"retornoCep\", retornoCep)\r\n        if(retornoCep.retornoErro){\r\n          alertStart(retornoCep.mensagem, \"error\")\r\n        }else{\r\n          if(retornoCep.id || retornoCep.logradouro){\r\n            setBairrosCepUnico('')\r\n            setBairro(retornoCep.bairro)\r\n            setCidade(retornoCep.localidade)\r\n            setRua(retornoCep.logradouro)\r\n            setUf(retornoCep.uf)\r\n            setPopUpCep(false)\r\n            setAbrirAdicionarEndereco(true)\r\n          }else if(retornoCep.bairros.length >= 1){     \r\n            setBairrosCepUnico(retornoCep.bairros)\r\n            setPopUpCep(false)\r\n            setAbrirAdicionarEndereco(true)\r\n          }else{\r\n            //DEU ERRO, OU NAO EXISTE\r\n            alertStart(\"CEP não encontrado\", \"error\")   \r\n            // setAbrirAdicionarEndereco(false)\r\n            limparEnderecos()\r\n\r\n            if(popUpCep){\r\n              document.getElementById(\"cepDigitando2\").value = ''\r\n              document.getElementById(\"cepDigitando2\").focus()\r\n            }else{\r\n              document.getElementById(\"cepDigitando\").value = ''\r\n              document.getElementById(\"cepDigitando\").focus()\r\n            }\r\n            \r\n          }\r\n        }\r\n\r\n        setLoading(false)\r\n      } \r\n    } catch (error) {\r\n      Sentry.captureMessage(`NotFunctions verificarCep - ${aplicativoDados.appNome} - ${error}`);\r\n      alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n    }\r\n  }\r\n\r\n  const buscarCardapioId = (id) => {\r\n    aplicativoDados.estabelecimentos.forEach(estabelecimento => {\r\n      if(estabelecimento.id == id){\r\n        buscarCardapio(estabelecimento)\r\n        return true\r\n      }\r\n    });\r\n  }\r\n\r\n  const clicarEmPedir = (estabelecimento) => {\r\n    setEstabelecimentoDesejado(estabelecimento)\r\n    if(!estabelecimento.online){\r\n      setConfirmarDesejo(true)\r\n    }else if( !(retirarNoLocal || enderecoAtual?.logradouro) ){\r\n      if(estabelecimento.permiteRetiradaBalcao){\r\n        setConfirmarTipoEntrega(true);\r\n      }else{\r\n        selecionarTipoEntrega(estabelecimento);\r\n      }\r\n    }else if(retirarNoLocal){\r\n        selecionarTipoRetirada(estabelecimento);\r\n    }else if( enderecoAtual?.logradouro ){\r\n      selecionarTipoEntrega(estabelecimento);\r\n      // setConfirmarDesejo(true);\r\n    }\r\n  }\r\n  \r\n  const selecionarTipoRetirada = (estabelecimento) =>{\r\n    setEnderecoAtual({\"id\":\"retirada\"})\r\n    localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({\"id\":\"retirada\"}))\r\n    buscarCardapio(estabelecimento)\r\n  }\r\n  \r\n  const selecionarTipoEntrega = (estabelecimento) =>{\r\n    buscarCardapio(estabelecimento)\r\n  }\r\n\r\n\r\n  const buscarCardapioDelivery = async (estabelecimento) => {\r\n\r\n    const enderecoAtual = JSON.parse(localStorage.getItem('enderecoAtualCF'))\r\n    if(estabelecimento.possuiDelivery == false && estabelecimento.possuiEntrega == false){\r\n      alertStart(\"Esse estabelecimento não faz delivery!\", \"warning\")\r\n    }else if( estabelecimento.taxaEntrega < 0){\r\n      setEstabelecimentoDesejado(estabelecimento)\r\n      setConfirmarDesejo(true)\r\n      // alertStart(\"Esse estabelecimento não entrega no seu endereço!\", \"warning\")\r\n    }else if(estabelecimento.online == false){\r\n      setEstabelecimentoDesejado(estabelecimento)\r\n      setConfirmarDesejo(true)\r\n      // alertStart(\"Esse estabelecimento não esta aberto no momento!\", \"warning\")\r\n    }else if(!enderecoAtual?.logradouro){\r\n      // alertStart(\"Cadastre seu endereço!\", \"warning\")\r\n      setEstabelecimentoDesejado(estabelecimento)\r\n      setAbrirAdicionarEndereco(true)\r\n      setPopUpCep(true)\r\n    }else if(enderecoAtual?.logradouro){\r\n      buscarCardapio(estabelecimento)\r\n    }\r\n  }\r\n\r\n  const buscarCardapioRetirada = (estabelecimento) => {\r\n    if(estabelecimento.online == false){\r\n      setEstabelecimentoDesejado(estabelecimento)\r\n      setConfirmarDesejo(true)\r\n      // alertStart(\"Esse estabelecimento não esta aberto no momento!\", \"warning\")\r\n    }else{\r\n      setEnderecoAtual({\"id\":\"retirada\"})\r\n      localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({\"id\":\"retirada\"}))\r\n      buscarCardapio(estabelecimento)\r\n    }\r\n  }\r\n  \r\n  const buscarCardapio = async (estabelecimento) => {  \r\n    try {\r\n      localStorage.removeItem('estabelecimentosCepDeslogadoCF')  \r\n      console.log('buscar cardapio> ', estabelecimento)\r\n      estabelecimento.token = `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`       \r\n\r\n      setLoading(true)\r\n      localStorage.setItem('estabelecimentoAtualCF', JSON.stringify(estabelecimento));\r\n\r\n      \r\n\r\n      if(usuarioLogado?.logado){\r\n        const enderecoAtual = JSON.parse(localStorage.getItem('enderecoAtualCF'))\r\n        let data = {\r\n          \"idCliente\": usuarioLogado.cliente.id,\r\n          \"idEstabelecimento\": estabelecimento.id,\r\n          \"idEndereco\": enderecoAtual.id ? (enderecoAtual.id != 'retirada' ? enderecoAtual.id : null) : null,\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n        } \r\n\r\n        const response = await ObterCardapioCompletoV1(data, aplicativoDados)\r\n        \r\n        console.log(\"ObterCardapioCompletoV1\", response)\r\n        if(response.retornoErro){\r\n          alertStart(response.mensagem, \"error\")\r\n          setLoading(false)\r\n        }else{\r\n          const retorno = response\r\n          console.log(\"ObterCardapioCompletoV1\", retorno)  \r\n\r\n\r\n          const carrinhoRetorno = {}\r\n          carrinhoRetorno.valorMinimoPedido = retorno.valorMinimoPedido\r\n          carrinhoRetorno.valorDesconto = retorno.valorDesconto\r\n          carrinhoRetorno.percentualDesconto = retorno.percentualDesconto\r\n          carrinhoRetorno.minimoEntregaGratis = retorno.minimoEntregaGratis\r\n          carrinhoRetorno.maximoPedidoComDesconto = retorno.maximoPedidoComDesconto\r\n          carrinhoRetorno.maximoDesconto = retorno.maximoDesconto\r\n          carrinhoRetorno.cupomDesconto = retorno.cupomDesconto\r\n    \r\n          carrinhoRetorno.pedido = {\r\n            \"entregaImediata\": false,\r\n            \"formaPagamento\": {},\r\n            \"itens\": [],\r\n            \"taxaEntrega\": null,\r\n            \"tokenCartaoCredito\": null,\r\n            \"troco\": null,\r\n            \"valorDesconto\": null,\r\n            \"valorEntrega\": null,\r\n            \"valorTotal\": 0,\r\n            \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          }\r\n\r\n          if(enderecoAtual?.id == \"retirada\"){\r\n            carrinhoRetorno.pedido.tipoPedido = 1\r\n            carrinhoRetorno.pedido.entregaAgendada = \"Retirar(Buscar) no local\"\r\n          }\r\n    \r\n          localStorage.setItem(\"carrinhoCF\", JSON.stringify(carrinhoRetorno)) \r\n\r\n          \r\n          localStorage.setItem(\"cardapioCF\", JSON.stringify(retorno))   \r\n\r\n          if(!localStorage.getItem(\"enderecoAtualCF\") || enderecoAtual?.id == \"retirada\"){\r\n            localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({})) \r\n          }else if(retorno.enderecos != null && retorno.enderecos?.length > 0 && enderecoAtual?.id != \"retirada\"){\r\n            localStorage.setItem(\"enderecoAtualCF\", JSON.stringify(retorno.enderecos[0]))  \r\n          }\r\n    \r\n          history.push(`/delivery${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n        }\r\n\r\n      }else{\r\n\r\n        const response = await ObterCardapio(estabelecimento, aplicativoDados)\r\n        \r\n        console.log(\"ObterCardapio\", response)\r\n        if(response.retornoErro){\r\n          alertStart(response.mensagem, \"error\")\r\n          setLoading(false)\r\n        }else{\r\n          const retorno = response\r\n          const carrinhoRetorno = {}\r\n          carrinhoRetorno.valorMinimoPedido = retorno.valorMinimoPedido\r\n          carrinhoRetorno.valorDesconto = retorno.valorDesconto\r\n          carrinhoRetorno.percentualDesconto = retorno.percentualDesconto\r\n          carrinhoRetorno.minimoEntregaGratis = retorno.minimoEntregaGratis\r\n          carrinhoRetorno.maximoPedidoComDesconto = retorno.maximoPedidoComDesconto\r\n          carrinhoRetorno.maximoDesconto = retorno.maximoDesconto\r\n          carrinhoRetorno.cupomDesconto = retorno.cupomDesconto\r\n    \r\n          carrinhoRetorno.pedido = {\r\n            \"entregaImediata\": false,\r\n            \"formaPagamento\": {},\r\n            \"itens\": [],\r\n            \"taxaEntrega\": null,\r\n            \"tokenCartaoCredito\": null,\r\n            \"troco\": null,\r\n            \"valorDesconto\": null,\r\n            \"valorEntrega\": null,\r\n            \"valorTotal\": 0,\r\n            \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          }\r\n    \r\n          localStorage.setItem(\"carrinhoCF\", JSON.stringify(carrinhoRetorno)) \r\n\r\n\r\n          const dataRetorno = {}\r\n          dataRetorno.categorias = retorno\r\n          dataRetorno.id = \"usuarioDeslogado\"\r\n          \r\n          localStorage.setItem(\"cardapioCF\", JSON.stringify(dataRetorno))   \r\n\r\n          if(!localStorage.getItem(\"enderecoAtualCF\")){\r\n            localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({})) \r\n          }else if(retorno.enderecos != null && retorno.enderecos?.length > 0 && enderecoAtual?.id != \"retirada\"){\r\n            localStorage.setItem(\"enderecoAtualCF\", JSON.stringify(retorno.enderecos[0]))  \r\n          }\r\n\r\n          localStorage.setItem(\"usuarioCF\", JSON.stringify({}))    \r\n    \r\n          history.push(`/delivery${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n        }\r\n      }\r\n    } catch (error) {\r\n      Sentry.captureMessage(`NotFunctions buscarCardapio - ${aplicativoDados.appNome} - ${error}`);\r\n      alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n    }\r\n  }\r\n\r\n  \r\n    //alerts    \r\n    const [alert, setAlert] = useState({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n    \r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    \r\n    const alertStart = (msg, tipo) => {\r\n        setAlert({\"status\": true, \"tipo\": tipo, \"mesangem\": msg});\r\n    };\r\n\r\n    const alertClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAlert({\"status\": false, \"tipo\": alert.tipo, \"mesangem\": alert.mesangem});\r\n    };\r\n\r\n    const filtroTipo = (e) =>{\r\n      e.preventDefault()\r\n      setFiltroSelect(e.target.value)\r\n      const numero = e.target.value\r\n\r\n      // 0 = Todos \r\n      // 1 = Abertos\r\n      // 2 = Fechados\r\n\r\n      const estabelecimentos = document.getElementsByClassName(\"estabelecimento\")\r\n      var valorPesqusa = \"\"\r\n      switch (numero) {\r\n        case 0:\r\n          valorPesqusa = \"\"\r\n          break;\r\n        case 1:\r\n          valorPesqusa = \"aberto-Estabelecimentos\"\r\n          break;\r\n        case 2:\r\n          valorPesqusa = \"fechado-Estabelecimentos\"\r\n          break;\r\n      \r\n      }\r\n      var qtd = 0\r\n      //console.log('valor', valorPesqusa)\r\n      //console.log('estabelecimentos', estabelecimentos)\r\n      for(let j = 0; j < estabelecimentos.length; j++){\r\n        const filtro = (estabelecimentos[j].classList.value).includes(valorPesqusa)\r\n        if(filtro){\r\n          estabelecimentos[j].style.display = \"\"\r\n          qtd++\r\n        }else{\r\n          estabelecimentos[j].style.display = \"none\"\r\n        }\r\n      }\r\n\r\n      if(qtd > 0){\r\n        setTemAlgum(true)\r\n      }else{\r\n        setTemAlgum(false)\r\n      }\r\n    }\r\n\r\n\r\n    const filtroTipoRetirada = async (retiradaSim) => {\r\n      console.log('filtroTipoRetirada', retirarNoLocal, retiradaSim)\r\n      document.getElementById(\"cepDigitando\").value = \"\"\r\n      var retirada = true\r\n      if(!retiradaSim){\r\n        retirada = !retirarNoLocal\r\n        setRetirarNoLocal(retirada)\r\n        setVerTodasAsLojas(false)\r\n      }\r\n      if(retirada){\r\n        setEnderecoAtual({\"id\":\"retirada\"})\r\n        localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({\"id\":\"retirada\"}))\r\n        setEstabelecimentos(aplicativoDados.estabelecimentos)\r\n      }else{\r\n        setEnderecoAtual({})\r\n        localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({}))\r\n      }\r\n\r\n      const estabelecimentos = document.getElementsByClassName(\"naoPermiteRetirada\")\r\n      for(let j = 0; j < estabelecimentos.length; j++){\r\n        if(retirada == true){\r\n          estabelecimentos[j].style.display = \"none\"\r\n        }else{\r\n          estabelecimentos[j].style.display = \"\"\r\n        }\r\n      }\r\n      var qtd = document.getElementsByClassName(\"permiteRetirada\").length;\r\n      if(qtd > 0){\r\n        setTemAlgum(true)\r\n      }else{\r\n        setTemAlgum(false)\r\n      }\r\n      // setQtdDisponivel(qtd)\r\n    }\r\n    \r\n    const filtroTipoEndereco = (e) =>{\r\n      e.preventDefault()\r\n      setFiltroSelect(e.target.value)\r\n      const numero = e.target.value\r\n\r\n      // 0 = Todos \r\n      // 1 = aberto\r\n      // 2 = fechado\r\n      // 3 = Entregam\r\n      // 4 = nao entrega\r\n\r\n      const estabelecimentos = document.getElementsByClassName(\"estabelecimento\")\r\n      var valorPesqusa = \"\"\r\n      switch (numero) {\r\n        case 0:\r\n          valorPesqusa = \"\"\r\n          break;\r\n        case 3:\r\n          valorPesqusa = \"entregaEndereco-Estabelecimentos\"\r\n          break;\r\n        case 4:\r\n          valorPesqusa = \"naoEntregaEndereco-Estabelecimentos\"\r\n          break;\r\n        case 1:\r\n          valorPesqusa = \"aberto-Estabelecimentos\"\r\n          break;\r\n        case 2:\r\n          valorPesqusa = \"fechado-Estabelecimentos\"\r\n          break;\r\n      \r\n      }\r\n\r\n      var qtd = 0\r\n      //console.log('valor', valorPesqusa)\r\n      //console.log('estabelecimentos', estabelecimentos)\r\n      for(let j = 0; j < estabelecimentos.length; j++){\r\n        const filtro = (estabelecimentos[j].classList.value).includes(valorPesqusa)\r\n        if(filtro){\r\n          estabelecimentos[j].style.display = \"\"\r\n          qtd++\r\n        }else{\r\n          estabelecimentos[j].style.display = \"none\"\r\n        }\r\n      }\r\n\r\n      if(qtd > 0){\r\n        setTemAlgum(true)\r\n      }else{\r\n        setTemAlgum(false)\r\n      }\r\n\r\n    } \r\n    \r\n    const cadastrarEnderecoNoUsuario = async (data) => {\r\n      try {\r\n\r\n        data.idCliente = usuarioLogado.cliente.id\r\n\r\n        \r\n        if(aplicativoDados.tipoEntregaBairro == 1){\r\n          data.bairroEspecifico = 1\r\n        }else{\r\n          data.bairroEspecifico = 0\r\n        }\r\n\r\n        const retorno = await CadastrarEnderecoCliente(data, aplicativoDados)\r\n      \r\n        console.log(\"CadastrarEnderecoCliente\", retorno)\r\n        if(retorno.retornoErro){\r\n          alertStart(retorno.mensagem, \"error\")\r\n          listarEstabelecimentosPorEndereco(data)\r\n          setLoading(false)\r\n        }else{\r\n          usuarioLogado.cliente.enderecos.push(retorno)\r\n          localStorage.setItem('usuarioCF', JSON.stringify(usuarioLogado))\r\n          localStorage.setItem(\"enderecoAtualCF\", JSON.stringify(retorno))\r\n          setEnderecoAtual(retorno)\r\n          listarEstabelecimentosPorEndereco(retorno)//data com id\r\n        }\r\n\r\n      } catch (error) {\r\n        Sentry.captureMessage(`NotFunctions cadastrarEnderecoNoUsuario - ${aplicativoDados.appNome} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores!. Erro: \"+error.message, \"error\")    \r\n      }\r\n    }\r\n\r\n  \r\n\r\n    const listarEstabelecimentosPorEndereco = async (data ) => {\r\n      try {\r\n        data.token = `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`  \r\n        data.appNome = aplicativoDados.appNome\r\n\r\n        const retorno = await Post_ListarEstabelecimentosPorEndereco(data, aplicativoDados)\r\n      \r\n        if(retorno.retornoErro){\r\n          alertStart(retorno.mensagem, \"error\") \r\n          setLoading(false)\r\n        }else{\r\n          localStorage.setItem('estabelecimentosCepDeslogadoCF', JSON.stringify(retorno))\r\n          setEstabelecimentos(retorno)\r\n          setEnderecoAtual(data)\r\n          \r\n          if(estabelecimentoDesejado?.id && !verificarSeEntrega(estabelecimentoDesejado, retorno)){\r\n            setConfirmarDesejo(true)\r\n            setLoading(false)\r\n          }else if(estabelecimentoDesejado?.id){\r\n            buscarCardapio(estabelecimentoDesejado)\r\n            setEstabelecimentoDesejado({})\r\n          }else{\r\n            setLoading(false)\r\n          }\r\n          if(retorno.mensagem){\r\n            alertStart(retorno.mensagem, \"success\")\r\n            setLoading(false)\r\n          } \r\n        }\r\n        \r\n        \r\n        setAbrirAdicionarEndereco(false)\r\n\r\n        if(!!document.getElementById(\"cepDigitando\")){\r\n          document.getElementById(\"cepDigitando\").value = ''\r\n          document.getElementById(\"cepDigitando\").blur()\r\n        }\r\n        \r\n\r\n      } catch (error) {\r\n        Sentry.captureMessage(`NotFunctions ListarEstabelecimentosPorEndereco - ${aplicativoDados.appNome} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores!. Erro: \"+error.message, \"error\")    \r\n      }\r\n\r\n      setLoadingLogadoEnderecos(false)\r\n    }\r\n    const buscarLojasQueEntregam = async () =>{\r\n      if(bairrosCepUnico.length && !bairro){\r\n        alertStart(\"Necessario a escolha do bairro!\", \"warning\")     \r\n        return false\r\n      }else if(!uf){\r\n        alertStart(\"Necessario o preenchimento da sigla do estado!\", \"warning\")     \r\n        document.getElementById(\"cadastroUf\").focus()\r\n        return false\r\n      }else if(!cidade){\r\n        alertStart(\"Necessario o preenchimento da cidade!\", \"warning\")     \r\n        document.getElementById(\"cadastroCidade\").focus()\r\n        return false\r\n      }else if(!bairro){\r\n        alertStart(\"Necessario o preenchimento do bairro!\", \"warning\")     \r\n        document.getElementById(\"cadastroBairro\").focus()\r\n        return false\r\n      }else if(!rua){\r\n        alertStart(\"Necessario o preenchimento da rua!\", \"warning\")     \r\n        document.getElementById(\"cadastroRua\").focus()\r\n        return false\r\n      }else if(!numero){\r\n        alertStart(\"Necessario o preenchimento do numero!\", \"warning\")     \r\n        document.getElementById(\"cadastroNumero\").focus()\r\n        return false\r\n      }else if(!complemento){\r\n        alertStart(\"Necessario o preenchimento do complemento!\", \"warning\")     \r\n        document.getElementById(\"cadastroComplemento\").focus()\r\n        return false\r\n      }\r\n      setVerTodasAsLojas(false)\r\n      setAbrirAdicionarEndereco(false)\r\n      setLoading(true)\r\n        try {\r\n          const data = {\r\n            //\"idCliente\": usuarioLogado.cliente.id,\r\n            //\"idEstabelecimento\": estabelecimentoAtual.id,\r\n            \"cep\": cep,\r\n            \"uf\": uf,\r\n            \"cidade\": cidade,\r\n            \"bairro\": bairro,\r\n            \"logradouro\": rua,\r\n            \"numero\": numero,\r\n            \"complemento\": complemento,\r\n            \"referencia\": referencia,\r\n            \"appNome\": aplicativoDados.appNome,\r\n            \"latitude\": 0,\r\n            \"longitude\": 0,\r\n            \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          } \r\n\r\n          if(aplicativoDados.tipoEntregaBairro == 1){\r\n            localStorage.removeItem('bairroEspecifico')\r\n            data.bairroEspecifico = 1\r\n          }else{\r\n            data.bairroEspecifico = 0\r\n          }\r\n\r\n          if(usuarioLogado?.logado){\r\n            await cadastrarEnderecoNoUsuario(data)\r\n          }else{\r\n            localStorage.setItem(\"enderecoAtualCF\", JSON.stringify(data))\r\n            //console.log(\"data\", data)\r\n            listarEstabelecimentosPorEndereco(data)\r\n          }\r\n\r\n          \r\n          \r\n        } catch (error) {\r\n          Sentry.captureMessage(`ListarEstabelecimentosPorEndereco - ${aplicativoDados.appNome} - ${error}`);\r\n          alertStart(\"Procure os desenvolvedores \"+error.message, \"error\")    \r\n          setLoading(false)\r\n          setAbrirAdicionarEndereco(false)\r\n        }\r\n\r\n        limparEnderecos()\r\n\r\n    }\r\n  return (\r\n    <>\r\n    <Cabecalho nomeEstabelecimentoLojas={true}/>\r\n    <Rodape valor=\"Estabelecimento\"/>\r\n      <Snackbar open={alert.status} autoHideDuration={6000} onClose={alertClose}>\r\n          <Alert onClose={alertClose} severity={alert.tipo}>\r\n          {alert.mesangem}\r\n          </Alert>\r\n      </Snackbar>\r\n\r\n      \r\n\r\n      <Dialog\r\n      fullScreen={fullScreen}\r\n        open={abrirAdicionarEndereco}\r\n        aria-labelledby=\"codigoIndicacao\">\r\n        <DialogTitle id=\"codigoIndicacao\">{\"Adicionar Endereço\"}</DialogTitle>\r\n\r\n\r\n        <DialogContent>\r\n          <Row>     \r\n          {\r\n            popUpCep\r\n            ? <React.Fragment>\r\n                <Col xs={12} md={12} lg={12} style={{\"marginTop\": \"1em\"}}>\r\n                  <TextField\r\n                    disabled={retirarNoLocal}                  \r\n                    fullWidth\r\n                    name=\"CEP\"\r\n                    //value={cep}\r\n                    id=\"cepDigitando2\"\r\n                    label=\"CEP\"\r\n                    onChange={verificarCep}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Col>\r\n                <Col xs={12} md={12} lg={12}>\r\n                  <FormControlLabel\r\n                    style={{\"margin\": \"0 0 0 0\"}}\r\n                    checked={retirarNoLocal}\r\n                    control={\r\n                      <Checkbox\r\n                        id=\"botaoRetirada2\"\r\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                        checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                        name=\"retirarNoLocal2\"\r\n                        onClick={() => {\r\n                          filtroTipoRetirada(false)\r\n                          setAbrirAdicionarEndereco(false)\r\n                        }}\r\n                      />\r\n                    }\r\n                    label=\"Retirar no Local\"\r\n                  />\r\n              \r\n                </Col>\r\n\r\n                <div className=\"divImageCentroCardapio\" >\r\n                    <img alt={\"sem endereços cadastrados\"} src={enderecosVazios} className=\"pretoEBranco\" />\r\n                  </div>\r\n                \r\n              </React.Fragment>\r\n            : <React.Fragment>\r\n                {bairrosCepUnico \r\n                ? <Col xs={12} md={12} lg={12}>\r\n                    <FormControl variant=\"outlined\" style={{\"width\": \"100%\", \"margin\": \"0.5em 0\"}}>\r\n                      <InputLabel id=\"demo-simple-select-outlined-label\">Bairros do Cep</InputLabel>\r\n                        <Select\r\n                          labelId=\"demo-simple-select-outlined-label\"\r\n                          fullWidth\r\n                          id=\"cadastroBairro\"\r\n                          value={bairroCepUnicoSelecionado}\r\n                          onChange={(e) => {\r\n                            //console.log(e.target.value)\r\n                            setBairroCepUnicoSelecionado(e.target.value)\r\n                            setUf(bairrosCepUnico[e.target.value].cidade.estado.sigla)\r\n                            setCidade(bairrosCepUnico[e.target.value].cidade.nome)\r\n                            setBairro(bairrosCepUnico[e.target.value].nome)\r\n                          }}\r\n                          label=\"Bairros do Cep\"\r\n                        >\r\n\r\n                        {bairrosCepUnico.map((bairro, index) => (\r\n                          <MenuItem key={bairro.id} value={index}>{bairro.nome}</MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Col>\r\n                : <Col xs={12} md={6} lg={6} style={{\"margin\": \"0.5em 0\"}}>\r\n                    <TextField\r\n                      disabled\r\n                      fullWidth                 \r\n                      required\r\n                      value={bairro}\r\n                      name=\"BAIRRO\"\r\n                      id=\"cadastroBairro\"\r\n                      label=\"BAIRRO\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Col>}       \r\n              <Col xs={12} md={6} lg={6} style={{\"margin\": \"0.5em 0\"}}>\r\n                <TextField\r\n                  disabled\r\n                  fullWidth                    \r\n                  required\r\n                  value={uf}\r\n                  name=\"UF\"\r\n                  id=\"cadastroUf\"\r\n                  label=\"UF\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={6} lg={6} style={{\"margin\": \"0.5em 0\"}}>                                           \r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  disabled\r\n                  value={cidade}\r\n                  name=\"CIDADE\"\r\n                  id=\"cadastroCidade\"\r\n                  label=\"CIDADE\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Col>            \r\n              <Col xs={12} md={6} lg={6} style={{\"margin\": \"0.5em 0\"}}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  //autoFocus={bairrosCepUnico.length ? true : false}\r\n                  disabled={bairrosCepUnico.length ? false : true}                      \r\n                  name=\"RUA\"\r\n                  onChange={(e) => {\r\n                    setRua(e.target.value)\r\n                  }}\r\n                  value={rua}\r\n                  id=\"cadastroRua\"\r\n                  label=\"RUA\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={6} lg={6} style={{\"margin\": \"0.5em 0\"}}>\r\n                <TextField\r\n                  //autoFocus\r\n                  fullWidth\r\n                  required\r\n                  name=\"NUMERO\"\r\n                  value={numero}\r\n                  onChange={(e) => {\r\n                    setNumero(e.target.value)\r\n                  }}\r\n                  id=\"cadastroNumero\"\r\n                  label=\"NUMERO\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={6} lg={6} style={{\"margin\": \"0.5em 0\"}}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  value={complemento}\r\n                  onChange={(e) => {\r\n                    setComplemento(e.target.value)\r\n                  }}\r\n                  name=\"COMPLEMENTO\"\r\n                  id=\"cadastroComplemento\"\r\n                  label=\"COMPLEMENTO\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={6} lg={6} style={{\"margin\": \"0.5em 0\"}}>\r\n                <TextField\r\n                  required\r\n                  fullWidth\r\n                  value={referencia}\r\n                  onChange={(e) => {\r\n                    setReferencia(e.target.value)\r\n                  }}\r\n                  name=\"REFERENCIA\"\r\n                  id=\"cadastroReferencia\"\r\n                  label=\"REFERENCIA\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Col>\r\n            </React.Fragment>\r\n          }\r\n            \r\n            \r\n          </Row>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          \r\n          <Button onClick={(e) => {\r\n              limparEnderecos()\r\n              setAbrirAdicionarEndereco(false)\r\n              if(popUpCep){\r\n                setTimeout(() => {\r\n                  setPopUpCep(false)\r\n                }, 500);\r\n              }\r\n              \r\n            }} >\r\n            Cancelar\r\n          </Button>\r\n          {\r\n            !popUpCep\r\n            ? <Button onClick={() => {buscarLojasQueEntregam()}} style={{\"color\": \"#fff\", \"backgroundColor\": \"#28a745\"}}>\r\n                Pronto\r\n              </Button>\r\n            : <Button onClick={() => {buscarCardapio(estabelecimentoDesejado)}} style={{\"color\": \"#fff\", \"backgroundColor\": \"#28a745\"}}>\r\n                Cardápio\r\n              </Button>\r\n          }\r\n          \r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={confirmarTipoEntrega}\r\n        onClose={() => { setConfirmarTipoEntrega(false) }}\r\n        aria-labelledby=\"tiposDeEntrega\">\r\n        {/* <DialogTitle id=\"confirmarDesejo\">{\"Estabelecimento Desejado\"}</DialogTitle> */}\r\n        <DialogContent>\r\n          <Row>    \r\n            <Col xs={12} md={12} lg={12} style={{\"marginTop\": \"1em\", \"marginBottom\": \"1em\",}}>\r\n              <Typography gutterBottom variant=\"h6\" style={{\"fontWeight\": \"100\"}}>\r\n                  Selecione a forma de entrega do pedido desejada\r\n              </Typography>\r\n            </Col>\r\n            \r\n            <Col xs={6} md={6} lg={6} style={{\"margin\": \"0.5em 0\"}}>\r\n              <Button size=\"small\"  className={\"botaoVerde\"} onClick={() => {\r\n                  selecionarTipoRetirada(estabelecimentoDesejado);\r\n              }} >\r\n                Retirada\r\n              </Button>\r\n            </Col>\r\n\r\n            <Col xs={6} md={6} lg={6} style={{\"margin\": \"0.5em 0\"}}>\r\n              <Button size=\"small\" className={\"botaoVerde\"} onClick={() => {\r\n                  selecionarTipoEntrega(estabelecimentoDesejado) }}>\r\n                Entrega\r\n              </Button>\r\n            </Col>\r\n\r\n          </Row>\r\n        </DialogContent>\r\n\r\n      </Dialog>\r\n\r\n\r\n      <Dialog\r\n        open={confirmarDesejo}\r\n        onClose={() => { setConfirmarDesejo(false) }}\r\n        aria-labelledby=\"confirmarDesejo\">\r\n        {/* <DialogTitle id=\"confirmarDesejo\">{\"Estabelecimento Desejado\"}</DialogTitle> */}\r\n        <DialogContent>\r\n          <Row>    \r\n            <Col xs={12} md={12} lg={12} style={{\"marginTop\": \"1em\"}}>\r\n              <Typography gutterBottom variant=\"h6\" style={{\"fontWeight\": \"100\"}}>\r\n                {\r\n                  estabelecimentoDesejado.online == false\r\n                  ?  <React.Fragment>\r\n                      <Typography>\r\n                        O estabelecimento\r\n                        <span style={{\"fontWeight\": \"500\"}}> {estabelecimentoDesejado?.nome} </span>\r\n                        não está aberto no momento, você deseja ver o cardápio mesmo assim?\r\n                      </Typography>\r\n                    </React.Fragment>\r\n                  : <React.Fragment>\r\n                      <Typography>\r\n                        O estabelecimento\r\n                        <span style={{\"fontWeight\": \"500\"}}> {estabelecimentoDesejado?.nome} </span>\r\n                        não entrega no seu endereço  \r\n                        <span style={{\"fontWeight\": \"500\"}}> {enderecoAtual?.logradouro} - {enderecoAtual?.numero}</span>\r\n                        , você deseja ver o cardápio mesmo assim?\r\n                      </Typography>\r\n                    </React.Fragment>\r\n                }\r\n                  \r\n              </Typography>\r\n            </Col>\r\n            \r\n            <Col xs={12} md={6} lg={6} style={{\"margin\": \"0.5em 0\"}}>\r\n              <Button size=\"small\"  className={\"botaoVermelho\"}  onClick={() => {\r\n                \r\n                setConfirmarDesejo(false)\r\n                setTimeout(() => {\r\n                  setEstabelecimentoDesejado({})\r\n                }, 500);\r\n              }}>\r\n                Outro Estabelecimento\r\n              </Button>\r\n            </Col>\r\n\r\n            <Col xs={12} md={6} lg={6} style={{\"margin\": \"0.5em 0\"}}>\r\n              <Button size=\"small\" className={\"botaoVerde\"} onClick={() => {\r\n                  buscarCardapio(estabelecimentoDesejado)\r\n                  setConfirmarDesejo(false)\r\n                  setTimeout(() => {\r\n                    setEstabelecimentoDesejado({})\r\n                  }, 500);\r\n                }}>\r\n                Ver Cardápio\r\n              </Button>\r\n            </Col>\r\n\r\n          </Row>\r\n        </DialogContent>\r\n\r\n      </Dialog>\r\n      \r\n      <Dialog\r\n        open={confirmarDesejo}\r\n        aria-labelledby=\"confirmarDesejo\">\r\n        {/* <DialogTitle id=\"confirmarDesejo\">{\"Estabelecimento Desejado\"}</DialogTitle> */}\r\n        <DialogContent>\r\n          <Row>    \r\n            <Col xs={12} md={12} lg={12} style={{\"marginTop\": \"1em\"}}>\r\n              <Typography gutterBottom variant=\"h6\" style={{\"fontWeight\": \"100\"}}>\r\n                {\r\n                  estabelecimentoDesejado.online == false\r\n                  ?  <React.Fragment>\r\n                      O estabelecimento\r\n                      <span style={{\"fontWeight\": \"500\"}}> {estabelecimentoDesejado?.nome} </span>\r\n                      não está aberto no momento, você deseja ver o cardápio mesmo assim?`\r\n                    </React.Fragment>\r\n                  : <React.Fragment>\r\n                      O estabelecimento\r\n                      <span style={{\"fontWeight\": \"500\"}}> {estabelecimentoDesejado?.nome} </span>\r\n                      não entrega no seu endereço  \r\n                      <span style={{\"fontWeight\": \"500\"}}> {enderecoAtual?.logradouro} - {enderecoAtual?.numero}</span>\r\n                      , você deseja ver o cardápio mesmo assim?`\r\n                    </React.Fragment>\r\n                }\r\n                  \r\n              </Typography>\r\n            </Col>\r\n            \r\n            <Col xs={12} md={6} lg={6} style={{\"margin\": \"0.5em 0\"}}>\r\n              <Button size=\"small\"  className={\"botaoVermelho\"}  onClick={() => {\r\n                \r\n                setConfirmarDesejo(false)\r\n                setTimeout(() => {\r\n                  setEstabelecimentoDesejado({})\r\n                }, 500);\r\n              }}>\r\n                Outro Estabelecimento\r\n              </Button>\r\n            </Col>\r\n\r\n            <Col xs={12} md={6} lg={6} style={{\"margin\": \"0.5em 0\"}}>\r\n              <Button size=\"small\" className={\"botaoVerde\"} onClick={() => {\r\n                  buscarCardapio(estabelecimentoDesejado)\r\n                  setConfirmarDesejo(false)\r\n                  setTimeout(() => {\r\n                    setEstabelecimentoDesejado({})\r\n                  }, 500);\r\n                }}>\r\n                Ver Cardápio\r\n              </Button>\r\n            </Col>\r\n\r\n            {\r\n              estabelecimentoDesejado.online\r\n              ? <Col xs={12} md={12} lg={12} style={{\"margin\": \"0.5em 0\"}}>\r\n                  <Button size=\"small\" className={\"botaoCinza\"} onClick={() => {\r\n                      setRetirarNoLocal(true)\r\n                      setEnderecoAtual({\"id\":\"retirada\"})\r\n                      localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({\"id\":\"retirada\"}))\r\n                      buscarCardapio(estabelecimentoDesejado)\r\n                      setConfirmarDesejo(false)\r\n                      setTimeout(() => {\r\n                        setEstabelecimentoDesejado({})\r\n                      }, 500);\r\n                    }}>\r\n                    Retirar no Local\r\n                  </Button>\r\n                </Col>\r\n            : null\r\n            }\r\n            \r\n\r\n          </Row>\r\n        </DialogContent>\r\n\r\n      </Dialog>\r\n\r\n\r\n      <div className=\"container container-Estabelecimentos-deslogado\">\r\n        {\r\n          todosBanners.length > 0\r\n          ? <Row>\r\n              <AppBar position=\"static\" color=\"default\" id=\"todosBanners\" style={{\"margin\":\"1em 0\",\"backgroundColor\": \"#f8f8f8\", \"zIndex\":\"1\", \"box-shadow\":\"none\"}}>\r\n                <Tabs\r\n                  // value={0}\r\n                  // onChange={mudarCategoria}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  variant=\"scrollable\"\r\n                  scrollButtons=\"auto\"\r\n                >\r\n                    {\r\n                      (todosBanners.map((banner, index) => (\r\n                        <img className={\"bannerLojas\"} style={{\"cursor\":\"pointer\"}} src={banner.url} key={index} onClick={() =>{\r\n                          buscarCardapioId(banner.id)   \r\n                        }}/>    \r\n                      )))\r\n                    }\r\n                </Tabs>\r\n            </AppBar>\r\n            </Row>\r\n          : null\r\n        }\r\n\r\n        <Row>\r\n          {\r\n            (!todosBanners.length && aplicativoDados)\r\n            ? <Col xs={12} md={12} lg={12} className=\"bannerAppLogo\" style={{\"marginBottom\": \"1em\", \"backgroundImage\": `url(\"${aplicativoDados?.urlFundoSite}\")`}}>\r\n                {/* <img src={aplicativoDados.urlLogo}/> */}\r\n                <img src={aplicativoDados?.urlLogo} className={\"logoNoBanner\"}/>\r\n              </Col>\r\n            : null\r\n          }\r\n        </Row>\r\n        <Row style={(enderecoAtual?.logradouro || retirarNoLocal) ? {\"display\":\"none\"}:null}>\r\n            <Col xs={12} md={12} lg={12} >\r\n              <Typography gutterBottom variant=\"h6\" >\r\n              Digite seu CEP para entrega\r\n              </Typography>\r\n            </Col>\r\n      \r\n\r\n            <Col xs={12} md={12} lg={12} style={{\"marginTop\": \"1em\"}}>\r\n              <TextField\r\n                disabled={retirarNoLocal}                  \r\n                style={{\"width\":\"300px\", \"maxWidth\":\"100%\", \"background\":\"white\"}}\r\n                name=\"CEP\"\r\n                //value={cep}\r\n                id=\"cepDigitando\"\r\n                label=\"CEP\"\r\n                onChange={verificarCep}\r\n                variant=\"outlined\"\r\n              />\r\n            </Col>\r\n            <Col xs={12} md={12} lg={12}>\r\n              <FormControlLabel\r\n                style={{\"margin\": \"0 0 0 0\"}}\r\n                checked={retirarNoLocal}\r\n                control={\r\n                  <Checkbox\r\n                    id=\"botaoRetirada\"\r\n                    icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                    checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                    name=\"retirarNoLocal\"\r\n                    onClick={() => filtroTipoRetirada(false)}\r\n                  />\r\n                }\r\n                label=\"Retirar no Local\"\r\n              />\r\n          \r\n            </Col>\r\n            \r\n\r\n            <Divider style={{\"width\": \"100%\", \"margin\": \"0 0 1em 0\"}}/>\r\n          \r\n          </Row>\r\n          <Row>\r\n            \r\n         \r\n          \r\n          {/* <Col xs={12} md={12} lg={12} >\r\n            <Typography gutterBottom variant=\"h6\" >\r\n              Selecione o estabelecimento\r\n            </Typography>\r\n          </Col> */}\r\n          \r\n          \r\n\r\n         \r\n        {\r\n          ( loadingLogadoEnderecos == false && (verTodasAsLojas || aplicativoDados?.exibirTodasUnidadesNoDelivery || enderecoAtual?.bairro || retirarNoLocal)) \r\n          ? <React.Fragment>\r\n              {enderecoAtual?.bairro\r\n                ?  <Col xs={12} md={12} lg={6} style={{ \"alignSelf\": \"center\"}}> \r\n                      <Typography gutterBottom variant=\"h6\" >\r\n                        {quantosEntregam == 0 \r\n                        ? null //' Nenhum entrega no seu endereço' \r\n                        : quantosEntregam == 1\r\n                          ? quantosEntregam + ' Estabelecimento'\r\n                          : quantosEntregam + ' Estabelecimentos'}\r\n                      </Typography> \r\n                  </Col>\r\n                :  <Col xs={12} md={12} lg={(enderecoAtual?.logradouro  || retirarNoLocal) ? 6 : 12} >   \r\n                    <Typography gutterBottom variant=\"h6\" style={{ \"alignSelf\": \"center\"}}>\r\n                      {quantosEntregam} {quantosEntregam > 1 ? \"Estabelecimentos encontradas\" : \"Estabelecimento encontrada\"} \r\n                    </Typography> \r\n                  </Col>}\r\n\r\n                {enderecoAtual?.logradouro \r\n                  ?  <Col xs={12} md={12} lg={6} >\r\n                      <AlertFixo icon={<PersonPinCircleIcon/>} severity=\"success\">\r\n                        {`${enderecoAtual.logradouro} - ${enderecoAtual.numero}`} \r\n                        \r\n                        <BackspaceIcon onClick={() => { \r\n                          \r\n                          localStorage.removeItem('estabelecimentosCepDeslogadoCF')\r\n                          localStorage.removeItem('enderecoAtualCF')\r\n                          setEstabelecimentos(aplicativoDados.estabelecimentos)\r\n                          setEnderecoAtual(null)\r\n                          setFiltroSelect(0)\r\n\r\n                        }} style={{\"position\": \"absolute\", \"right\": \"1em\", \"top\": \"0.5em\", \"cursor\": \"pointer\"}}/>\r\n                      </AlertFixo>  \r\n                    </Col>\r\n                  : null}\r\n\r\n                  {retirarNoLocal\r\n                    ?  <Col xs={12} md={12} lg={6} >\r\n                        <AlertFixo icon={<TransferWithinAStationIcon/>}  severity=\"success\">\r\n                          {`Filtro por retirada no local`} \r\n                          \r\n                          <BackspaceIcon onClick={() => { \r\n                            filtroTipoRetirada(false)\r\n                            \r\n                          }} style={{\"position\": \"absolute\", \"right\": \"1em\", \"top\": \"0.5em\", \"cursor\": \"pointer\"}}/>\r\n                        </AlertFixo>  \r\n                      </Col>\r\n                    : null\r\n                  }\r\n                  \r\n                  {\r\n                    // !(verTodasAsLojas || (quantosEntregam != 0 && temAlgum ) || (quantosEntregam != 0 && retirarNoLocal ) || loadingLogadoEnderecos)\r\n                    loadingLogadoEnderecos\r\n                    ? null\r\n                    : <React.Fragment>\r\n                        <Col xs={6} md={8} lg={8} style={{\"marginTop\": \"1em\"}}>\r\n                          <TextField\r\n                            fullWidth\r\n                            label=\"Procurar...\"\r\n                            onChange={procurarEstabelecimento}\r\n                            variant=\"outlined\"\r\n                          />\r\n                        </Col>\r\n                        <Col xs={6} md={4} lg={4} style={{\"marginTop\": \"1em\" /* , \"textAlign\": \"right\" */}}>\r\n                          \r\n                              {\r\n                                enderecoAtual?.logradouro \r\n                                ? <FormControl variant=\"outlined\" style={{\"width\": \"100%\"}}>\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Filtro</InputLabel>\r\n                                <Select\r\n                                  labelId=\"demo-simple-select-outlined-label\"\r\n                                  id=\"demo-simple-select-outlined\"\r\n                                  value={filtroSelect}\r\n                                  onChange={filtroTipoEndereco}\r\n                                  label=\"Filtro\"\r\n                                > \r\n                                  <MenuItem key={0} value={0}>{\"Todos\"}</MenuItem>\r\n                                  <MenuItem key={1} value={1}>{\"Aberto\"}</MenuItem>\r\n                                  <MenuItem key={2} value={2}>{\"Fechado\"}</MenuItem>\r\n                                  <MenuItem key={3} value={3}>{\"Entrega\"}</MenuItem>\r\n                                  {\r\n                                    ( aplicativoDados?.exibirTodasUnidadesNoDelivery || verTodasAsLojas)\r\n                                    ? <MenuItem key={4} value={4}>{\"Não Entrega\"}</MenuItem>\r\n                                    : null\r\n                                  }\r\n                                  \r\n                                </Select>\r\n                              </FormControl>\r\n                                :<FormControl variant=\"outlined\" style={{\"width\": \"100%\"}}>\r\n                                <InputLabel id=\"demo-simple-select-outlined-label\">Filtro</InputLabel>\r\n                                <Select\r\n                                  labelId=\"demo-simple-select-outlined-label\"\r\n                                  id=\"demo-simple-select-outlined\"\r\n                                  value={filtroSelect}\r\n                                  onChange={filtroTipo}\r\n                                  label=\"Filtro\"\r\n                                > \r\n                                  <MenuItem key={0} value={0}>{\"Todos\"}</MenuItem>\r\n                                  <MenuItem key={1} value={1}>{\"Abertos\"}</MenuItem>\r\n                                  <MenuItem key={2} value={2}>{\"Fechados\"}</MenuItem>\r\n                                </Select>\r\n                              </FormControl>\r\n                              }\r\n                        </Col>\r\n                      </React.Fragment>\r\n                  }\r\n                  \r\n          {/* <Skeleton variant=\"circle\" width={40} height={40} /> */}\r\n\r\n          \r\n          \r\n                {\r\n                  estabelecimentos.map( (estabelecimento, index) => (\r\n                    // estabelecimento.visivel && \r\n                    <React.Fragment key={index}>\r\n                      {\r\n                        ( verTodasAsLojas || (aplicativoDados?.exibirTodasUnidadesNoDelivery && !retirarNoLocal) || ((enderecoAtual?.bairro && (estabelecimento.taxaEntrega >= 0 ) || (!enderecoAtual?.bairro && retirarNoLocal && ( /*estabelecimento.possuiDelivery || estabelecimento.possuiEntrega || */ estabelecimento.permiteRetiradaBalcao)))))\r\n                        ? <Col xs={12} md={6} lg={4} key={index} style={{\"margin\": \"1em 0\"}}  className={\"estabelecimento \" \r\n                              + (estabelecimento.online ? \"aberto-Estabelecimentos\" : \"fechado-Estabelecimentos \") \r\n                              + (estabelecimento.permiteRetiradaBalcao ? \" permiteRetirada \" : \" naoPermiteRetirada \") \r\n                              + \" estabelecimento-Estabelecimentos\" \r\n                              + (enderecoAtual?.bairro && ((estabelecimento.taxaEntrega >= 0 && estabelecimento.taxaEntrega != null) ? \" entregaEndereco-Estabelecimentos\" : \" naoEntregaEndereco-Estabelecimentos\"))}>\r\n                              \r\n                              <Card className={classes.root} style={{\"height\": \"100%\"}}>\r\n                                <CardActionArea  style={{ \"height\": \"calc(100% - 30px)\", \"flexFlow\": \"column-reverse\", \"alignItems\": \"normal\"}} onClick={() =>{\r\n                                  clicarEmPedir(estabelecimento)\r\n                                }}>\r\n                                  {/* <CardContent style={{\"position\":\"absolute\", \"top\": \"0\"}} className={estabelecimento.online &&  estabelecimento.taxaEntrega>=0 ? \"disponivel\" : \"indisponivel\"}>\r\n                                    <Typography className={\"StatusEstabelecimento\"} variant=\"body2\"  component=\"p\">\r\n                                      {estabelecimento.online ? \"Aberto\" : \"Fechado\"}\r\n                                      {(enderecoAtual?.bairro) && (estabelecimento.taxaEntrega >= 0 && estabelecimento.taxaEntrega != null ? \" - Entrega\" : \" - Não Entrega\")}\r\n                                    </Typography>\r\n                                  </CardContent> */}\r\n                                  <Row style={{\"textAlign\": \"center\", \"width\": \"100%\", \"padding\": \"1em\", \"alignItems\": \"center\"}}>\r\n                                    <Col xs={5} md={6} lg={6}>\r\n                                      <CardMedia\r\n                                        component=\"img\"\r\n                                        className={\"logoLojas\"}\r\n                                        alt={estabelecimento.nome}\r\n                                        image={estabelecimento.urlLogo}\r\n                                        title={estabelecimento.nome}\r\n                                      />\r\n                                    </Col>\r\n                                    <Col xs={7} md={6} lg={6}>\r\n                                      <Typography className={\"StatusEstabelecimento\"} variant=\"body2\"  component=\"p\">\r\n                                        {estabelecimento.online ? <><CheckCircleIcon style={{\"fontSize\": \"initial\", \"color\":\"#28a745\"}}/> Aberto</> : <><CancelIcon style={{\"fontSize\": \"initial\"}}/> Fechado</>}\r\n                                        {/* {(enderecoAtual?.bairro) && (estabelecimento.taxaEntrega >= 0 && estabelecimento.taxaEntrega != null ? \" - Entrega\" : \" - Não Entrega\")} */}\r\n                                      </Typography>\r\n                                      \r\n                                      <Typography gutterBottom  component=\"h2\" className={\"nomeLoja\"}>                    \r\n                                        {estabelecimento.nomeAlternativo ? estabelecimento.nomeAlternativo : estabelecimento.nome}\r\n                                      </Typography>\r\n                                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={\"descricaoLoja\"}>\r\n                                        {estabelecimento.endereco}\r\n                                      </Typography>\r\n                                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {estabelecimento.tempoEntregaTexto}\r\n                                      </Typography>\r\n                                    </Col>\r\n                                  \r\n                                  </Row>\r\n                                  \r\n                                  <CardContent style={{\"padding\": \"0 16px\"}}>\r\n                                 \r\n                                  </CardContent>\r\n                                </CardActionArea>\r\n                                <CardActions style={{\"padding\":\"0\"}}>\r\n              \r\n                                  \r\n                                  {/* {\r\n                                    (estabelecimento.possuiDelivery || estabelecimento.possuiEntrega)\r\n                                    ? ( estabelecimento.taxaEntrega < 0 || !estabelecimento.online || !enderecoAtual?.logradouro\r\n                                        ? (<Button size=\"small\" className={\"botaoCinza naoArredondado\"} onClick={() => {buscarCardapioDelivery(estabelecimento)}}>\r\n                                            Entrega \r\n                                          </Button>)\r\n                                        : <Button size=\"small\" className={\"botaoVerde naoArredondado\"} onClick={() => {buscarCardapioDelivery(estabelecimento)}}>\r\n                                            Entrega {estabelecimento.taxaEntrega >=0 ? Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(estabelecimento.taxaEntrega) : null}\r\n                                          </Button>\r\n                                      )\r\n                                    : <Button size=\"small\" className={\"botaoCinza GrifadoBotao naoArredondado\"} onClick={() => {buscarCardapioDelivery(estabelecimento)}}>\r\n                                        Entrega\r\n                                      </Button>\r\n                                  } */}\r\n\r\n                                  <Button  size=\"small\" className={ estabelecimento.online ? \"botaoVerde naoArredondado\" : \"botaoCinza naoArredondado\"} \r\n                                  \r\n                                    onClick={() => {\r\n                                      clicarEmPedir(estabelecimento)    \r\n                                    }}>\r\n                                      Pedir\r\n                                  </Button>\r\n              \r\n                                  {/* {\r\n                                    estabelecimento.permiteRetiradaBalcao \r\n                                    ? ( !estabelecimento.online\r\n                                        ? <Button size=\"small\" className={\"botaoCinza naoArredondado\"} onClick={() => {buscarCardapioRetirada(estabelecimento)}}>\r\n                                            Retirar\r\n                                          </Button>\r\n                                        : <Button size=\"small\" className={\"botaoVerde naoArredondado\"} onClick={() => {buscarCardapioRetirada(estabelecimento)}}>\r\n                                            Retirar\r\n                                          </Button>\r\n                                      )\r\n                                    : null //  <Button size=\"small\" className={\"botaoCinza GrifadoBotao\"}>\r\n                                    //     Retirar\r\n                                    //   </Button>\r\n                                  } */}\r\n              \r\n              \r\n                                  {/* {\r\n                                    estabelecimento.taxaEntrega >= 0 && estabelecimento.online\r\n                                    ? <Button size=\"small\" style={{\"background\": \"#28a745\", \"color\":\"white\", \"width\": \"100%\"}} onClick={() =>{                       \r\n                                      buscarCardapio(estabelecimento)                       \r\n                                  }}>\r\n                                    Pedir\r\n                                  </Button>\r\n                                  : <Button size=\"small\"  style={{\"background\": \"#6c757d\", \"color\":\"white\", \"width\": \"100%\"}} onClick={() =>{                       \r\n                                    buscarCardapio(estabelecimento)                       \r\n                                }}>\r\n                                  Ver\r\n                                </Button>\r\n                                  } */}\r\n                                  \r\n                                </CardActions>\r\n                              </Card>\r\n                            </Col>\r\n                        : null\r\n                      }\r\n                    </React.Fragment>\r\n                  ))\r\n                }\r\n\r\n                { (verTodasAsLojas || quantosEntregam || loadingLogadoEnderecos) \r\n                ? null \r\n                : <Col xs={12} md={12} lg={12} style={{\"textAlign\": \"center\", \"marginTop\": \"3em\"}}> \r\n                    <Typography variant=\"h6\" >\r\n                      Nenhum estabelecimento disponível\r\n                    </Typography>\r\n                  </Col> }   \r\n            </React.Fragment>\r\n          :  \r\n              (loadingLogadoEnderecos \r\n              ? <>\r\n                  {/* <Row style={(enderecoAtual?.logradouro || retirarNoLocal) ? {\"display\":\"none\"}:null}>\r\n                    <Col xs={12} md={12} lg={12} style={{\"display\":\"flex\", \"justifyContent\": \"center\"}}>\r\n                      <Skeleton variant=\"rect\" width={400} height={40} />\r\n                    </Col>\r\n                    <Col xs={12} md={12} lg={12} style={{\"display\":\"flex\", \"justifyContent\": \"center\", \"margin\": \"1em 0\"}} >\r\n                      <Skeleton variant=\"rect\" width={300} height={56} />\r\n                    </Col>\r\n                    <Col xs={12} md={12} lg={12} style={{\"display\":\"flex\", \"justifyContent\": \"center\" , \"marginBottom\": \"1em\"}}>\r\n                      <Skeleton variant=\"rect\" width={155} height={42} />\r\n                    </Col>\r\n                    <Divider style={{\"width\": \"100%\", \"margin\": \"0 0 1em 0\"}}/>\r\n                  </Row> */}\r\n                    \r\n                  <Col  xs={12} md={6} lg={6} style={{\"display\":\"flex\", \"justifyContent\": \"center\" , \"alignItems\":\"center\", \"padding\": \"0.5em\"}}>\r\n                    <Skeleton variant=\"rect\" width={\"50%\"} height={30} />\r\n                  </Col>\r\n\r\n                  <Col  xs={12} md={6} lg={6} style={{\"padding\": \"0.5em\"}}>\r\n                    <Skeleton variant=\"rect\" width={\"100%\"} height={56} />\r\n                  </Col>\r\n                  \r\n                  <Col  xs={6} md={6} lg={8} style={{\"padding\": \"0.5em\"}}>\r\n                    <Skeleton variant=\"rect\" width={\"100%\"} height={56} />\r\n                  </Col>\r\n\r\n                  <Col  xs={6} md={6} lg={4} style={{\"padding\": \"0.5em\"}}>\r\n                    <Skeleton variant=\"rect\" width={\"100%\"} height={56} />\r\n                  </Col>\r\n                \r\n                  {SkeletonQtd.map((sk, index) => (\r\n                    <Col key={index} xs={12} md={6} lg={4} style={{\"padding\": \"0.5em\"}}>\r\n                      <Skeleton variant=\"rect\" width={\"100%\"} height={165} />\r\n                    </Col>\r\n                  ))}\r\n                </>\r\n              : null /*<div className=\"divImageCentroCardapio\" >\r\n                    <img alt={\"sem endereços cadastrados\"} src={enderecosVazios} className=\"pretoEBranco\" />\r\n                  </div> */)\r\n        }\r\n        </Row>\r\n\r\n        {\r\n          (aplicativoDados?.exibirTodasUnidadesNoDelivery == false && loadingLogadoEnderecos  == false && aplicativoDados.exibirLojasOcultas)\r\n          ? <Row style={{\"textAlign\": \"center\"}}>\r\n              <Col xs={12} md={12} lg={12}>\r\n                {\r\n                  (verTodasAsLojas == false)\r\n                  ?  <Button size=\"small\"  onClick={() =>{setVerTodasAsLojas(true)}}>\r\n                        Ver Todas as Lojas\r\n                      </Button>\r\n                  : <Button size=\"small\"  onClick={() =>{setVerTodasAsLojas(false)}}>\r\n                        Ocultar Todas as Lojas\r\n                    </Button>\r\n                }\r\n              </Col>\r\n            </Row>\r\n          : null\r\n        }\r\n\r\n\r\n        {loading &&\r\n        (<Backdrop className={classes.backdrop} open={loading}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>)}\r\n\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\index.js",[],"C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\ApenasFidelidade\\index.js",["344","345","346"],"\r\nimport React, { Component, useState } from 'react'\r\nimport QrReader from 'react-qr-reader'\r\nimport * as Sentry from \"@sentry/react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport './styles.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Row, Col, Container, Carousel } from 'react-bootstrap';\r\nimport {\r\n    identificarEstabelecimentoSelecionado,\r\n    CadastrarUsuario,\r\n    RegistrarSeloSeguro2,\r\n  } from '../../services/functions';\r\n\r\nimport api from '../../services/api';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n//import Loading from '../loading';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { AiOutlineQrcode } from 'react-icons/ai';\r\n\r\n//alert\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    absolute: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(3),\r\n        right: theme.spacing(3),\r\n        fontSize: \"30px\",\r\n    },\r\n    rootAlert: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n      },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 9999,\r\n        color: '#fff',\r\n      },\r\n}));\r\n\r\nfunction dataProInput(string){\r\n    let returno = ''\r\n    returno += string.substring(6) + '-'\r\n    returno += string.substring(3,5) + '-'\r\n    returno += string.substring(0,2)  \r\n    //console.log(\"dataProInput\", returno)\r\n    return returno\r\n}\r\n\r\n\r\nexport default function ApenasFidelidade() {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [usuarioLogado, setUsuarioLogado] = useState(JSON.parse(localStorage.getItem(\"usuarioCF\")))\r\n    const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))\r\n    //console.log(\"usuarioLogado\", usuarioLogado)\r\n\r\n\r\n    const [configuracoesPerfilModal, setConfiguracoesPerfilModal] = React.useState(false);\r\n    const [qrCodeModal, setQrCodeModal] = React.useState(false);\r\n    const [usuarioEdit, setUsuarioEdit] = React.useState(usuarioLogado.cliente.nome ? usuarioLogado.cliente.nome : '');\r\n    const [cpfEdit, setCpfEdit] = React.useState(usuarioLogado.cliente.cpf ? usuarioLogado.cliente.cpf : '');\r\n    const [telefoneEdit, setTelefoneEdit] = React.useState(usuarioLogado.cliente.telefone ? usuarioLogado.cliente.telefone : '');\r\n    const [dataNascimentoEdit, setDataNascimentoEdit] = React.useState(usuarioLogado.cliente.dataNascimentoTexto ? (dataProInput(usuarioLogado.cliente.dataNascimentoTexto)) : '');\r\n    const [emailEdit, setEmailEdit] = React.useState(usuarioLogado.cliente.email ? usuarioLogado.cliente.email : '');\r\n    const [senhaAntigaEdit, setSenhaAntigaEdit] = React.useState('');\r\n    const [senhaNovaEdit, setSenhaNovaEdit] = React.useState('');\r\n    const [senhaNovaConfirmacaoEdit, setSenhaNovaConfirmacaoEdit] = React.useState('');\r\n    const [estabelecimentoAtual, setEstabelecimentoAtual] = useState(JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\")));\r\n    const [loading, setLoading] = React.useState(false);\r\n    \r\n    const logOut = () => {\r\n        localStorage.removeItem('cardapioCF');\r\n        localStorage.removeItem('carrinhoCF');\r\n        localStorage.removeItem('usuarioCF');\r\n        localStorage.removeItem('enderecoAtualCF');\r\n        localStorage.removeItem('estabelecimentoAtualCF');\r\n        history.push(`/login${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n    }\r\n\r\n    \r\n    //alerts    \r\n    const [alert, setAlert] = useState({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    \r\n    const alertStart = (msg, tipo) => {\r\n        setAlert({\"status\": true, \"tipo\": tipo, \"mesangem\": msg});\r\n    };\r\n\r\n    const alertClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAlert({\"status\": false, \"tipo\": alert.tipo, \"mesangem\": alert.mesangem});\r\n    };\r\n\r\n\r\n  async function salvarConfiguracoesPerfil(e) {   \r\n\r\n    try {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        let dataNascimentoEditado = usuarioLogado.cliente.dataNascimentoTexto\r\n\r\n        if(dataNascimentoEditado !== 'NaN/NaN/NaN'){\r\n            //console.log(\"arrumando data\")\r\n            let d = new Date(dataNascimentoEdit);\r\n            let dt = d.getDate();\r\n            dt++\r\n            let mn = d.getMonth();\r\n            mn++\r\n            let yy = d.getFullYear();\r\n            dataNascimentoEditado = dt + \"/\" + mn + \"/\" + yy\r\n        }\r\n        if(senhaNovaEdit && senhaNovaEdit.length < 8){\r\n            alertStart(\"Sua nova senha contem menos de 8 coracteres!\", \"warning\")\r\n            document.getElementById(\"senhaNovaEdit\").focus()\r\n            setLoading(false)\r\n            return false\r\n        }else if(senhaNovaEdit && senhaNovaEdit !== senhaNovaConfirmacaoEdit){\r\n            alertStart(\"Sua senha de confirmação não é igual a nova senha!\", \"warning\")\r\n            document.getElementById(\"senhaNovaConfirmacaoEdit\").focus()\r\n            setLoading(false)\r\n            return false\r\n        }else if(senhaAntigaEdit && senhaAntigaEdit !== usuarioLogado.cliente.hashSenha){\r\n            alertStart(\"Sua senha antiga está incorreta!\", \"warning\")\r\n            document.getElementById(\"senhaAntigaEdit\").focus()\r\n            setLoading(false)\r\n            return false\r\n        }\r\n\r\n\r\n        const data = usuarioLogado.cliente\r\n        data.appNome = aplicativoDados.appNome\r\n        data.nome = usuarioEdit ? usuarioEdit : usuarioLogado.cliente.nome\r\n        data.cpf = cpfEdit ? cpfEdit : usuarioLogado.cliente.cpf\r\n        data.telefone = telefoneEdit ? telefoneEdit : usuarioLogado.cliente.telefone\r\n        data.dataNascimentoTexto = dataNascimentoEditado !== 'NaN/NaN/NaN' ? dataNascimentoEditado : usuarioLogado.cliente.dataNascimentoTexto\r\n        data.email = emailEdit ? emailEdit : usuarioLogado.cliente.email \r\n        data.hashSenha = senhaNovaEdit ? senhaNovaEdit : usuarioLogado.cliente.hashSenha\r\n        data.token = `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`\r\n\r\n        const response = await CadastrarUsuario(data, aplicativoDados)\r\n    \r\n        if(response.retornoErro){\r\n            //algum erro\r\n            alertStart(response.mensagem, \"error\")\r\n        }else{ \r\n            //tudo certo\r\n            usuarioLogado.cliente = response\r\n            setUsuarioLogado(usuarioLogado)\r\n            localStorage.setItem(\"usuarioCF\", JSON.stringify(usuarioLogado))\r\n            alertStart(\"Suas informações pessoais foram salvas com sucesso!\", \"success\")\r\n        }\r\n    }\r\n    catch (error) {\r\n        Sentry.captureMessage(`NotFunctions CadastrarUsuario ${window.location.hostname} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n    }\r\n\r\n    setConfiguracoesPerfilModal(false)\r\n    setLoading(false)\r\n  }\r\n  \r\n\r\n \r\n    class QRCode extends Component {\r\n\r\n        state = {\r\n            result: 'No result',\r\n            leu: false,\r\n        }\r\n    \r\n        handleScan = data =>  {           \r\n            if (data && !this.state.leu) {  \r\n                \r\n                setQrCodeModal(false)         \r\n                this.setState({\r\n                    result: data,\r\n                    leu: true,\r\n                })\r\n\r\n                //console.log(\"data\", data)\r\n\r\n                try {\r\n                    setLoading(true)\r\n                    const usuarioLogado = JSON.parse(localStorage.getItem(\"usuarioCF\"))\r\n                    const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))\r\n                    \r\n                    \r\n                    const data = {}\r\n                    data.idCliente = usuarioLogado.cliente.id         \r\n                    data.appNome = aplicativoDados.appNome\r\n                    data.codigoSelo = data.replace(\"market://details?id=br.com.clientefiel&\", \"\") \r\n                    data.token = `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`\r\n\r\n                    const response = RegistrarSeloSeguro2(data, aplicativoDados)\r\n                \r\n                    if(response.retornoErro){\r\n                        //algum erro\r\n                        alertStart(response.mensagem, \"error\")\r\n                    }else{ \r\n                        //tudo certo\r\n                        let statusAlert = \"success\"\r\n                        \r\n                        if(response.codErro > 0){ // ERRO\r\n                            statusAlert = \"error\"\r\n                        }else{\r\n\r\n                            if(response.status === 0){                                \r\n                                usuarioLogado.cartelas[0] = response                            \r\n                            }else{\r\n                                //CARTELA COMPLETOU - INICIAR OUTRA\r\n                                usuarioLogado.cartelas.unshift(response)\r\n                            }\r\n\r\n                            localStorage.setItem(\"usuarioCF\", JSON.stringify(usuarioLogado))\r\n                            setUsuarioLogado(usuarioLogado)\r\n                            \r\n                        }                          \r\n                        \r\n                        setLoading(false)\r\n                        alertStart(response.mensagem, statusAlert)\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    Sentry.captureMessage(`NotFunctions buscarCardapioOffline ${window.location.hostname} - ${error}`);\r\n                    alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")  \r\n                    setLoading(false)  \r\n                }\r\n            }\r\n        }\r\n\r\n        handleError = err => {\r\n            setQrCodeModal(false) \r\n            setLoading(false)\r\n            alertStart(\"Algo deu errado ao registrar selo  (handleError)\", \"error\")\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <div>\r\n                    <QrReader\r\n                        delay={300}\r\n                        onError={this.handleError}\r\n                        onScan={this.handleScan}\r\n                        style={{ width: '100%' }}\r\n                    />\r\n                    {/*<p>{this.state.result}</p>*/}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    //console.log(QRCode.result)\r\n    \r\n\r\n    return (\r\n        <>\r\n            {loading &&\r\n            (<Backdrop className={classes.backdrop} open={loading}>\r\n            <CircularProgress color=\"inherit\" />\r\n            </Backdrop>)}\r\n\r\n            <Snackbar open={alert.status} autoHideDuration={6000} onClose={alertClose}>\r\n                <Alert onClose={alertClose} severity={alert.tipo}>\r\n                {alert.mesangem}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n\r\n            \r\n            {/* <Cabecalho voltar={false} pesquisa={false} produtoNome={usuarioLogado.cliente.nome}></Cabecalho> */ }\r\n            <div className=\"container container-perfil-fidelidade\">\r\n                <Container className=\"containerEstabelecimentoComponente\">\r\n                    <div className=\"EstabelecimentoComponente row\" >\r\n                        <div className=\"divFundo\" style={{ \"background\": aplicativoDados.urlFundoSite ? `url(${aplicativoDados.urlFundoSite})` : `${aplicativoDados.corSitePrimaria}` }}>\r\n                            <Avatar className=\"logoPerfil\" style={{\"textTransform\": \"uppercase\" ,\"background\": aplicativoDados.corSiteSecundaria, \"color\": aplicativoDados.corSitePrimaria, \"fontSize\": \"3em\" }}>{usuarioLogado.cliente.nome[0]}</Avatar>\r\n                        </div>\r\n\r\n                        <Carousel indicators={false} controls={false} className=\"carrossel w-100 fundoInfoEstabelecimento\">\r\n                            <Carousel.Item className=\"container\">\r\n                                <Row className=\"rowUsuarioPerfil\">\r\n                                    <Col xs={4} md={4} lg={2}></Col>\r\n                                    <Col xs={8} md={8} lg={6} className=\"fraseLadoLogo\"><h5>{usuarioLogado.cliente.nome}</h5></Col>                                    \r\n                                </Row>\r\n                            </Carousel.Item>\r\n                        </Carousel>\r\n\r\n                        <div style={{\"width\": \"100%\"}}>\r\n                            <List>\r\n\r\n                                \r\n                                <ListItem button onClick={() => { \r\n                                    history.push(`/fidelidade/cartelas${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n                                    }}>\r\n                                    <ListItemIcon> <FavoriteIcon /> </ListItemIcon>\r\n                                    <ListItemText primary={\"Cartelas de Fidelidade\"} />\r\n                                </ListItem>\r\n\r\n                                <ListItem button onClick={() => { \r\n                                    history.push(`/fidelidade/estabelecimentos`)\r\n                                    }}>\r\n                                    <ListItemIcon> <LocationOnIcon /> </ListItemIcon>\r\n                                    <ListItemText primary={\"Estabelecimentos\"} />\r\n                                </ListItem>\r\n\r\n                                \r\n\r\n                                <ListItem button onClick={() => { setConfiguracoesPerfilModal(true) }}>\r\n                                    <ListItemIcon> <SettingsIcon /> </ListItemIcon>\r\n                                    <ListItemText primary={\"Configurações\"} />\r\n                                </ListItem>\r\n\r\n                            </List>\r\n                            <Divider/>\r\n                            <List>\r\n\r\n                                <ListItem button onClick={logOut}>\r\n                                    <ListItemIcon> <ExitToAppIcon /> </ListItemIcon>\r\n                                    <ListItemText primary={\"Sair\"} />\r\n                                </ListItem>\r\n\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                    <Tooltip title=\"Ler QRcode\" placement=\"bottom\" aria-label=\"Ler QRcode\" onClick={() => { setQrCodeModal(true) }}>\r\n                        <Fab color=\"secondary\" style={{\"color\": aplicativoDados.corSitePrimaria}} className={classes.absolute}>\r\n                        <AiOutlineQrcode />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </Container>\r\n            </div>\r\n\r\n            <Dialog\r\n              fullScreen={fullScreen}\r\n              open={configuracoesPerfilModal}\r\n              aria-labelledby=\"configPerfil\">\r\n                  \r\n              <form onSubmit={salvarConfiguracoesPerfil}>\r\n\r\n              <DialogTitle id=\"configPerfil\">{\"Configurações do Perfil\"}</DialogTitle>\r\n\r\n\r\n              <DialogContent>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    onChange={(e) =>{ setUsuarioEdit(e.target.value)}}\r\n                    value={usuarioEdit}\r\n                    id=\"usuarioEdit\"\r\n                    label=\"Nome do Usuário\"\r\n                    name=\"usuarioEdit\"\r\n                    type=\"text\"                    \r\n                />   \r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    onChange={(e) =>{ setCpfEdit(e.target.value)}}\r\n                    value={cpfEdit}\r\n                    id=\"cpfEdit\"\r\n                    label=\"CPF\"\r\n                    name=\"cpfEdit\"\r\n                    type=\"text\"                    \r\n                />   \r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    onChange={(e) =>{ setTelefoneEdit(e.target.value)}}\r\n                    value={telefoneEdit}\r\n                    id=\"telefoneEdit\"\r\n                    label=\"Telefone\"\r\n                    name=\"telefoneEdit\"\r\n                    type=\"number\"                    \r\n                />  \r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    onChange={(e) =>{ setDataNascimentoEdit(e.target.value)}}\r\n                    value={dataNascimentoEdit}\r\n                    id=\"dataNascimentoEdit\"\r\n                    label=\"Data Nascimento\"\r\n                    name=\"dataNascimentoEdit\"\r\n                    type=\"date\"                    \r\n                />  \r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    onChange={(e) =>{ setEmailEdit(e.target.value)}}\r\n                    value={emailEdit}\r\n                    id=\"emailEdit\"\r\n                    label=\"Email\"\r\n                    name=\"emailEdit\"\r\n                    type=\"email\"                    \r\n                />  \r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    onChange={(e) =>{ setSenhaAntigaEdit(e.target.value)}}\r\n                    value={senhaAntigaEdit}\r\n                    required={senhaNovaEdit ? true : false}\r\n                    id=\"senhaAntigaEdit\"\r\n                    label=\"Senha Antiga\"\r\n                    name=\"senhaAntigaEdit\"\r\n                    type=\"password\"                    \r\n                />  \r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    onChange={(e) =>{ setSenhaNovaEdit(e.target.value)}}\r\n                    value={senhaNovaEdit}\r\n                    required={senhaAntigaEdit ? true : false}\r\n                    id=\"senhaNovaEdit\"\r\n                    label=\"Senha Nova\"\r\n                    name=\"senhaNovaEdit\"\r\n                    type=\"password\"                    \r\n                />  \r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    required={senhaNovaEdit ? true : false}\r\n                    onChange={(e) =>{ setSenhaNovaConfirmacaoEdit(e.target.value)}}\r\n                    value={senhaNovaConfirmacaoEdit}\r\n                    id=\"senhaNovaConfirmacaoEdit\"\r\n                    label=\"Senha Nova Confirmação\"\r\n                    name=\"senhaNovaConfirmacaoEdit\"\r\n                    type=\"password\"                    \r\n                /> \r\n              </DialogContent>\r\n\r\n              <DialogActions>                \r\n                <Button onClick={() => {setConfiguracoesPerfilModal(false)}} >\r\n                  Cancelar\r\n                </Button>\r\n                <Button type=\"submit\"\r\n                style={{\"color\": \"#28a745\"}}>\r\n                  Atualizar\r\n                </Button>\r\n              </DialogActions>\r\n              </form>\r\n            </Dialog>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <Dialog\r\n              fullScreen={fullScreen}\r\n              open={qrCodeModal}\r\n              aria-labelledby=\"qrCodeModal\">\r\n\r\n              <DialogTitle id=\"qrCodeModal\">{\"Leitura de QRCode\"}</DialogTitle>\r\n              <DialogContent>\r\n\r\n                <QRCode/>\r\n\r\n              </DialogContent>\r\n              <DialogActions>                \r\n                <Button onClick={() => {setQrCodeModal(false)}} >\r\n                  Cancelar\r\n                </Button>                \r\n              </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* <Rodape valor=\"Perfil\"></Rodape> */}\r\n        </>\r\n    );\r\n}\r\n\r\n","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\imagensTematicas\\index.js",["347","348","349","350","351","352","353","354","355","356","357","358","359"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport {Card,  Row, Col } from 'react-bootstrap';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport api from '../../services/api';\r\n\r\n\r\nimport apresentacao_diaDosPais from '../../assets/geradorDeImagens/diaDosPais/apresentacao.jpg';\r\nimport apresentacao_blackFriday from '../../assets/geradorDeImagens/blackFriday/apresentacao.jpg';\r\nimport apresentacao_natal from '../../assets/geradorDeImagens/natal/apresentacao.jpg';\r\nimport apresentacao_revellion from '../../assets/geradorDeImagens/revellion/apresentacao.jpg';\r\n\r\n\r\n\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport './styles.css';\r\nimport DiaDosPais from './DiaDosPais';\r\nimport BlackFriday from './BlackFriday';\r\nimport Natal from './Natal';\r\nimport Revellion from './Revellion';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  rootAlert: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    margin: \"1em 0\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function Downloads() {\r\n\r\n  const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))  \r\n  \r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const history = useHistory();\r\n  \r\n\r\n  // FUNCOES\r\n  \r\n  //alerts e loading\r\n  const alertStart = (msg, tipo) => {\r\n    setAlert({\"status\": true, \"tipo\": tipo, \"mesangem\": msg});\r\n  };\r\n  \r\n  const alertClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlert({\"status\": false, \"tipo\": alert.tipo, \"mesangem\": alert.mesangem});\r\n\r\n  };\r\n\r\n  //console.log('location', window.location.pathname)\r\n\r\n  \r\n  const [loading, setLoading] = React.useState(false);\r\n  const [alert, setAlert] = useState({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n  const [logo64, setLogo64] = useState('');\r\n  const [openImage, setOpenImage] = useState(false);\r\n  const [criarImagem, setCriarImagem] = useState('');\r\n\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n  useEffect(() => {\r\n    get64Logo()\r\n  }, []);\r\n  \r\n\r\n  const get64Logo = async () => {\r\n    const logo64 = await api.get('siteutil/LogoBase64/'+ aplicativoDados.appNome, {\r\n      headers: {\"Content-Type\": \"application/json\"}\r\n    })    \r\n    setLogo64(logo64.data)\r\n  }\r\n  \r\n  return (\r\n\r\n      <Container>\r\n      \r\n        <Backdrop className={classes.backdrop} open={loading}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n\r\n\r\n        <div className={classes.paper}>\r\n          <Row>\r\n\r\n            <Col xs={12} md={4} lg={3} >\r\n              <img className={\"apresentacao\"} src={apresentacao_revellion} />   \r\n              <Button\r\n                fullWidth\r\n                onClick={() => {\r\n                  setOpenImage(true)\r\n                  setCriarImagem(\"revellion\")\r\n                }}\r\n                type=\"submit\"\r\n                variant=\"contained\">Acessar</Button>\r\n            </Col>\r\n            \r\n            <Col xs={12} md={4} lg={3} >\r\n              <img className={\"apresentacao\"} src={apresentacao_natal} />   \r\n              <Button\r\n                fullWidth\r\n                onClick={() => {\r\n                  setOpenImage(true)\r\n                  setCriarImagem(\"natal\")\r\n                }}\r\n                type=\"submit\"\r\n                variant=\"contained\">Acessar</Button>\r\n            </Col>\r\n\r\n\r\n            <Col xs={12} md={4} lg={3} >\r\n              <img className={\"apresentacao\"} src={apresentacao_blackFriday} />   \r\n              <Button\r\n                fullWidth\r\n                onClick={() => {\r\n                  setOpenImage(true)\r\n                  setCriarImagem(\"blackFriday\")\r\n                }}\r\n                type=\"submit\"\r\n                variant=\"contained\">Acessar</Button>\r\n            </Col>\r\n\r\n\r\n            <Col xs={12} md={4} lg={3} >\r\n              <img className={\"apresentacao\"} src={apresentacao_diaDosPais} />   \r\n              <Button\r\n                fullWidth\r\n                onClick={() => {\r\n                  setOpenImage(true)\r\n                  setCriarImagem(\"diaDosPais\")\r\n                }}\r\n                type=\"submit\"\r\n                variant=\"contained\">Acessar</Button>\r\n            </Col>\r\n\r\n            \r\n\r\n            <Col xs={12} md={4} lg={3} >\r\n             \r\n            </Col>\r\n          </Row>\r\n        </div>\r\n\r\n\r\n        <Dialog\r\n          open={openImage}\r\n          TransitionComponent={Transition}\r\n          fullScreen={fullScreen}\r\n          keepMounted\r\n          onClose={() => {setOpenImage(false)}}\r\n          aria-labelledby=\"imagem-gerada-title\"\r\n          aria-describedby=\"imagem-gerada-description\">\r\n          <DialogContent>          \r\n                {\r\n                  logo64 ? \r\n                    (criarImagem === \"diaDosPais\" && <DiaDosPais logo={logo64}/>) \r\n                  : <CircularProgress color=\"inherit\" />\r\n                }\r\n                {\r\n                  logo64 ? \r\n                    (criarImagem === \"blackFriday\" && <BlackFriday logo={logo64}/>) \r\n                  : <CircularProgress color=\"inherit\" />\r\n                }\r\n                {\r\n                  logo64 ? \r\n                    (criarImagem === \"natal\" && <Natal logo={logo64}/>) \r\n                  : <CircularProgress color=\"inherit\" />\r\n                }\r\n                {\r\n                  logo64 ? \r\n                    (criarImagem === \"revellion\" && <Revellion logo={logo64}/>) \r\n                  : <CircularProgress color=\"inherit\" />\r\n                }\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={() =>{setOpenImage(false)}} >\r\n              voltar\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Container>\r\n\r\n  );\r\n}\r\n","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\AvaliacaoPedido\\index.js",["360"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as Sentry from \"@sentry/react\";\r\n\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\nimport {\r\n  AvaliarPedido\r\n} from '../../services/functions';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport './styles.css';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  rootAlert: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    margin: \"1em 0\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n}));\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n  const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))  \r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const search = props.location.search;\r\n  const params = new URLSearchParams(search); \r\n  const avaliacaoParamsCliente = params.get('Cliente')\r\n  const avaliacaoParamsPedido = params.get('Pedido')\r\n\r\n  if(!avaliacaoParamsCliente || !avaliacaoParamsPedido){\r\n    history.push(`/`)\r\n  }\r\n\r\n  \r\n\r\n  // FUNCOES\r\n  \r\n  //alerts e loading\r\n  const alertStart = (msg, tipo) => {\r\n    setAlert({\"status\": true, \"tipo\": tipo, \"mesangem\": msg});\r\n  };\r\n  \r\n  const alertClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlert({\"status\": false, \"tipo\": alert.tipo, \"mesangem\": alert.mesangem});\r\n\r\n  };\r\n\r\n  const avaliarPedido = async () => {\r\n\r\n    try {\r\n      if(nota <= 0 || nota > 10){\r\n        alertStart('Nota inválida!', \"warning\") \r\n        return false\r\n      }\r\n      setLoading(true)\r\n\r\n      const data = {\r\n        \"cliente\": {\"appNome\": aplicativoDados.appNome, \"id\": parseInt(atob(avaliacaoParamsCliente)), \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`},\r\n        \"pedido\": {\"appNome\": aplicativoDados.appNome, \"id\": parseInt(atob(avaliacaoParamsPedido)), \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`},\r\n        \"nota\": nota ? nota : 0,\r\n        \"respondido\": false,\r\n        'comentario': comentario,\r\n        \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n        \"appNome\": aplicativoDados.appNome,\r\n      }\r\n\r\n      const response = await AvaliarPedido(data, aplicativoDados)\r\n  \r\n      if(response.retornoErro){\r\n        //algum erro\r\n        alertStart(response.mensagem, \"error\")\r\n        setLoading(false)\r\n      }else{ \r\n        //tudo certo\r\n        alertStart(response.mensagem, \"success\") \r\n        setTimeout(() => {\r\n          history.push(`/`)\r\n        }, 3000);\r\n      }\r\n    }\r\n    catch (error) {\r\n        Sentry.captureMessage(`NotFunctions buscarCardapioOffline ${window.location.hostname} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n    }\r\n\r\n    \r\n\r\n  }\r\n\r\n  \r\n  const [loading, setLoading] = React.useState(false);\r\n  const [alert, setAlert] = useState({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n  const [nota, setNota] = React.useState(0);\r\n  const [comentario, setComentario] = React.useState('');\r\n\r\n  return (\r\n\r\n\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      <Snackbar open={alert.status} autoHideDuration={6000} onClose={alertClose}>\r\n        <Alert onClose={alertClose} severity={alert.tipo}>\r\n          {alert.mesangem}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n\r\n      <CssBaseline />\r\n            \r\n      \r\n\r\n\r\n      <div className={classes.paper}>\r\n       \r\n          <Row>\r\n            <Col>\r\n              <img src={aplicativoDados?.urlLogo} style={{\"height\": \"150px\"}} alt=\"\" />\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row style={{\"textAlign\": \"center\", \"marginTop\": \"1em\"}}>\r\n            <Col xs={12} md={12} lg={12} >\r\n              <Typography gutterBottom variant=\"h5\" >\r\n                {'#'+atob(avaliacaoParamsPedido)}\r\n              </Typography>\r\n            </Col>\r\n            <Col xs={12} md={12} lg={12} >\r\n              <Typography >\r\n                Baseado na experiência do seu pedido, quais as chances de você indicar o aplicativo para um amigo ou familiar?\r\n              </Typography>\r\n            </Col>\r\n            <Col xs={12} md={12} lg={12} style={{\"textAlign\": \"center\", \"marginTop\": \"1em\"}}>\r\n              <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                <Typography component=\"legend\">{nota} de 10</Typography>\r\n                <Rating name=\"customized-10\"  max={10}\r\n                value={nota}\r\n                onChange={(event, newValue) => {\r\n                  setNota(newValue);\r\n                }}\r\n                 />\r\n              </Box>\r\n            </Col>\r\n            <Col xs={12} md={12} lg={12} >\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Comentário\"\r\n                fullWidth\r\n                rows={1}\r\n                value={comentario}\r\n                onChange={(e) =>{setComentario(e.target.value)}}\r\n                variant=\"outlined\"\r\n              />\r\n            </Col>\r\n            <Col xs={12} md={12} lg={12} >\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={avaliarPedido}\r\n                className={classes.submit}\r\n              >\r\n                Avaliar\r\n              </Button>\r\n            </Col>\r\n            \r\n          </Row>\r\n         \r\n      </div>\r\n    </Container>\r\n\r\n\r\n  );\r\n}\r\n","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Fidelidade\\index.js",["361","362","363","364","365","366"],"import React, {useEffect, useState} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './styles.css';\r\nimport Cabecalho from '../Global/cabecalho';\r\nimport Rodape from '../Global/rodape';\r\nimport * as Sentry from \"@sentry/react\";\r\n\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport HourglassFullIcon from '@material-ui/icons/HourglassFull';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport {\r\n  AtualizarDispositivoUsuario,\r\n  identificarEstabelecimentoSelecionado\r\n} from '../../services/functions';\r\nimport api from '../../services/api';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport fidelidadeVazia from '../../assets/love-flat.svg';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\n\r\n/* HISTORICO */\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nfunction dataSelo(text){\r\n  const data = new Date(text)\r\n  return (data.toISOString().substr(0, 10).split('-').reverse().join('/') + \" \" + data.getHours()+\":\"+data.getMinutes())\r\n}\r\n\r\nexport default function Fidelidade() {\r\n  const history = useHistory();\r\n  const [estabelecimentoAtual, setEstabelecimentoAtual] = useState(JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\")));\r\n  const [usuarioLogado, setUsuarioLogado]= useState(JSON.parse(localStorage.getItem(\"usuarioCF\")))\r\n  const cartelas = usuarioLogado.cartelas\r\n  const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  const [openHistorico, setOpenHistorico] = React.useState(false);\r\n  const [openRegulamento, setOpenRegulamento] = React.useState(false);\r\n  \r\n\r\n  const el = document.createElement( 'span' );\r\n  const [loadingUsuario, setLoadingUsuario] = React.useState(true);\r\n  const [textoRegulamento, setTextoRegulamento] = React.useState(el);\r\n  const [textoHistoricoCartela, setTextoHistoricoCartela] = React.useState(\"vazio\");\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const atualizarUsuario = async () => {\r\n    localStorage.setItem('dateUsuarioCF', new Date())\r\n    try {\r\n      const clientefiel = {\r\n        \"appNome\": aplicativoDados.appNome,\r\n        \"cliente\":{\r\n          \"email\": usuarioLogado.cliente.email,\r\n          \"hashSenha\": usuarioLogado.cliente.hashSenha, \r\n          \"appNome\": aplicativoDados.appNome,\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n        },\r\n        \"localizacao\":{\r\n          \"latitude\": \"\",\r\n          \"longitude\": \"\",\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          \"appNome\": aplicativoDados.appNome,\r\n        },\r\n        \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n      }\r\n      await api.post('clientefiel/LoginGeral', clientefiel, {\r\n        headers: {\"Content-Type\": \"application/json\"}\r\n      }).then((response)=>{\r\n        console.log('LoginGeral', response)\r\n        if(response.data.codErro > 0 ){        \r\n          if(response.data.mensagem.includes(\"inseridos estão incorretos.\")){\r\n            localStorage.clear()\r\n            history.push(`/`)\r\n          }\r\n        }else{\r\n\r\n          if(localStorage.getItem('tokenNotificationFirebase')){\r\n            if( response.data.cliente.codigoDispositivo !== localStorage.getItem('tokenNotificationFirebase') ){\r\n              response.data.cliente.codigoDispositivo = localStorage.getItem('tokenNotificationFirebase')\r\n              response.data.cliente.token = `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`\r\n              AtualizarDispositivoUsuario(response.data.cliente, aplicativoDados)\r\n            }\r\n          }\r\n\r\n          setUsuarioLogado(response.data)\r\n          localStorage.setItem('usuarioCF', JSON.stringify(response.data));\r\n          console.log(\" ===== usuario atualizado em tela de fidelidade ===== \") \r\n        }\r\n      });\r\n    } catch (error) {\r\n      Sentry.captureMessage(`${aplicativoDados.appNome} - ${error} - AtualizarUsuario`);\r\n      // alertStart(\"Erro inesperado ao atualizar usuario\", \"error\")\r\n    }\r\n\r\n    setLoadingUsuario(false)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    atualizarUsuario()\r\n  }, []);\r\n  \r\n\r\n  const closeHistoricoFuncao = () =>{\r\n    setOpenHistorico(false)\r\n  }\r\n\r\n  const closeRegulamentoFuncao = () =>{\r\n    setOpenRegulamento(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Cabecalho nomeUsuario={true}></Cabecalho>\r\n      <div className=\"container container-Fidelidade\">\r\n        <Row className=\"rowGlobalFidelidade\">\r\n          <Col xs={12} md={12} lg={12} >\r\n            <Typography gutterBottom variant=\"h5\" >\r\n              Programa de Fidelidade\r\n          </Typography>\r\n          </Col>\r\n\r\n          { loadingUsuario \r\n            ? <Col  xs={12} md={12} lg={12} style={{\"textAlign\": \"center\", \"marginTop\": \"3em\"}}>\r\n                <CircularProgress color=\"inherit\" />\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                        Atualizando Cartelas\r\n                </Typography>\r\n              </Col>\r\n            : cartelas?.length\r\n\r\n            // TEM CARTELAS\r\n            \r\n              ? cartelas.map((cartela, index) => (\r\n                <React.Fragment key={index}>\r\n                  <Col xs={12} md={6} lg={4} key={index} style={{\"margin\": \"1em 0\"}}  >\r\n                      \r\n                      <Card className={classes.root} style={{\"height\": \"100%\"}}>\r\n                        <CardActionArea  style={{ \"height\": \"calc(100% - 30px)\", \"flexFlow\": \"column-reverse\", \"alignItems\": \"normal\"}}>\r\n                          \r\n                          <Row style={{\"margin\":0,\"textAlign\": \"center\", \"width\": \"100%\", \"padding\": \"1em\", \"alignItems\": \"center\"}}>\r\n                            <Col xs={3} md={3} lg={3} style={{\"padding\":0}}>\r\n                              <CardMedia\r\n                                component=\"img\"\r\n                                className={\"logoLojas\"}\r\n                                alt={cartela.promocaoFidelidade.estabelecimento.nome}\r\n                                image={cartela.promocaoFidelidade.estabelecimento.urlLogo}\r\n                                title={cartela.promocaoFidelidade.estabelecimento.nome}\r\n                              />\r\n                            </Col>\r\n                            <Col xs={9} md={9} lg={9}>\r\n\r\n                             {\r\n                               !(cartela.descricaoCartela).includes(\"Em Cadastro\") && <Typography className={\"StatusEstabelecimento\"} variant=\"body2\"  component=\"p\">\r\n                                { (cartela.descricaoCartela).includes(\"Completa\") \r\n                                  ? <><ErrorIcon style={{\"fontSize\": \"initial\", \"color\":\"#ffc107\"}}/> Completa</> \r\n                                  : ( (cartela.descricaoCartela).includes(\"Resgatada\") \r\n                                    ? <><CheckCircleIcon style={{\"fontSize\": \"initial\", \"color\":\"#28a745\"}}/> Resgatada</> \r\n                                    : (cartela.descricaoCartela).includes(\"Expirada\") \r\n                                      ? <><CancelIcon style={{\"fontSize\": \"initial\", \"color\":\"#dc3545\"}}/> Expirada</> \r\n                                      : null)}\r\n\r\n                                      {/* (cartela.descricaoCartela).includes(\"Em Cadastro\") \r\n                                        ? <><HourglassFullIcon style={{\"fontSize\": \"initial\"}}/> Carregando</> \r\n                                        : null) */}\r\n                              </Typography>}\r\n\r\n\r\n                              <Typography className={\"StatusEstabelecimento\"} variant=\"body2\"  component=\"p\">\r\n                                { cartela.promocaoFidelidade.estabelecimento.nome }\r\n                                {/* { cartela.status === 0 ? \" ativa\" : \" vencida\" } */}\r\n                                {/* {cartela.promocaoFidelidade.estabelecimento.online ? <><CheckCircleIcon style={{\"fontSize\": \"initial\", \"color\":\"#28a745\"}}/> Aberto</> : <><CancelIcon style={{\"fontSize\": \"initial\"}}/> Fechado</>} */}\r\n                              </Typography>\r\n\r\n                              <Typography gutterBottom  component=\"h2\" className={\"nomeLoja\"}>                    \r\n                                { cartela.promocaoFidelidade.premio }\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={\"descricaoLoja\"}>\r\n                                { cartela.descricaoCartela }\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={\"descricaoLoja\"}>\r\n                                Validade: {cartela.dataValidadeTexto}\r\n                              </Typography>\r\n                              {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                {cartela.promocaoFidelidade.estabelecimento.tempoEntregaTexto}\r\n                              </Typography> */}\r\n\r\n                               {\r\n                                 cartela.status == 0\r\n                                 ? <>\r\n                                    {/*SELOS PREENCHIDOS*/cartela.selos.length > 0 ? cartela.selos.map(selo =>(\r\n                                    <FavoriteIcon style={{\"fontSize\": \"1.3rem\"}} key={selo.id}/> \r\n                                    )) : null}\r\n\r\n                                    {/*SELOS FALTANTES*/function(){\r\n                                      let rows = []\r\n                                      for(let i =0 ; i <  (cartela.promocaoFidelidade.quantidadeNecessaria - cartela.selos.length); i++){\r\n                                        rows.push( <FavoriteBorderIcon style={{\"fontSize\": \"1.3rem\"}} key={i}/>)\r\n                                      }\r\n                                      return rows\r\n                                    }()}\r\n                                 </>\r\n                                 : null\r\n                               }\r\n                                \r\n                            </Col>\r\n                          \r\n                          </Row>\r\n                          \r\n                          <CardContent style={{\"padding\": \"0 16px\"}}>\r\n                          \r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions style={{\"padding\":\"0\"}}>\r\n      \r\n                          \r\n                          <Button size=\"small\" className={\"botaoCinza naoArredondado\"} \r\n                            onClick={() =>{\r\n                              let texto = []\r\n                              cartela.selos.map(selo =>(\r\n                                // texto.push(<span key={selo.id}>{ dataSelo(selo.dataHoraAtribuicaoCartela) }<br></br></span>)\r\n                                texto.push(<span key={selo.id}>{ selo.dataHoraAtribuicaoTexto }<br></br></span>)\r\n                              ))\r\n                              setTextoHistoricoCartela(texto)\r\n                              setOpenHistorico(true)\r\n                            }}>\r\n                              Historico\r\n                            </Button>\r\n      \r\n                            <Button size=\"small\" className={\"botaoCinza naoArredondado\"} \r\n                              onClick={() =>{\r\n                                const el = document.createElement( 'span' );\r\n                                el.innerHTML = cartela.promocaoFidelidade.regulamento.texto\r\n                                setTextoRegulamento(el)\r\n                                setOpenRegulamento(true)  \r\n                            }}>\r\n                              Regulamento\r\n                            </Button>\r\n                          \r\n                        </CardActions>\r\n                      </Card>\r\n                    </Col>\r\n              </React.Fragment> ))\r\n\r\n              //SEM CARTELAS\r\n              : (<Col xs={12} md={12} lg={12} >\r\n                Você não possui nenhuma cartela de fidelidade!<br></br><br></br>\r\n                Registre um selo <b>Lendo um QRCode</b> ou <b>Fazendo um Pedido</b> na plataforma para iniciar uma nova cartela.  <br></br>  \r\n                <Button variant=\"contained\" onClick={() => {\r\n                  history.push(`/delivery${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n                }} className=\"mt-3\" style={{\"background\": `#28a745`, \"color\":\"white\"}} /*style={{\"background\": `${aplicativoDados.corSitePrimaria}`, \"color\":\"white\"}}*/ >Realizar um Pedido\r\n              </Button>  \r\n    \r\n              <div className=\"divImageCentroCardapio\" >\r\n                <img src={fidelidadeVazia} alt={\"sem cartelas de fidelidade\"} className=\"pretoEBranco\" style={{\"marginTop\": \"2em\"}}/>\r\n              </div> \r\n              </Col>)\r\n          }\r\n          \r\n\r\n\r\n        </Row>\r\n\r\n\r\n\r\n\r\n        <Dialog\r\n        fullScreen={fullScreen}\r\n        open={openHistorico}\r\n        onClose={closeHistoricoFuncao}\r\n        aria-labelledby=\"responsive-dialog-title\">\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Histórico da Cartela\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {textoHistoricoCartela.length > 0 ? textoHistoricoCartela : \"Sem Histórico\"}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={closeHistoricoFuncao} color=\"primary\">\r\n            Fechar\r\n          </Button>\r\n          {/* <Button onClick={historicoClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button> */}\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={openRegulamento}\r\n        onClose={closeRegulamentoFuncao}\r\n        aria-labelledby=\"responsive-dialog-regulamento\">\r\n        <DialogTitle id=\"responsive-dialog-regulamento\">{\"Regulamento Programa de Fidelidade\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"textoRegulamento\">\r\n\r\n              { openRegulamento ? (setTimeout(() => {\r\n                document.getElementById(\"textoRegulamento\").appendChild(textoRegulamento)\r\n              }, 100)) : null}\r\n\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={closeRegulamentoFuncao} color=\"primary\">\r\n            Fechar\r\n          </Button>          \r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      </div>\r\n      <Rodape valor=\"Fidelidade\"></Rodape>\r\n\r\n\r\n\r\n\r\n\r\n      \r\n\r\n    </>\r\n  );\r\n}","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Filter\\index.js",["367","368","369","370","371","372","373","374","375","376"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport api from '../../services/api';\r\nimport flatLoading from '../../assets/loading-flat.gif';\r\nimport flatErro from '../../assets/fail-flat.svg';\r\nimport setaErro from '../../assets/source.gif';\r\nimport * as Sentry from \"@sentry/react\";\r\nimport {\r\n  ObterCardapio,\r\n  AplicativoDadosUrl,\r\n  identificarEstabelecimentoSelecionado\r\n} from '../../services/functions';\r\n\r\n//alert\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nexport default function Filter(props) {\r\n  const [estabelecimentoAtual, setEstabelecimentoAtual] = useState(JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\")));\r\n  const history = useHistory();\r\n  //let qtdTest = 3;\r\n  \r\n  const search = props.location.search;\r\n  const params = new URLSearchParams(search); \r\n  //console.log('filter params', params)\r\n\r\n  const pedidoMesaParams = params.get('pedidoMesa')\r\n  const loginIzzaParams = params.get('loginIzza')\r\n  const cadastroParams = params.get('cadastro')\r\n  const mesaParams = params.get('mesa')\r\n  const comandaParams = params.get('comanda')\r\n  const lojaParams = params.get('loja')\r\n  const visualizacaoParams = params.get('visualizacao')\r\n\r\n  const direcionarParaLoja = (lojaParams && (!mesaParams && !comandaParams && !loginIzzaParams))\r\n\r\n  const avaliacaoParams = params.get('avaliacao')\r\n  const imagensParams = params.get('downloadImagens')\r\n  const downloadParams = params.get('download')\r\n  const downloadEscolhaParams = params.get('downloadEscolha')\r\n  const avaliacaoParamsCliente = params.get('Cliente')\r\n  const avaliacaoParamsPedido = params.get('Pedido')\r\n  const paramsChaveIzza = params.get('chave')\r\n  \r\n  const android = navigator.userAgent.includes('Android')\r\n\r\n  \r\n  var tentouSemWWW = false\r\n  const [textoErro, setTextoErro] = useState('')\r\n  const [naoEncontrou, setNaoEncontrou] = useState(false)\r\n  \r\n  const [alert, setAlert] = useState({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n    \r\n  function Alert(props) {\r\n      return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\n  const alertStart = (msg, tipo) => {\r\n      setAlert({\"status\": true, \"tipo\": tipo, \"mesangem\": msg});\r\n  };\r\n\r\n  const alertClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n          return;\r\n      }\r\n      setAlert({\"status\": false, \"tipo\": alert.tipo, \"mesangem\": alert.mesangem});\r\n  };\r\n\r\n  async function buscarAppDados(site){\r\n    console.log('filter buscarAppDados ' + site)\r\n    try {\r\n      \r\n      const response = await AplicativoDadosUrl(site, window.location.hostname)\r\n  \r\n      if(response.retornoErro){\r\n        console.log('retornoErro')\r\n        //algum erro\r\n        alertStart(response.mensagem, \"error\")\r\n      }else if( !(response && typeof response !== 'string') ){\r\n        console.log('!(response && typeof response !== \"string\") ')\r\n\r\n        setTextoErro(site + \" - \" + response)\r\n        setNaoEncontrou(true)\r\n        alertStart(`Erro ao procurar aplicativo`, \"error\")\r\n        setTimeout(() => {\r\n          window.location.reload()\r\n        }, 10000); \r\n\r\n      }else if(response.codErro > 0){\r\n        console.log('response.codErro > 0')\r\n        \r\n        console.log('tentouSemWWW', tentouSemWWW)\r\n        if(tentouSemWWW == false){\r\n          var siteSemWWW = site.includes('www.') ? site.replace('www.','') : 'www.'+site\r\n          tentouSemWWW = true\r\n          await buscarAppDados(siteSemWWW)\r\n          return false\r\n        }\r\n        setNaoEncontrou(true)\r\n        Sentry.captureMessage(`${window.location.hostname} Não encontrou o aplicativo`);\r\n        alertStart(response.mensagem, \"error\")  \r\n        setTimeout(() => {\r\n          window.location.reload()\r\n        }, 10000);\r\n      }else{\r\n        console.log('else')\r\n\r\n        // response.tagManager = 'GTM-M4J3JK4'\r\n        localStorage.setItem('aplicativoCF', JSON.stringify(response));      \r\n        localStorage.setItem('dateAplicativoDadosCF', new Date())  \r\n        telaInicial()\r\n      }\r\n    }\r\n    catch (error) {\r\n        Sentry.captureMessage(`NotFunctions buscarAppDados ${window.location.hostname} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n    }\r\n  }\r\n\r\n  async function verificarAppDados(){ \r\n\r\n    if (navigator.onLine){   \r\n      if(window.location.hostname == \"www.clientefiel.app\"){\r\n        window.location.href = \"https://appclientefiel.com.br/?utm_source=clienteFiel.App\"\r\n        return true;\r\n      }else if(window.location.hostname == \"www.pedidosite.com.br\"){\r\n        window.location.href = \"https://appclientefiel.com.br/?utm_source=pedidosite.Com.Br\"\r\n        return true;\r\n      }\r\n      else if(window.location.protocol == \"http:\" && !(window.location.hostname).includes('localhost') && !(window.location.hostname).includes('192.168')){\r\n        console.log('replace location ', window.location.href, ((window.location.href).replace(\"http:\", \"https:\")).replace('www.',''))\r\n        window.location.href = ((window.location.href).replace(\"http:\", \"https:\")).replace('www.','')\r\n        return true\r\n      }\r\n      \r\n      try {\r\n\r\n          if(!localStorage.getItem('aplicativoCF') || params.get('estabelecimento')){\r\n            localStorage.clear()\r\n            await buscarAppDados(params.get('estabelecimento') ? params.get('estabelecimento') : window.location.hostname)\r\n          }else{\r\n              telaInicial()\r\n          }\r\n      } catch (error) {\r\n        Sentry.captureMessage(`${window.location.hostname} - ${error} - BuscarAplicativoDados`);\r\n        alertStart(\"Erro nao identificado ao buscar aplicativo\", \"error\") \r\n        //console.log(\"Erro nao identificado ao buscar aplicativo\", err)\r\n        setTimeout(() => {\r\n          window.location.reload()\r\n        }, 3000);\r\n      }   \r\n    }else{\r\n      alertStart(\"Sem Internet!\", \"error\") \r\n\r\n      setTimeout(() => {\r\n        window.location.reload()\r\n      }, 3000);\r\n      // history.push('/offline');\r\n    } \r\n  }\r\n  \r\n  async function iniciarClienteFielStart(aplicativoDados){\r\n    if(aplicativoDados.estabelecimentos.length > 0){\r\n      await buscarCardapioOffline(aplicativoDados.estabelecimentos[0], aplicativoDados)\r\n    }else{\r\n      alertStart(\"Esse aplicativo não tem estabelecimento cadastrado\", \"error\") \r\n    }\r\n  }\r\n\r\n\r\n  async function telaInicial() {\r\n    const aplicativoDados = JSON.parse(localStorage.getItem('aplicativoCF'))\r\n    console.log('telaInicial', aplicativoDados)\r\n    //verifica se é ferramenta gratuita ClienteFielStart\r\n    if(aplicativoDados.clienteFielStart){\r\n      iniciarClienteFielStart(aplicativoDados)\r\n    }else if(cadastroParams){\r\n      history.push(`/cadastro${search}`)\r\n    }else if(direcionarParaLoja){//console.log('pedidoMesaParams,', pedidoMesaParams)\r\n      await buscarCardapioOffline(buscarLojaId(lojaParams), aplicativoDados, visualizacaoParams ? true : false)\r\n    }else if(avaliacaoParams){ //ir para avaliar pedido\r\n      history.push(`/delivery/avaliacaoPedido?Cliente=${avaliacaoParamsCliente}&Pedido=${avaliacaoParamsPedido}`);\r\n      return true\r\n    }else if(imagensParams){ //ir para gerador de imagens\r\n      history.push(`/downloads/imagensTematicas`);\r\n      return true\r\n    }else if(downloadEscolhaParams){ //ir para downloads\r\n      history.push(`/downloads/escolha`);\r\n      return true\r\n    }else if(downloadParams){ //ir para downloads\r\n      history.push(`/downloads`);\r\n      return true\r\n    }else if(loginIzzaParams){ //login izza\r\n      history.push(`/login${search}${identificarEstabelecimentoSelecionado(aplicativoDados)}`);      \r\n      return true\r\n    }else if(JSON.parse(localStorage.getItem('usuarioPedidoMesaCF'))?.logado){\r\n      //desconectar automaticamente usuario de mesa\r\n      if(new Date() - new Date(localStorage.getItem('usuarioPedidoMesaCF_Date')) > 5400000  ){\r\n        localStorage.removeItem('usuarioPedidoMesaCF')\r\n      }else{\r\n        history.push(`/delivery${identificarEstabelecimentoSelecionado(aplicativoDados)}`);\r\n        return true\r\n      }    \r\n    }else if( (aplicativoDados.possuiDelivery === false || loginIzzaParams || paramsChaveIzza || pedidoMesaParams || comandaParams || lojaParams || mesaParams) ){\r\n      //apenas fidelidade, login mesa ou login izza\r\n      history.push(`/login${search}${identificarEstabelecimentoSelecionado(aplicativoDados)}`);\r\n      return true\r\n    }else if(aplicativoDados.inicioTelaLogin){ //iniciar na tela de login \r\n      history.push(`/login${search}${identificarEstabelecimentoSelecionado(aplicativoDados)}`);      \r\n    }else{ //iniciar tela de cardapio\r\n      if(aplicativoDados?.estabelecimentos?.length === 1){ \r\n        await buscarCardapioOffline(aplicativoDados.estabelecimentos[0], aplicativoDados)\r\n      }else{\r\n        history.push('/lojas')\r\n      }\r\n    }\r\n  }\r\n\r\n  const buscarLojaId = (codigo) => {\r\n    const aplicativoDados = JSON.parse(localStorage.getItem('aplicativoCF'))\r\n    var loja = aplicativoDados.estabelecimentos[0]\r\n\r\n    for(var i = 0; i < aplicativoDados.estabelecimentos.length; i++){\r\n      if(codigo == aplicativoDados.estabelecimentos[i].id || codigo == aplicativoDados.estabelecimentos[i].codigo){\r\n        loja = aplicativoDados.estabelecimentos[i]\r\n        break;\r\n      }\r\n    }\r\n\r\n    return loja;\r\n  }\r\n\r\n  const buscarCardapioOffline = async (estabelecimento, aplicativoDados, view = false) => {   \r\n    try {\r\n      localStorage.setItem('estabelecimentoAtualCF', JSON.stringify(estabelecimento));\r\n      estabelecimento.token = process.env.REACT_APP_CLIENTEFIEL_TOKEN\r\n      const response = await ObterCardapio(estabelecimento, aplicativoDados)\r\n\r\n      if(response.retornoErro){\r\n        alertStart(response.mensagem, \"error\")\r\n        // setLoading(false)\r\n      }else{\r\n        const retorno = response\r\n        //console.log(\"ObterCardapio\", retorno)  \r\n        const carrinhoRetorno = {}\r\n        carrinhoRetorno.valorMinimoPedido = retorno.valorMinimoPedido\r\n        carrinhoRetorno.valorDesconto = retorno.valorDesconto\r\n        carrinhoRetorno.percentualDesconto = retorno.percentualDesconto\r\n        carrinhoRetorno.minimoEntregaGratis = retorno.minimoEntregaGratis\r\n        carrinhoRetorno.maximoPedidoComDesconto = retorno.maximoPedidoComDesconto\r\n        carrinhoRetorno.maximoDesconto = retorno.maximoDesconto\r\n        carrinhoRetorno.cupomDesconto = retorno.cupomDesconto\r\n  \r\n        carrinhoRetorno.pedido = {\r\n          \"entregaImediata\": false,\r\n          \"formaPagamento\": {},\r\n          \"itens\": [],\r\n          \"taxaEntrega\": null,\r\n          \"tokenCartaoCredito\": null,\r\n          \"troco\": null,\r\n          \"valorDesconto\": null,\r\n          \"valorEntrega\": null,\r\n          \"valorTotal\": 0,\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n        }\r\n        \r\n        localStorage.setItem(\"carrinhoCF\", JSON.stringify(carrinhoRetorno)) \r\n\r\n\r\n        const dataRetorno = {}\r\n        dataRetorno.categorias = retorno\r\n        dataRetorno.id = \"usuarioDeslogado\"\r\n        localStorage.setItem(\"cardapioCF\", JSON.stringify(dataRetorno))                      \r\n\r\n        if(!localStorage.getItem('usuarioCF')){\r\n          localStorage.setItem(\"usuarioCF\", JSON.stringify({}))    \r\n\r\n        }\r\n\r\n        if(!localStorage.getItem('enderecoAtualCF')){\r\n          localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({}))  \r\n        }\r\n  \r\n        if(view){\r\n          history.push(`/delivery?view=true${identificarEstabelecimentoSelecionado(aplicativoDados)}`);      \r\n          \r\n        }else{\r\n          history.push(`/delivery${identificarEstabelecimentoSelecionado(aplicativoDados)}`);      \r\n        }\r\n        \r\n      }\r\n    } catch (error) {\r\n      Sentry.captureMessage(`NotFunctions buscarCardapioOffline ${window.location.hostname} - ${error}`);\r\n      alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n    if(naoEncontrou === false){\r\n      verificarAppDados()\r\n    }else{\r\n      setTimeout(() => {\r\n        window.location.reload()\r\n      }, 3000);\r\n    }\r\n  }, []);\r\n  \r\n  \r\n\r\n\r\n  return (\r\n    \r\n    \r\n    ((navigator.userAgent).includes(\"Instagram\") && android)\r\n     ? <div className=\"divImageCentroErro\" >\r\n          <><img src={setaErro} alt={\"erro instagram android\"} className=\"pretoEBranco\" style={{\"width\": \"150px\",\"float\":\"right\", \"marginRight\": \"1em\", \"transform\": \"rotate(25deg)\"}}/>\r\n            <h6 style={{\"fontWeight\": \"100\", \"float\": \"right\"}}>Por favor, clique nos 3 (três) pontinhos e depois em Abrir</h6></>\r\n      </div>\r\n    : <div className=\"divImageCentro\" >\r\n        <Snackbar open={alert.status} autoHideDuration={6000} onClose={alertClose}>\r\n            <Alert onClose={alertClose} severity={alert.tipo}>\r\n            {alert.mesangem}\r\n            </Alert>\r\n        </Snackbar>\r\n\r\n        { naoEncontrou === false\r\n          ? <><img src={flatLoading}  alt={\"loading foguete\"} className=\"pretoEBranco\" style={{\"width\": '350px'}}/>\r\n            <h6 style={{\"fontWeight\": \"100\"}}>Carregando Aplicativo...</h6></>\r\n\r\n          : <><img src={flatErro} alt={\"loading erro\"} className=\"pretoEBranco\" style={{\"width\": '350px'}}/>\r\n            <h6 style={{\"fontWeight\": \"100\"}}>Não Encontramos Esse Aplicativo... [{window.location.hostname}] ou o Sistema está fora do ar temporariamente. {textoErro}</h6></>\r\n        }                          \r\n      </div>\r\n  );\r\n}\r\n","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Login\\index.js",["377","378","379","380","381","382","383","384","385","386","387","388","389","390"],"import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport * as Sentry from \"@sentry/react\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport AirlineSeatReclineNormalIcon from '@material-ui/icons/AirlineSeatReclineNormal';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\n\r\nimport api from '../../services/api';\r\nimport {LoginGeral,AtualizarDispositivoUsuario, removeAcento, RedefinirSenha, identificarEstabelecimentoSelecionado} from '../../services/functions';\r\nimport './styles.css';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  rootAlert: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    margin: \"1em 0\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n}));\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nexport default function Login(props) {\r\n  const [estabelecimentoAtual, setEstabelecimentoAtual] = useState(JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\")));\r\n  const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))  \r\n  const [tipoLogin, setTipoLogin] = useState( (aplicativoDados?.permiteLoginTelefone  && (aplicativoDados.loginApenasTelefone || localStorage.getItem('tipoLoginCF')) == 'apenasTelefone') ? 'apenasTelefone' : 'usuarioSenha' );\r\n  //login salvo pela tentativa de logincom token da izza com link expirado\r\n  localStorage.removeItem('tipoLoginCF')\r\n\r\n  // const [definirAcao, setDefinirAcao] = React.useState(tipoLogin ? true : false);\r\n  \r\n  //const [usuario, setUsuario] = useState('guilherme.jar@gmail.com');\r\n  const [usuario, setUsuario] = useState('');\r\n  //const [senha, setSenha] = useState('321321');\r\n  const [senha, setSenha] = useState('');\r\n\r\n  const [esqueceuSenha, setEsqueceuSenha] = useState({\"abrir\": false, \"email\": '', \"tipoRecuperacao\": 0});\r\n  const [telefone, setTelefone] = useState('');\r\n  const [smsOrWhatsapp, setSmsOrWhatsapp] = useState('');\r\n  const [CadastroTelefone, setCadastroTelefone] = useState(false);\r\n  const [telaCodigo, setTelaCodigo] = useState(false);\r\n  const [usuariosMesmoTelefone, setUsuariosMesmoTelefone] = useState({});\r\n  const [verificarUsuario, setVerificarUsuario] = useState({\"aberto\":false, \"usuario\":0});\r\n  const [acessToken, setAcessToken] = useState('');\r\n  const history = useHistory();\r\n  //LOGIN TOKEN\r\n  const search = props.location.search;\r\n  const params = new URLSearchParams(search);  \r\n  const [whats, setWhats] = useState(params.get('whats'));\r\n  const [chave, setChave] = useState(params.get('chave'));\r\n  const [lojaParams, setLojaParams] = useState(params.get('loja'));\r\n\r\n  const FacebookId = params.get('facebookId')\r\n  const FacebookEmail = params.get('facebookEmail')\r\n  const FacebookNome = params.get('facebookNome')\r\n\r\n  \r\n  const [tentativaMesa, setTentativaMesa] = useState(0)\r\n  const [tentativaIzza, setTentativaIzza] = useState(0)\r\n  const [tentativaFacebookLogin, setTentativaFacebookLogin] = useState(0)\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  \r\n\r\n  // FUNCOES\r\n  \r\n  //alerts e loading\r\n  const alertStart = (msg, tipo) => {\r\n    setAlert({\"status\": true, \"tipo\": tipo, \"mesangem\": msg});\r\n  };\r\n  \r\n  const alertClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlert({\"status\": false, \"tipo\": alert.tipo, \"mesangem\": alert.mesangem});\r\n\r\n  };\r\n\r\n  \r\n\r\n  const loginPedidoMesa = async () => {\r\n    setLoading(true)\r\n    setTentativaMesa(1)\r\n\r\n    try {\r\n\r\n      var data = {}\r\n\r\n      if(params.get('mesa')){\r\n        data = {\r\n          \"appNome\": aplicativoDados.appNome,\r\n          \"nome\": \"Mesa \" + params.get('mesa'),\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n        }\r\n      }else if(params.get('comanda')){\r\n        data = {\r\n          \"appNome\": aplicativoDados.appNome,\r\n          \"nome\": \"Comanda \" + params.get('comanda'),\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n        }\r\n      }\r\n\r\n      \r\n\r\n      await api.post('clientefiel/CadastrarUsuarioMesa', data, {\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n      }).then(response => {\r\n       console.log('CadastrarUsuarioMesa', response)\r\n\r\n        if(typeof response.data != 'string' && !response.data.codErro > 0){\r\n          response.data.logado = true\r\n          response.data.cliente.telefone = \"\"\r\n          localStorage.setItem('usuarioCF', JSON.stringify(response.data));\r\n          response.data.cliente.nome = \"\"\r\n          localStorage.setItem('usuarioPedidoMesaCF_Date', new Date())\r\n          localStorage.setItem('usuarioPedidoMesaCF', JSON.stringify(response.data))\r\n\r\n          localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({}))\r\n          localStorage.setItem('carrinhoCF', JSON.stringify({}));\r\n          \r\n\r\n          const lojaId = params.get('loja')\r\n          aplicativoDados.estabelecimentos.forEach((loja) => {\r\n            if(loja.id == lojaId){ \r\n              localStorage.setItem(\"estabelecimentoAtualCF\", JSON.stringify(loja))\r\n            }\r\n          })\r\n          \r\n\r\n          if(localStorage.getItem(\"estabelecimentoAtualCF\")){\r\n           //console.log('buscarcarapio')\r\n            buscaCardapioInicial(response.data)\r\n          }else{\r\n            localStorage.removeItem('usuarioPedidoMesaCF')\r\n            localStorage.removeItem('usuarioCF')\r\n            localStorage.removeItem('usuarioPedidoMesaCF_Date')\r\n            setLoading(false)\r\n            alertStart(\"Nenhum estabelecimento disponivel para essa mesa\", \"error\")   \r\n          }\r\n          \r\n          //realizarLogin_UsuarioSenha(false , response.data.cliente.email, response.data.cliente.hashSenha)\r\n        }else{\r\n          setLoading(false)\r\n          alertStart(\"Houve um erro ao buscar mesa\", \"error\")\r\n        }\r\n\r\n      })\r\n    } catch (error) {\r\n      Sentry.captureMessage(`${aplicativoDados.appNome} - ${error} - CadastrarUsuarioMesa`);\r\n      alertStart(\"Erro inesperado ao buscar mesa\", \"error\")\r\n      setLoading(false)\r\n    }\r\n\r\n  }\r\n  function calcularValorTotal(carrinho){\r\n    \r\n    const cardapio = JSON.parse(localStorage.getItem('cardapioCF'))\r\n    // const carrinho = JSON.parse(localStorage.getItem('carrinhoCF'))\r\n    const enderecoAtual = JSON.parse(localStorage.getItem('enderecoAtualCF'))\r\n\r\n    let valorTotalItens = 0;\r\n    let valorProdutosPromocionais = 0;\r\n\r\n    carrinho.pedido.itens.forEach(item => {\r\n      valorTotalItens += item.valorProdutoHistorico      \r\n      if(item.produto.promocional){\r\n        valorProdutosPromocionais += item.valorProdutoHistorico\r\n      }\r\n    })\r\n\r\n   //console.log(\"valorProdutosPromocionais\", valorProdutosPromocionais)\r\n   //console.log(\"valorPrduto\", valorTotalItens)\r\n    \r\n    \r\n\r\n\r\n    let taxaDeEntrega = 0\r\n    if(carrinho.pedido.tipoPedido !== 1 && !(valorTotalItens > cardapio.minimoEntregaGratis && cardapio.minimoEntregaGratis > 0)){ // NAO FOR RETIRADA NO LOCAL\r\n      taxaDeEntrega = carrinho.pedido.valorEntrega ? carrinho.pedido.valorEntrega : enderecoAtual.taxaEntrega ? enderecoAtual.taxaEntrega : 0\r\n    }\r\n\r\n    let valorFinalProdutos = 0;\r\n    if(cardapio.percentualDesconto && (cardapio.valorDesconto === 0 || !cardapio.valorDesconto)){\r\n      //desconto percetual - apenas em produtos nao promocionais\r\n      var descontoPercentual = ((valorTotalItens - valorProdutosPromocionais) * cardapio.percentualDesconto) / 100\r\n\r\n      //maximo que pode dar de desconto\r\n      if(cardapio.maximoDesconto && descontoPercentual > cardapio.maximoDesconto){\r\n        descontoPercentual = cardapio.maximoDesconto\r\n      }\r\n      \r\n\r\n      carrinho.percentualDescontoValor = descontoPercentual\r\n      valorFinalProdutos = ( valorTotalItens - descontoPercentual ) \r\n\r\n    }else{\r\n      //desconto fixo - apenas em produtos nao promocionais\r\n      var descontoFixo = carrinho.pedido.valorDesconto\r\n\r\n      //maximo que pode dar de desconto\r\n      if(cardapio.maximoDesconto && descontoFixo > cardapio.maximoDesconto){\r\n        descontoFixo = cardapio.maximoDesconto\r\n      }\r\n\r\n      let produtosNaoPromocionais = valorTotalItens - valorProdutosPromocionais\r\n      produtosNaoPromocionais -= descontoFixo      \r\n      valorFinalProdutos = valorProdutosPromocionais + (produtosNaoPromocionais > 0 ? produtosNaoPromocionais : 0)     \r\n    }\r\n\r\n   //console.log(\"valorFinalProdutos\", valorFinalProdutos)\r\n    if(valorFinalProdutos < 0){\r\n      carrinho.pedido.valorTotal = taxaDeEntrega\r\n    }else{\r\n      carrinho.pedido.valorTotal = valorFinalProdutos + taxaDeEntrega\r\n    }\r\n\r\n\r\n\r\n    if(carrinho.pedido.valorTotal < 0){\r\n      carrinho.pedido.valorTotal = 0.0\r\n    }\r\n\r\n    localStorage.setItem(\"carrinhoCF\", JSON.stringify(carrinho))     \r\n\r\n\r\n  }\r\n\r\n  const adicionarEndereco = async (usuarioLogado) => {  \r\n      var resp = null;\r\n      try {\r\n        const enderecoBackUp = JSON.parse(localStorage.getItem(\"enderecoAtualCF\"))\r\n        const data = {\r\n          \"idCliente\": usuarioLogado.cliente.id,\r\n          \"idEstabelecimento\": JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\"))?.id,\r\n          \"cep\": enderecoBackUp.cep,\r\n          \"uf\": enderecoBackUp.uf,\r\n          \"cidade\": enderecoBackUp.cidade,\r\n          \"bairro\": enderecoBackUp.bairro,\r\n          \"logradouro\": enderecoBackUp.logradouro,\r\n          \"numero\": enderecoBackUp.numero,\r\n          \"complemento\": enderecoBackUp.complemento,\r\n          \"referencia\": enderecoBackUp.referencia,\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n        }\r\n        \r\n        if(enderecoBackUp.bairroEspecifico){\r\n          data.bairroEspecifico = 1\r\n        }else{\r\n          data.bairroEspecifico = 0\r\n        }\r\n        \r\n        await api.post('cliente/CadastrarEnderecoCliente', data, {\r\n          headers: { \"Content-Type\": \"application/json\" }\r\n        }).then(retorno => {\r\n          console.log('CadastrarEnderecoCliente', retorno)\r\n  \r\n          if(typeof retorno.data == 'string' ){\r\n            alertStart(\"Erro inesperado ao cadastrar endereço\", \"error\")     \r\n          }else if(!(retorno.data.codErro > 0) ){\r\n            \r\n            if(usuarioLogado.cliente && usuarioLogado.cliente.enderecos){\r\n              usuarioLogado.cliente.enderecos.push(retorno.data)\r\n              localStorage.setItem('usuarioCF', JSON.stringify(usuarioLogado))\r\n              resp = retorno.data.id\r\n            }else{\r\n              alertStart('Não foi possivel cadastrar o seu endereço!', \"error\")     \r\n            }\r\n            \r\n          }else{\r\n            alertStart(retorno.data.mensagem, \"error\")     \r\n          }\r\n        })\r\n      } catch (error) {\r\n        Sentry.captureMessage(`${aplicativoDados.appNome} - ${error} - CadastrarEnderecoCliente`);\r\n        alertStart(\"Algo deu errado ao adicionar endereço.\", \"error\")     \r\n      }\r\n      return resp;\r\n  }\r\n  \r\n  async function buscaCardapioInicial(usuarioLogado) {\r\n    const cardapio = JSON.parse(localStorage.getItem(\"cardapioCF\"))\r\n    try {\r\n      if(aplicativoDados.possuiDelivery === true){\r\n        // if(!cardapio || cardapio.id === \"usuarioDeslogado\" || !!JSON.parse(localStorage.getItem('usuarioPedidoMesaCF'))?.logado){\r\n          var idEndereco = null\r\n          if(!!JSON.parse(localStorage.getItem(\"enderecoAtualCF\")).bairro){\r\n            idEndereco = await adicionarEndereco(usuarioLogado);\r\n            console.log('cadastrar endereco', idEndereco)\r\n          }\r\n\r\n\r\n          let data = {\r\n            \"idCliente\": usuarioLogado.cliente.id,\r\n            \"idEstabelecimento\": localStorage.getItem('estabelecimentoAtualCF') ? JSON.parse(localStorage.getItem('estabelecimentoAtualCF')).id : usuarioLogado.estabelecimentos[0].id,\r\n            \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          }     \r\n\r\n\r\n          \r\n          if(idEndereco){\r\n            data.idEndereco = idEndereco\r\n          }\r\n          var response = {};\r\n          if(!!JSON.parse(localStorage.getItem('usuarioPedidoMesaCF'))?.logado){\r\n            response = await api.post('clientefiel/ObterCardapioPedidoMesa', data, {\r\n              headers: { \"Content-Type\": \"application/json\",  \"plataforma\": \"site\" }\r\n            })\r\n            console.log(\"ObterCardapioPedidoMesa\", data, response)\r\n          }else{\r\n            response = await api.post('clientefiel/ObterCardapioCompletoV1', data, {\r\n              headers: { \"Content-Type\": \"application/json\",  \"plataforma\": \"site\" }\r\n            })\r\n            console.log(\"ObterCardapioCompletoV1\", data, response)\r\n\r\n          }\r\n          \r\n          if(response.data.codErro > 0){\r\n            alertStart(response.data.mensagem, \"error\")\r\n          }else{\r\n    \r\n            const retorno = response.data\r\n            \r\n            console.log('ObterCardapioCompletoV1 retorno> ', retorno)\r\n\r\n            if(!usuarioLogado?.logado){\r\n            // if(!JSON.parse(localStorage.getItem('usuarioCF'))?.logado){\r\n              retorno.id = \"usuarioDeslogado\"\r\n            }\r\n\r\n            localStorage.setItem(\"cardapioCF\", JSON.stringify(retorno))                        \r\n            localStorage.setItem(\"enderecoAtualCF\", JSON.stringify(( retorno?.enderecos != null && retorno?.enderecos.length > 0) ? retorno.enderecos[0] : {}))\r\n\r\n            \r\n            const carrinhoRetorno = JSON.parse(localStorage.getItem(\"carrinhoCF\")) \r\n    \r\n            carrinhoRetorno.valorMinimoPedido = retorno.valorMinimoPedido\r\n            carrinhoRetorno.valorDesconto = retorno.valorDesconto\r\n            carrinhoRetorno.percentualDesconto = retorno.percentualDesconto\r\n            carrinhoRetorno.minimoEntregaGratis = retorno.minimoEntregaGratis\r\n            carrinhoRetorno.maximoPedidoComDesconto = retorno.maximoPedidoComDesconto\r\n            carrinhoRetorno.maximoDesconto = retorno.maximoDesconto\r\n            carrinhoRetorno.cupomDesconto = retorno.cupomDesconto\r\n    \r\n            const produtosDoCarrinho = JSON.parse(localStorage.getItem('backupItensCarrinhoCF'))\r\n\r\n            carrinhoRetorno.data = new Date()\r\n            carrinhoRetorno.pedido = {\r\n              \"entregaImediata\": false,\r\n              \"formaPagamento\": {},\r\n              \"itens\": produtosDoCarrinho?.length > 0 ? produtosDoCarrinho :  [],\r\n              \"taxaEntrega\": ( retorno?.endereco != null && retorno?.endereco.length > 0) ? retorno.enderecos[0].taxaEntrega : null,\r\n              //\"tipoDesconto\": null,\r\n              \"tokenCartaoCredito\": null,\r\n              \"troco\": null,\r\n              \"valorDesconto\": carrinhoRetorno.valorDesconto,\r\n              \"valorEntrega\": null,\r\n              \"valorTotal\": 0,\r\n              \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n            }\r\n\r\n            if(produtosDoCarrinho?.length > 0){\r\n              calcularValorTotal(carrinhoRetorno)\r\n            }else{\r\n              localStorage.setItem(\"carrinhoCF\", JSON.stringify(carrinhoRetorno))     \r\n            }\r\n\r\n\r\n            \r\n            if(JSON.parse(localStorage.getItem('usuarioPedidoMesaCF'))?.logado || (usuarioLogado.estabelecimentos.length === 1 || (JSON.parse(localStorage.getItem('estabelecimentoAtualCF'))?.id && produtosDoCarrinho?.length > 0) || (JSON.parse(localStorage.getItem('estabelecimentoAtualCF'))?.id == lojaParams || JSON.parse(localStorage.getItem('estabelecimentoAtualCF'))?.codigo == lojaParams) ) ){\r\n              history.push(`/delivery${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n            }else if(usuarioLogado.estabelecimentos.length > 1 ){\r\n              history.push(`/estabelecimento`)\r\n            }\r\n    \r\n    \r\n          }\r\n      }else{\r\n        history.push(`/fidelidade${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n      }  \r\n    } catch (error) {\r\n      Sentry.captureMessage(`${aplicativoDados.appNome} - ${error} - ObterCardapio`);\r\n      alertStart(\"Erro nao identificado ObterCardapioCompletoV1\" + error, \"error\")  \r\n      console.log(error)\r\n      setLoading(false)       \r\n    }\r\n  }\r\n\r\n\r\n  \r\n  \r\n\r\n  \r\n  const [loading, setLoading] = React.useState(!!chave);\r\n  const [alert, setAlert] = useState({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n\r\n\r\n  \r\n  \r\n  if(tentativaMesa === 0 && (params.get(\"mesa\") || params.get(\"comanda\"))){\r\n    loginPedidoMesa()  \r\n  }\r\n  \r\n  if(tentativaIzza === 0){\r\n    if(!!chave && !!whats){\r\n      realizarLogin_tokenizza(chave, whats)\r\n    }  \r\n  }\r\n\r\n  if(tentativaFacebookLogin === 0){\r\n    if(!!FacebookId){\r\n      realizarLogin_UsuarioSenha(null, null, null, FacebookId, FacebookEmail, FacebookNome)\r\n    }  \r\n  }\r\n\r\n  async function cadastrarUsuarioLoginTelefone(e){\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    setCadastroTelefone(false)\r\n    try {\r\n      let telefoneReplace = telefone.replace(' ', '').replace('.','').replace('-','').replace('(','').replace(')','').replace('/','')\r\n      const data = {\r\n        \"appNome\": aplicativoDados.appNome,\r\n        \"nome\": document.getElementById('nomeCadastroTelefone').value,\r\n        \"telefone\": telefone,\r\n        \"dataNascimentoTexto\": '',\r\n        \"email\": '55'+telefoneReplace+\"@c.us\",\r\n        \"hashSenha\": '!@#$%semsenha\\nok?',\r\n        \"cpf\": '',\r\n        \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n      }\r\n\r\n      /*\r\n        if(codigoIndicacao){\r\n          data.codigoAmigo = codigoIndicacao.codigo\r\n        }\r\n      */\r\n  \r\n     //console.log(\"CadastrarUsuario\", data)\r\n      await api.post('cliente/CadastrarUsuario' , data , {\r\n        headers: {\"Content-Type\": \"application/json\"}\r\n      }).then(resposta => {\r\n       //console.log(\"Cadastrar Usuario\", resposta)\r\n        if(resposta.data.codErro > 0){ // ERRO\r\n          alertStart(resposta.data.mensagem, \"error\")\r\n          setLoading(false)\r\n          return false\r\n        }else{ // DEU CERTO\r\n          alertStart(\"Seu usuario foi cadastrado corretamente!\", \"success\")\r\n          realizarLogin_UsuarioTelefone(e)\r\n          //CHAMAR LOGIN\r\n        }\r\n\r\n      });\r\n\r\n      \r\n      return true\r\n    } catch (error) {\r\n      Sentry.captureMessage(`${aplicativoDados.appNome} - ${error} - CadastrarUsuario`);\r\n      alertStart(\"Erro nao identificado ao cadastrar usuario por login telefone!\", \"error\") \r\n      setLoading(false)\r\n    }\r\n  }\r\n  async function realizarLogin_tokenizza(chave, whats){\r\n   //console.log(\"realizarLogin_tokenizza\")\r\n   setTentativaIzza(1)\r\n   alertStart(\"Estou tentando te conectar diretamente com o link clicado no whatsapp!\", \"warning\") \r\n    try {\r\n      const clientefiel = {\r\n        \"appNome\": aplicativoDados.appNome,\r\n        \"cliente\":{\r\n          \"email\": chave,\r\n          \"hashSenha\": chave, \r\n          \"appNome\": aplicativoDados.appNome,\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n        },\r\n        \"localizacao\":{\r\n          \"latitude\": \"\",\r\n          \"longitude\": \"\",\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          \"appNome\": aplicativoDados.appNome,\r\n        },\r\n        \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n      }\r\n      \r\n\r\n      const response = await api.post('clientefiel/LoginToken', clientefiel, {\r\n        headers: {\"Content-Type\": \"application/json\"}\r\n      });\r\n      \r\n    console.log(\"loginToken\", response)\r\n      if(response.data.codErro > 0 ){   \r\n        \r\n        localStorage.setItem('tipoLoginCF', 'apenasTelefone')\r\n        console.log('loginToken', lojaParams)\r\n        if(lojaParams){\r\n          history.push(`/?loja=${lojaParams}`)\r\n        }else{\r\n          history.push(`/`)\r\n        }\r\n\r\n        \r\n        //informe o telefone para fazer login\r\n        // if(whats){\r\n        //   window.location.href = `https://api.whatsapp.com/send?phone=${whats}&text=Ola,%20tudo%20bem?%20Tentei%20conectar%20com%20acesso%20expirado,%20me%20envia%20um%20novo%20link%20do%20cardápio%20ja%20conectado?`\r\n        // }\r\n        // alertStart(response.data.mensagem, \"error\")\r\n        // setChave('')\r\n        // setWhats('')\r\n        // setDefinirAcao(false)\r\n        // setTipoLogin('apenasTelefone')\r\n        // setLoading(false)\r\n      }else{\r\n        localStorage.setItem('usuarioIzzaCF', JSON.stringify(response.data));\r\n        localStorage.setItem('usuarioCF', JSON.stringify(response.data));\r\n\r\n        if(!JSON.parse(localStorage.getItem(\"enderecoAtualCF\"))?.bairro){\r\n          localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({}))\r\n        }\r\n        \r\n        if(lojaParams){\r\n          const estabelecimentoEncontrado = response.data.estabelecimentos.filter((e) => (e.id == lojaParams || e.codigo == lojaParams))\r\n          if(estabelecimentoEncontrado.length > 0){\r\n            localStorage.setItem(\"estabelecimentoAtualCF\", JSON.stringify(estabelecimentoEncontrado[0]))\r\n          }else{\r\n            localStorage.setItem(\"estabelecimentoAtualCF\", JSON.stringify(response.data.estabelecimentos[0]))\r\n          }\r\n          \r\n        }else{\r\n          localStorage.setItem(\"estabelecimentoAtualCF\", JSON.stringify(response.data.estabelecimentos[0]))\r\n        }\r\n        \r\n\r\n        localStorage.setItem('carrinhoCF', JSON.stringify({}));\r\n\r\n        if(response.data.estabelecimentos.length > 0){\r\n          await buscaCardapioInicial(response.data)\r\n        }else{\r\n          alertStart(\"Nenhum estabelecimento disponivel nesse aplicativo\", \"error\")   \r\n        }\r\n\r\n      }\r\n    } catch (error) {        \r\n      Sentry.captureMessage(`${aplicativoDados.appNome} - ${error} - LoginToken`);\r\n      alertStart(\"Erro nao identificado LoginToken\", \"error\")    \r\n    }   \r\n  }\r\n  \r\n  function asteriscosUsuarioLoginTelefone(recebi){\r\n    const tamanho = recebi.length\r\n    let retorno = recebi[0]\r\n    let astericos = '';\r\n    for(let i = 1; i < (tamanho-1); i++){\r\n      if(recebi[i] === '@'){\r\n        astericos += \"@\" + recebi[i+1]\r\n        i++\r\n      }else if(recebi[i] === '.'){\r\n        astericos += \".\" + recebi[i+1]\r\n        i++\r\n      }\r\n      astericos += \"*\"\r\n    }\r\n    retorno += astericos + recebi[tamanho-1]\r\n    return retorno\r\n  }\r\n\r\n  \r\n  async function verificarTokenLoginTelefone(codigo) {\r\n    \r\n    try {\r\n\r\n      alertClose()\r\n\r\n      if(codigo !== acessToken){\r\n        alertStart(\"Código invalido!\", \"error\")\r\n        setTelaCodigo(false)\r\n        return false\r\n      }\r\n\r\n      setLoading(true)\r\n\r\n      const data = {\r\n        \"idCliente\": -1,\r\n        \"appName\": aplicativoDados.appNome,\r\n        \"telefone\": telefone,\r\n        \"codigoAcesso\": codigo,\r\n      }\r\n\r\n      api.post('clientefiel/oauth/Autenticar' , data , {\r\n        headers: {\"Content-Type\": \"application/json\"}\r\n      }).then(resposta => {\r\n\r\n        if(resposta.data.codErro > 0){ // ERRO\r\n          alertStart(resposta.data.mensagem, \"error\")\r\n          return false\r\n        }else{ // DEU CERTO  \r\n\r\n          \r\n\r\n          //Existe outros usuarios\r\n          if(resposta.data.length > 1){            \r\n            setTelaCodigo(false)\r\n            setUsuariosMesmoTelefone(resposta.data)\r\n            setLoading(false)  \r\n            alertStart(\"Existem outros usuarios com mesmo telefone! Identifique o seu usuário.\", \"warning\")\r\n          }else{\r\n            realizarLogin_UsuarioSenha(null, resposta.data[0].email, resposta.data[0].hashSenha)\r\n            \r\n            //fazendo Login\r\n            /*setUsuarioLogado(resposta.data[0])\r\n            localStorage.setItem('usuarioCF', JSON.stringify(resposta.data[0]));\r\n            localStorage.setItem(\"enderecoAtualCF\", '{}')\r\n            localStorage.setItem(\"estabelecimentoAtualCF\", JSON.stringify(resposta.data[0].estabelecimentos[0]))\r\n            localStorage.setItem('carrinhoCF', '{}');\r\n\r\n            if(resposta.data[0].estabelecimentos.length > 0){\r\n              buscaCardapioInicial(resposta.data[0])\r\n            }else{\r\n              alertStart(\"Nenhum estabelecimento disponivel para esse usuario\", \"error\")   \r\n            }*/\r\n          }\r\n        }    \r\n\r\n      });\r\n    } catch (error) {\r\n      Sentry.captureMessage(`NotFunctions verificarTokenLoginTelefone ${window.location.hostname} - ${error}`);\r\n      alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")   \r\n    }\r\n  }\r\n\r\n  async function realizarLogin_UsuarioTelefone(e) {\r\n    \r\n    try {\r\n      e.preventDefault()\r\n    \r\n      if(!(telefone.length >= 10 && telefone.length <= 11)){\r\n        alertStart(\"Seu telefone esta incompleto, verifique se você digitou o DDD e o digito 9!\", \"warning\")\r\n        document.getElementById('telefone').focus()\r\n        return false\r\n      }   \r\n      \r\n      setLoading(true)\r\n\r\n      const data = {\r\n        \"appNome\": aplicativoDados.appNome,\r\n        \"cliente\":{\r\n          \"telefone\": telefone,\r\n          \"appNome\": aplicativoDados.appNome,\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n        },\r\n        \"localizacao\":{\r\n          \"latitude\": \"\",\r\n          \"longitude\": \"\",\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          \"appNome\": aplicativoDados.appNome,\r\n        },\r\n        \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n      }\r\n\r\n      //AJAX ENVIAR CONDIGO\r\n      let urlEnviarCodigo = ''\r\n      if(smsOrWhatsapp === 'WHATSAPP'){\r\n        urlEnviarCodigo = 'clientefiel/oauth/GerarChaveTelefoneWhatsApp'\r\n      }else if(smsOrWhatsapp === 'SMS'){\r\n        urlEnviarCodigo = 'clientefiel/oauth/GerarChaveTelefoneSms'\r\n      }\r\n      \r\n\r\n      api.post(urlEnviarCodigo , data , {\r\n        headers: {\"Content-Type\": \"application/json\", \"Plataforma\": \"Site\"}\r\n      }).then(resposta => { \r\n       //console.log('respostaa', resposta, data, urlEnviarCodigo)\r\n        if(resposta.data.codErro > 0){ // ERRO\r\n          alertStart(resposta.data.mensagem, \"error\")\r\n          setLoading(false) \r\n          \r\n          if(resposta.data.mensagem === \"Usuário não encontrado\") setCadastroTelefone(true)\r\n          return false\r\n        }else{ // DEU CERTO              \r\n          setAcessToken(resposta.data.access_token)      \r\n          alertStart(`Código de verificação foi enviado por ${smsOrWhatsapp}!`, \"success\")   \r\n          setTelaCodigo(true)   \r\n          setLoading(false)   \r\n        }\r\n        \r\n         \r\n\r\n      });\r\n    } catch (error) {\r\n      Sentry.captureMessage(`NotFunctions realizarLogin_UsuarioTelefone ${window.location.hostname} - ${error}`);\r\n      alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")   \r\n    }\r\n  }\r\n\r\n\r\n  \r\n  async function realizarLogin_UsuarioSenha(e = false, usuarioVerificado, senhaVerificado, facebookId = null, facebookEmail = null, facebookNome = null) {\r\n    \r\n    try {\r\n      if(e){\r\n        e.preventDefault();\r\n      }\r\n  \r\n      // os 2 parametros: usuarioVerificado e senhaVerificado\r\n      // são para usuarios que conectao por telefone, apenas reutilizei essa funcao para nao criar outra\r\n  \r\n      setLoading(true)\r\n      let clientefiel = {\r\n        \"appNome\": aplicativoDados.appNome,\r\n        \"cliente\":{\r\n          \"appNome\": aplicativoDados.appNome,\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n        },\r\n        \"localizacao\":{\r\n          \"latitude\": \"\",\r\n          \"longitude\": \"\",\r\n          \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          \"appNome\": aplicativoDados.appNome,\r\n        },\r\n        \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n      }\r\n\r\n      if(!facebookId && (facebookEmail || facebookNome)){\r\n        // login facebook sem id\r\n        alertStart(\"Seu Facebook não permite esse tipo de login!\", \"wharning\")\r\n\r\n        return false\r\n      }else if(facebookId){\r\n        //LOGIN FACEBOOK\r\n        setTentativaFacebookLogin(1)\r\n        clientefiel.cliente.email = facebookEmail ? facebookEmail : \"\"\r\n        clientefiel.cliente.facebookId = facebookId\r\n        clientefiel.cliente.nome = facebookNome ? facebookNome : \"Nome Não Identificado\"\r\n      }else if(usuarioVerificado || usuario){\r\n        //LOGIN NORMAL\r\n        if(!usuarioVerificado && usuario.length < 10){\r\n          setLoading(false)\r\n          alertStart(\"Email ou telefone incorreto!\", \"warning\")\r\n          return false\r\n        }\r\n        clientefiel.cliente.email = usuarioVerificado ? usuarioVerificado : usuario\r\n        clientefiel.cliente.hashSenha = senhaVerificado ? senhaVerificado : senha\r\n      }else{\r\n        setLoading(false)\r\n        alertStart(\"Função chamada incorretamente\", \"warning\")\r\n        return false\r\n      }\r\n\r\n      const response = await LoginGeral(clientefiel, aplicativoDados)\r\n      \r\n      console.log(\"LoginGeral\", response)\r\n      if(response.retornoErro){\r\n        alertStart(response.mensagem, \"error\")\r\n        setLoading(false)\r\n      }else{\r\n        \r\n        if(localStorage.getItem('tokenNotificationFirebase')){\r\n          if( response.cliente.codigoDispositivo !== localStorage.getItem('tokenNotificationFirebase' )){\r\n            response.cliente.codigoDispositivo = localStorage.getItem('tokenNotificationFirebase')\r\n            response.cliente.token = `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`\r\n            AtualizarDispositivoUsuario(response.cliente, aplicativoDados)\r\n          }\r\n        }\r\n\r\n        localStorage.setItem('usuarioCF', JSON.stringify(response));\r\n        \r\n        if(!JSON.parse(localStorage.getItem(\"enderecoAtualCF\"))?.bairro){\r\n          localStorage.setItem(\"enderecoAtualCF\", JSON.stringify({}))\r\n        }\r\n\r\n        if(!localStorage.getItem(\"estabelecimentoAtualCF\")){\r\n          localStorage.setItem(\"estabelecimentoAtualCF\", JSON.stringify(response.estabelecimentos[0]))\r\n        }\r\n        \r\n        \r\n        localStorage.setItem('carrinhoCF', JSON.stringify({}));\r\n\r\n        if(response.estabelecimentos.length > 0){\r\n          await buscaCardapioInicial(response)\r\n        }else{\r\n          alertStart(\"Nenhum estabelecimento disponivel para esse usuario\", \"error\")   \r\n        }\r\n      }\r\n    } catch (error) {\r\n      Sentry.captureMessage(`NotFunctions LoginGeral - ${aplicativoDados.appNome} - ${error}`);\r\n      alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\") \r\n      setLoading(false)       \r\n    }\r\n  }\r\n\r\n\r\n\r\n  async function recuperarSenha(){\r\n\r\n    try {\r\n      const dadoDigitado = document.getElementById(\"esqueceuSenhaCampo\").value\r\n    //console.log(\"dadoDigitado\", dadoDigitado)\r\n      if( esqueceuSenha.tipoRecuperacao === 0 && !(dadoDigitado.includes(\"@\") && dadoDigitado.includes(\".\")) ){\r\n        //SEM PADRAO DE EMAIL\r\n        alertStart(\"Informe um email válido.\", \"error\")\r\n        document.getElementById('esqueceuSenhaCampo').focus()                   \r\n      }else if(esqueceuSenha.tipoRecuperacao === 2 && !(dadoDigitado.length >= 10 && dadoDigitado.length <= 11) ){\r\n        //SEM PADRAO TELEFONE WHATSAPP\r\n        alertStart(\"Seu telefone esta incompleto, verifique se você digitou o DDD e o digito 9!\", \"warning\")\r\n        document.getElementById('esqueceuSenhaCampo').focus()    \r\n      }else{\r\n\r\n        /*\r\n\r\n          ENVIANDO CODIGO NOVA SENHA\r\n          existe 3 tipos de recuperação de senha\r\n\r\n          - 0 email\r\n          - 1 sms\r\n          - 2 whatsapp\r\n\r\n        */\r\n        setEsqueceuSenha({\"abrir\": false, \"email\": esqueceuSenha.email, \"tipoEsqueceu\": 0})\r\n        setLoading(true)\r\n\r\n        let data = {}\r\n\r\n        if(esqueceuSenha.tipoRecuperacao == 0){\r\n          data = {\r\n            \"appNome\": aplicativoDados.appNome,\r\n            \"email\": esqueceuSenha.email,\r\n            \"tipoVerificacao\": esqueceuSenha.tipoRecuperacao,\r\n            \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          } \r\n        }else{\r\n          data = {\r\n            \"appNome\": aplicativoDados.appNome,\r\n            \"telefone\": esqueceuSenha.email,\r\n            \"tipoVerificacao\": esqueceuSenha.tipoRecuperacao,\r\n            \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n          } \r\n        }\r\n        \r\n        const response = await RedefinirSenha(data, aplicativoDados)\r\n    \r\n        if(response.retornoErro){\r\n          //algum erro\r\n          alertStart(response.mensagem, \"error\")\r\n        }else{ \r\n          //tudo certo\r\n          alertStart(response.mensagem, \"success\")\r\n        }\r\n        setLoading(false)\r\n      }\r\n    }\r\n    catch (error) {\r\n        Sentry.captureMessage(`NotFunctions recuperarSenha ${window.location.hostname} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      <Snackbar open={alert.status} autoHideDuration={6000} onClose={alertClose}>\r\n        <Alert onClose={alertClose} severity={alert.tipo}>\r\n          {alert.mesangem}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n\r\n      <CssBaseline />\r\n            \r\n      \r\n\r\n\r\n      <div className={classes.paper}>\r\n           \r\n        <img src={aplicativoDados.urlLogo} style={{\"height\": \"150px\"}} alt=\"\" />\r\n      \r\n            <Typography component=\"h1\" variant=\"h5\" className=\"mt-3\">\r\n              {telaCodigo ? `Verifique o Código Enviado Por ${smsOrWhatsapp}` : \"Conectar ao Usuário\"}\r\n            </Typography>\r\n\r\n            {\r\n              // INICIO LOGIN COMUM usuario e senha\r\n              tipoLogin === 'usuarioSenha'\r\n              &&  \r\n              (<form className={classes.form, \"container\"} onSubmit={realizarLogin_UsuarioSenha}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                onChange={e => {\r\n                  setUsuario((e.target.value).replace(/ /, ''))\r\n                }}\r\n                id=\"usuario\"\r\n                value={usuario}\r\n                label=\"Email ou Telefone\"\r\n                name=\"usuario\"\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                value={senha}\r\n                onChange={e => setSenha(e.target.value)}\r\n                name=\"senha\"\r\n                label=\"Senha\"\r\n                type=\"password\"\r\n                id=\"senha\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Entrar\r\n              </Button>\r\n\r\n              {estabelecimentoAtual?.possuiPedidoMesa? <Button\r\n                type=\"button\"\r\n                fullWidth\r\n                onClick={() => {\r\n                  history.push(\"conectar-mesa\")\r\n                }}\r\n                variant=\"contained\"\r\n                style={{\"margin\": \"0 0 1em 0\", \"background\":\"#3c3c3c\", \"color\":\"white\"}}\r\n              >\r\n                <AirlineSeatReclineNormalIcon/>  Conectar na mesa\r\n              </Button> : null} \r\n\r\n              <Button\r\n                type=\"button\"\r\n                fullWidth\r\n                onClick={() => {\r\n                  setLoading(true)\r\n                  window.location.href = `https://delivery.pedidosite.com.br/login/loginUnificado?urlLogo=${aplicativoDados.urlLogo}&urlDominio=${(aplicativoDados.urlAcesso).replace(\"www.\",'')}&facebookApplicationId=&corFundo=${aplicativoDados.corSitePrimaria}&corSecundaria=${aplicativoDados.corSiteSecundaria}&imgFundo=null`\r\n                }}\r\n                variant=\"contained\"\r\n                style={{\"margin\": \"0 0 1em 0\", \"background\":\"#3a5593\", \"color\":\"white\"}}\r\n              >\r\n                <FacebookIcon/>  Entrar Com Facebook\r\n              </Button>\r\n              \r\n              {\r\n                aplicativoDados.permiteLoginTelefone \r\n                ? <Button\r\n                    type=\"button\"\r\n                    fullWidth\r\n                    onClick={() => {\r\n                      setTipoLogin('apenasTelefone')\r\n                    }}\r\n                    variant=\"contained\"\r\n                    style={{\"margin\": \"0 0 1em 0\", \"background\":\"#24cc63\", \"color\":\"white\"}}\r\n                  >\r\n                    <WhatsAppIcon/>  Entrar Com Whatsapp\r\n                  </Button>\r\n                : null\r\n              }\r\n              \r\n              \r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link to=\"#\" onClick={((e) =>{\r\n                    setEsqueceuSenha({\"abrir\": true, \"email\": '', \"tipoRecuperacao\": 0})\r\n                  })} variant=\"body2\" style={{\"color\":`${aplicativoDados.corSitePrimaria}`}}>\r\n                    Esqueci senha\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link to={`/cadastro${identificarEstabelecimentoSelecionado(aplicativoDados)}`} variant=\"body2\" style={{\"color\":`${aplicativoDados.corSitePrimaria}`}}>\r\n                    {\"Cadastrar usuário\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              { ( aplicativoDados.inicioTelaLogin === false && aplicativoDados.estabelecimentos.length > 1) ?\r\n                <Button\r\n                  type=\"button\"\r\n                  fullWidth\r\n                  style={{\"color\":`${aplicativoDados.corSitePrimaria}`}}\r\n                  onClick={() => {\r\n                    history.push(`/lojas`)\r\n                  }}\r\n                >\r\n                  Ver Lojas\r\n                </Button>\r\n                : null\r\n              }\r\n\r\n              <Dialog\r\n                  open={esqueceuSenha.abrir}\r\n                  aria-labelledby=\"esqueceuSenha\">\r\n                  <DialogTitle id=\"esqueceuSenha\">{\"Esqueceu Sua Senha?\"}</DialogTitle>\r\n\r\n\r\n                  <DialogContent>\r\n\r\n                    \r\n                  <Select \r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      onChange={(e) => {setEsqueceuSenha({\"abrir\": true, \"email\": esqueceuSenha.email, \"tipoRecuperacao\": e.target.value})}}\r\n                      defaultValue={esqueceuSenha.tipoRecuperacao} \r\n                      id=\"selectRecuperacao\">\r\n                    <MenuItem value={0}>{\"Email\"}</MenuItem>\r\n                    <MenuItem value={2}>{\"Whatsapp\"}</MenuItem>\r\n                  </Select>\r\n                  \r\n                    {\r\n                      esqueceuSenha.tipoRecuperacao === 0 \r\n                      ? \r\n                      (<TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        onChange={(e) =>{setEsqueceuSenha({\"abrir\": true, \"email\": e.target.value, \"tipoRecuperacao\": esqueceuSenha.tipoRecuperacao})}}\r\n                        value={esqueceuSenha.email}\r\n                        id=\"esqueceuSenhaCampo\"\r\n                        label=\"Email do usuário\"\r\n                        name=\"esqueceuSenhaCampo\"\r\n                        type=\"email\"\r\n                        autoFocus\r\n                      />)\r\n                      :\r\n                      (<TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        onChange={(e) =>{setEsqueceuSenha({\"abrir\": true, \"email\": e.target.value, \"tipoRecuperacao\": esqueceuSenha.tipoRecuperacao})}}\r\n                        value={esqueceuSenha.email}\r\n                        id=\"esqueceuSenhaCampo\"\r\n                        label=\"Telefone do usuário\"\r\n                        name=\"esqueceuSenhaCampo\"\r\n                        type=\"number\"\r\n                        autoFocus\r\n                      />)\r\n                    }\r\n                  </DialogContent>\r\n\r\n                  <DialogActions>\r\n                    \r\n                    <Button onClick={(e) => {setEsqueceuSenha({\"abrir\": false, \"email\": '', \"tipoRecuperacao\": 0})}} style={{\"color\":\"#dc3545\"}}>\r\n                      Cancelar\r\n                    </Button>\r\n                    <Button onClick={() => {recuperarSenha()}} style={{\"color\": \"white\", \"backgroundColor\":\"#28a745\"}}>\r\n                      Recuperar Senha\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n            </form>)\r\n        }\r\n\r\n        \r\n\r\n        {     \r\n          // INICIO LOGIN POR WHATSAPP\r\n          tipoLogin === 'apenasTelefone' && !(usuariosMesmoTelefone.length > 0)  &&\r\n          (       \r\n            <form className={classes.form, \"container\"} onSubmit={realizarLogin_UsuarioTelefone}>              \r\n              { \r\n                //DIGITA O TELEFONE\r\n                !telaCodigo && \r\n                (<>\r\n                  \r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      onChange={e => setTelefone(e.target.value)}\r\n                      id=\"telefone\"\r\n                      value={telefone}\r\n                      label=\"Telefone\"\r\n                      name=\"telefone\"\r\n                      type=\"number\"\r\n                      autoFocus\r\n                    />\r\n\r\n                    \r\n\r\n\r\n                    <Button\r\n                      fullWidth\r\n                      type=\"submit\"\r\n                      onClick={() => {setSmsOrWhatsapp('WHATSAPP')}}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      className={classes.submit}\r\n                      style={{\"background\": \"#28a745\"}}\r\n                    >\r\n                      Whatsapp\r\n                    </Button>\r\n\r\n\r\n                    <Grid container>\r\n                      <Grid item>\r\n                        <Typography onClick={() => {\r\n                          setTipoLogin('usuarioSenha')\r\n                          }}  style={{\"cursor\": \"pointer\", \"color\":`${aplicativoDados.corSitePrimaria}`}}>\r\n                          {\"Outras Opções\"}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n\r\n                    {/* <Button\r\n                      fullWidth\r\n                      type=\"submit\"\r\n                      onClick={() => {setSmsOrWhatsapp('SMS')}}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      style={{\"background\": \"#6c757d\"}}\r\n                    >\r\n                      SMS\r\n                    </Button> */}\r\n                </>) \r\n              }   \r\n\r\n              {\r\n                //DIGITA O CÓDIGO\r\n                telaCodigo\r\n                &&\r\n                (<><TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  onChange={e => {\r\n                    if(e.target.value.length === 6){\r\n                      verificarTokenLoginTelefone(e.target.value)\r\n                    }\r\n\r\n                  }}\r\n                  id=\"CodigoVerificacao\"\r\n                  label=\"Codigo de Verificação\"\r\n                  name=\"CodigoVerificacao\"\r\n                  type=\"number\"\r\n                  autoFocus\r\n                />\r\n                <Grid container>\r\n                  <Grid item xs>\r\n                    <Link to='#' onClick={() => {setTelaCodigo(false)}} variant=\"body2\" style={{\"color\":`${aplicativoDados.corSitePrimaria}`}}>\r\n                      Editar telefone\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n                </>) \r\n              }     \r\n\r\n              <Dialog\r\n                open={CadastroTelefone}\r\n                aria-labelledby=\"cadastrarLoginTelefone\">\r\n                <DialogTitle id=\"cadastrarLoginTelefone\">{\"Cadastrar Usuario\"}</DialogTitle>\r\n\r\n\r\n                <DialogContent>\r\n                  <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"nomeCadastroTelefone\"\r\n                      label=\"Nome\"\r\n                      name=\"nomeCadastroTelefone\"\r\n                      autoFocus\r\n                    />\r\n                  <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      onChange={e => setTelefone(e.target.value)}\r\n                      id=\"telefone\"\r\n                      value={telefone}\r\n                      label=\"Telefone\"\r\n                      name=\"telefone\"\r\n                      type=\"number\"\r\n                    />\r\n\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                  \r\n                  <Button onClick={(e) => {setCadastroTelefone(false)}}>\r\n                    Cancelar\r\n                  </Button>\r\n                  <Button onClick={cadastrarUsuarioLoginTelefone}>\r\n                    Cadastrar\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>     \r\n            </form>  \r\n            \r\n          )           \r\n        }\r\n              \r\n        {\r\n          // FIM INICIO POR WHATSAPP\r\n          usuariosMesmoTelefone.length > 0\r\n          &&\r\n          (<>\r\n            {\r\n              usuariosMesmoTelefone.map((usuario, index) => (              \r\n                <Card key={usuario.id} className={classes.root}>\r\n                  <CardContent>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                      { \r\n                        asteriscosUsuarioLoginTelefone(usuario.nome)\r\n                      }\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {asteriscosUsuarioLoginTelefone(usuario.email)}\r\n                    </Typography>                 \r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" onClick={() => {\r\n                      setVerificarUsuario({\"aberto\": true, \"usuario\":index})\r\n                      \r\n                    }}>Este Usuário</Button>\r\n                  </CardActions>\r\n                </Card>\r\n              ))\r\n            }\r\n            <Dialog\r\n              open={verificarUsuario.aberto}\r\n              aria-labelledby=\"verificarUsuario\">\r\n              <DialogTitle id=\"verificarUsuario\">{\"Verificar Usuario\"}</DialogTitle>\r\n\r\n\r\n              <DialogContent>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"verificarUsuarioDigitado\"\r\n                  label=\"Digite o nome do usuário\"\r\n                  name=\"verificarUsuarioDigitado\"\r\n                  type=\"text\"\r\n                  autoFocus\r\n                />\r\n              </DialogContent>\r\n\r\n              <DialogActions>\r\n                <Button onClick={(e) => {\r\n\r\n                  const digitou = removeAcento(((document.getElementById(\"verificarUsuarioDigitado\").value).replace(/ /, '')).toLocaleLowerCase())\r\n                  const nomeCorreto = removeAcento(((usuariosMesmoTelefone[verificarUsuario.usuario].nome).replace(/ /, '')).toLocaleLowerCase())\r\n\r\n                  if(digitou === nomeCorreto){\r\n                    // acertou\r\n                    realizarLogin_UsuarioSenha(e, usuariosMesmoTelefone[verificarUsuario.usuario].email, usuariosMesmoTelefone[verificarUsuario.usuario].hashSenha)\r\n                    setVerificarUsuario({\"aberto\": false, \"usuario\":0})\r\n                    setLoading(true)\r\n                  }else{\r\n                    //erro\r\n                    alertStart(`Desculpe você digitou errado!`, \"error\") \r\n                    setVerificarUsuario({\"aberto\": false, \"usuario\":0})\r\n                    setTelefone('')\r\n                    setUsuariosMesmoTelefone({})\r\n                  }\r\n                  \r\n                }} style={{\"color\": \"white\",\"backgroundColor\":\"#28a745\"}}>\r\n                  Verificar\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </>)\r\n        }         \r\n      </div>\r\n    </Container>\r\n\r\n\r\n  );\r\n}\r\n","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Downloads\\index.js",["391","392","393"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Button from '@material-ui/core/Button';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\n\r\n\r\nimport './styles.css';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  rootAlert: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  root: {\r\n    width: \"100%\",\r\n    margin: \"1em 0\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n}));\r\n\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n\r\nexport default function Downloads() {\r\n\r\n  const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))  \r\n  \r\n\r\n  const classes = useStyles();\r\n\r\n  const history = useHistory();\r\n  \r\n\r\n  // FUNCOES\r\n  \r\n  //alerts e loading\r\n  const alertStart = (msg, tipo) => {\r\n    setAlert({\"status\": true, \"tipo\": tipo, \"mesangem\": msg});\r\n  };\r\n  \r\n  const alertClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlert({\"status\": false, \"tipo\": alert.tipo, \"mesangem\": alert.mesangem});\r\n\r\n  };\r\n\r\n  //console.log('location', window.location.pathname)\r\n\r\n  \r\n  const [loading, setLoading] = React.useState(window.location.pathname.includes('/escolha') ? false : true);\r\n  const [tentativasDirecionamento, setTentativasDirecionamento] = React.useState(window.location.pathname.includes('/escolha') ? 1 : 0);\r\n  const [alert, setAlert] = useState({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n\r\n  const android = navigator.userAgent.includes('Android')\r\n  const iphone = navigator.userAgent.includes('iPad') || navigator.userAgent.includes('iPhone') || navigator.userAgent.includes('Mac OS')\r\n\r\n  if(!tentativasDirecionamento){\r\n    setTentativasDirecionamento(1)\r\n    if(android){\r\n      if(aplicativoDados.urlAppAndroid){\r\n        window.location.href= 'https://play.app.goo.gl/?link='+ aplicativoDados.urlAppAndroid\r\n      }\r\n      setLoading(false)\r\n    }else if(iphone){\r\n      if(aplicativoDados.urlAppIphone){\r\n        window.location.href= aplicativoDados.urlAppIphone\r\n      }\r\n      setLoading(false)\r\n    }else{\r\n      history.push(`/`) \r\n    }  \r\n  }\r\n  \r\n  return (\r\n\r\n      <Container>\r\n      \r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n\r\n      <div className={classes.paper}>\r\n      <img src={aplicativoDados.urlLogo} style={{\"height\": \"150px\"}} alt=\"\" />\r\n      <Typography component=\"h1\" variant=\"h5\" className=\"mt-3 mb-3\">\r\n        Selecione a melhor opção para acessar o aplicativo\r\n      </Typography>\r\n      \r\n\r\n      <Button\r\n      \r\n      type=\"submit\"\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      onClick={( ) => { history.push(`/`) }}\r\n      className=\"mt-2 mb-2\"\r\n      style={{\"background\": aplicativoDados.corPadrao}}\r\n      > Aplicativo Web </Button>\r\n\r\n      {\r\n        aplicativoDados.urlAppAndroid && <Button\r\n        \r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\"mt-2 mb-2\"\r\n        onClick={( ) => { window.location.href= 'https://play.app.goo.gl/?link='+ aplicativoDados.urlAppAndroid }}\r\n        style={{\"background\": aplicativoDados.corPadrao}}\r\n        > Play Store (Android) </Button>\r\n      }\r\n\r\n      {\r\n        aplicativoDados.urlAppIphone && <Button\r\n        \r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={( ) => { window.location.href=aplicativoDados.urlAppIphone }}\r\n        className=\"mt-2 mb-2\"\r\n        style={{\"background\": aplicativoDados.corPadrao}}\r\n        > App Store (Iphone) </Button>\r\n      }\r\n\r\n\r\n\r\n      </div>\r\n      </Container>\r\n\r\n  );\r\n}\r\n","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Perfil\\index.js",["394","395","396","397","398","399","400","401","402"],"\r\nimport React, {Component, useState, useEffect,  } from 'react'\r\nimport QrReader from 'react-qr-reader'\r\nimport * as Sentry from \"@sentry/react\";\r\nimport { useHistory,useParams } from 'react-router-dom';\r\nimport './styles.css';\r\nimport Cabecalho from '../Global/cabecalho';\r\nimport Rodape from '../Global/rodape';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Card, Row, Col, Container, Carousel } from 'react-bootstrap';\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\n\r\nimport {\r\n    ExtratoCashback,\r\n    ResgatarCashBack,\r\n    CadastrarUsuario,\r\n    BuscarPedidosCliente,\r\n    RegistrarSeloSeguro2,\r\n    BuscarUltimoPedidoCliente,\r\n    identificarEstabelecimentoSelecionado,\r\n  } from '../../services/functions';\r\n\r\nimport api from '../../services/api';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\n\r\n//import ShareBtn from 'react-share-button';\r\n\r\n//import Loading from '../loading';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { AiOutlineQrcode } from 'react-icons/ai';\r\n\r\n//alert\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Receipt } from '@material-ui/icons';\r\nimport GanheDescontos from '../Delivery/ganheDescontos';\r\n\r\n\r\nfunction getMoney( str )\r\n{\r\n        return parseInt( str.replace(/[\\D]+/g,'') );\r\n}\r\nfunction formatReal( int )\r\n{\r\n        var tmp = int+'';\r\n        tmp = tmp.replace(/([0-9]{2})$/g, \",$1\");\r\n        if( tmp.length > 6 )\r\n                tmp = tmp.replace(/([0-9]{3}),([0-9]{2}$)/g, \".$1,$2\");\r\n\r\n        return tmp;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    fixed: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(10),\r\n        right: theme.spacing(3),\r\n        fontSize: \"30px\",\r\n    },\r\n    rootAlert: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n      },\r\n      backdrop: {\r\n        zIndex: theme.zIndex.drawer + 9999,\r\n        color: '#fff',\r\n      },\r\n      root: {\r\n        minWidth: 275,\r\n        marginTop: '10px',\r\n      },\r\n      bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n      },\r\n      title: {\r\n        fontSize: 14,\r\n      },\r\n      pos: {\r\n        marginBottom: 12,\r\n      },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nfunction dataProInput(string){\r\n    let returno = ''\r\n    returno += string.substring(6) + '-'\r\n    returno += string.substring(3,5) + '-'\r\n    returno += string.substring(0,2)  \r\n    //console.log(\"dataProInput\", returno)\r\n    return returno\r\n}\r\n\r\n\r\nexport default function Perfil() {\r\n    const {param1} = useParams();\r\n    const [estabelecimentoAtual, setEstabelecimentoAtual] = useState(JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\")));\r\n    const [openGanheDescontos, setOpenGanheDescontos] = useState(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const [usuarioLogado, setUsuarioLogado] = useState(JSON.parse(localStorage.getItem(\"usuarioCF\")))\r\n    const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))\r\n    //console.log(\"usuarioLogado\", usuarioLogado)\r\n\r\n    const [configuracoesPerfilModal, setConfiguracoesPerfilModal] = React.useState( param1 === 'configuracao' ? true : false);\r\n    const [qrCodeModal, setQrCodeModal] = React.useState(false);\r\n    const [usuarioEdit, setUsuarioEdit] = React.useState(usuarioLogado.cliente.nome ? usuarioLogado.cliente.nome : '');\r\n    const [cpfEdit, setCpfEdit] = React.useState(usuarioLogado.cliente.cpf ? usuarioLogado.cliente.cpf : '');\r\n    const [telefoneEdit, setTelefoneEdit] = React.useState(usuarioLogado.cliente.telefone ? usuarioLogado.cliente.telefone : '');\r\n    const [dataNascimentoEdit, setDataNascimentoEdit] = React.useState(usuarioLogado.cliente.dataNascimentoTexto ? (dataProInput(usuarioLogado.cliente.dataNascimentoTexto)) : '');\r\n    const [emailEdit, setEmailEdit] = React.useState(usuarioLogado.cliente.email ? usuarioLogado.cliente.email : '');\r\n    const [senhaAntigaEdit, setSenhaAntigaEdit] = React.useState('');\r\n    const [senhaNovaEdit, setSenhaNovaEdit] = React.useState('');\r\n    const [senhaNovaConfirmacaoEdit, setSenhaNovaConfirmacaoEdit] = React.useState('');\r\n    const [Cashback, setCashback] = React.useState(false);\r\n    const [RelatorioCashBack, setRelatorioCashBack] = React.useState(false);\r\n    const [DadosRelatorioCashBack, setDadosRelatorioCashBack] = React.useState('');\r\n    const [LojasCashBack, setLojasCashBack] = React.useState(false);\r\n    const [CompartilharCodigoAmigo, setCompartilharCodigoAmigo] = React.useState( param1 === 'indicacao-amigos' ? true : false );\r\n\r\n    const [ultimoPedido, setUltimoPedido] = React.useState(localStorage.getItem(\"ultimoPedidoCF\") ? JSON.parse(localStorage.getItem(\"ultimoPedidoCF\")) : '');\r\n    \r\n    const [loading, setLoading] = React.useState(false);\r\n    \r\n    const logOut = () => {\r\n        localStorage.removeItem('backupItensCarrinhoCF');\r\n        localStorage.removeItem('PedidoCanceladoBackupCF');\r\n        localStorage.removeItem('usuarioPedidoMesaCF');\r\n        localStorage.removeItem('produtoSelecionadoCF');\r\n        localStorage.removeItem('ultimoPedidoCF');\r\n        localStorage.removeItem('cardapioCF');\r\n        localStorage.removeItem('carrinhoCF');\r\n        localStorage.removeItem('usuarioCF');\r\n        localStorage.removeItem('enderecoAtualCF');\r\n        localStorage.removeItem('estabelecimentoAtualCF');\r\n        localStorage.removeItem('dateCardapioCF');\r\n        localStorage.removeItem('usuarioPedidoMesaCF_Date');\r\n        localStorage.removeItem('dateUsuarioCF');\r\n        history.push(`/login${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n    }\r\n\r\n    \r\n    //alerts    \r\n    const [alert, setAlert] = useState({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    \r\n    const alertStart = (msg, tipo) => {\r\n        setAlert({\"status\": true, \"tipo\": tipo, \"mesangem\": msg});\r\n    };\r\n\r\n    const alertClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAlert({\"status\": false, \"tipo\": alert.tipo, \"mesangem\": alert.mesangem});\r\n    };\r\n\r\n\r\n  async function salvarConfiguracoesPerfil(e) {   \r\n\r\n    try {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n\r\n        let dataNascimentoEditado = usuarioLogado.cliente.dataNascimentoTexto\r\n\r\n        if(dataNascimentoEditado !== 'NaN/NaN/NaN'){\r\n            //console.log(\"arrumando data\")\r\n            let d = new Date(dataNascimentoEdit);\r\n            let dt = d.getDate();\r\n            dt++\r\n            let mn = d.getMonth();\r\n            mn++\r\n            let yy = d.getFullYear();\r\n            dataNascimentoEditado = dt + \"/\" + mn + \"/\" + yy\r\n        }\r\n        \r\n        \r\n\r\n\r\n        if(senhaNovaEdit && senhaNovaEdit.length < 8){\r\n            alertStart(\"Sua nova senha contem menos de 8 coracteres!\", \"warning\")\r\n            document.getElementById(\"senhaNovaEdit\").focus()\r\n            setLoading(false)\r\n            return false\r\n        }else if(senhaNovaEdit && senhaNovaEdit != senhaNovaConfirmacaoEdit){\r\n            alertStart(\"Sua senha de confirmação não é igual a nova senha!\", \"warning\")\r\n            document.getElementById(\"senhaNovaConfirmacaoEdit\").focus()\r\n            setLoading(false)\r\n            return false\r\n        }else if(senhaAntigaEdit && senhaAntigaEdit != usuarioLogado.cliente.hashSenha){\r\n            alertStart(\"Sua senha antiga está incorreta!\", \"warning\")\r\n            document.getElementById(\"senhaAntigaEdit\").focus()\r\n            setLoading(false)\r\n            return false\r\n        }\r\n\r\n\r\n        const data = usuarioLogado.cliente\r\n        data.appNome = aplicativoDados.appNome\r\n        data.nome = usuarioEdit ? usuarioEdit : usuarioLogado.cliente.nome\r\n        data.cpf = cpfEdit ? cpfEdit : usuarioLogado.cliente.cpf\r\n        data.telefone = telefoneEdit ? telefoneEdit : usuarioLogado.cliente.telefone\r\n        data.dataNascimentoTexto = dataNascimentoEditado !== 'NaN/NaN/NaN' ? dataNascimentoEditado : usuarioLogado.cliente.dataNascimentoTexto\r\n        data.email = emailEdit ? emailEdit : usuarioLogado.cliente.email \r\n        data.hashSenha = senhaNovaEdit ? senhaNovaEdit : usuarioLogado.cliente.hashSenha\r\n        data.token = `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`\r\n\r\n\r\n        const response = await CadastrarUsuario(data, aplicativoDados)\r\n    \r\n        if(response.retornoErro){\r\n            //algum erro\r\n            alertStart(response.mensagem, \"error\")\r\n        }else{ \r\n            //tudo certo\r\n            if(response.codErro > 0){\r\n                //deu errado \r\n                alertStart(response.mensagem, \"error\")\r\n            }else{\r\n                //deu certo\r\n                usuarioLogado.cliente = response\r\n                setUsuarioLogado(usuarioLogado)\r\n                localStorage.setItem(\"usuarioCF\", JSON.stringify(usuarioLogado))\r\n                alertStart(\"Suas informações pessoais foram salvas com sucesso!\", \"success\")\r\n            } \r\n        }\r\n        setConfiguracoesPerfilModal(false)\r\n        setLoading(false)\r\n    }\r\n    catch (error) {\r\n        Sentry.captureMessage(`NotFunctions salvarConfiguracoesPerfil ${window.location.hostname} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")   \r\n        setSenhaNovaConfirmacaoEdit('')\r\n        setSenhaAntigaEdit('')\r\n        setSenhaNovaEdit('') \r\n        setConfiguracoesPerfilModal(false)\r\n        setLoading(false)\r\n    }\r\n  }\r\n  \r\n\r\n  const buscarHistoricoPedido = async () => {    \r\n\r\n    try {\r\n        setLoading(true)\r\n        const data = usuarioLogado.cliente\r\n        data.appNome = aplicativoDados.appNome\r\n        data.token = `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`\r\n\r\n\r\n        const response = await BuscarPedidosCliente(data, aplicativoDados)\r\n        console.log(\"buscarHistoricoPedido\", response)\r\n    \r\n        if(response.retornoErro){\r\n            //algum erro\r\n            alertStart(response.mensagem, \"error\")\r\n        }else{ \r\n            //tudo certo\r\n            localStorage.setItem('historicoPedidosCF', JSON.stringify(response))\r\n            if(response.length > 0){\r\n                history.push(`/delivery/historicoPedidos`)\r\n            }else{\r\n                alertStart(\"Você ainda não fez pedidos\", \"warning\")\r\n                setLoading(false)\r\n            }\r\n        }\r\n    }\r\n    catch (error) {\r\n        Sentry.captureMessage(`NotFunctions buscarHistoricoPedido ${window.location.hostname} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n    //console.log(\"BuscarPedidosCliente\", data)\r\n\r\n\r\n  }\r\n\r\n\r\n \r\n    class QRCode extends Component {\r\n\r\n        state = {\r\n            result: 'No result',\r\n            leu: false,\r\n        }\r\n    \r\n        handleScan = async data =>  {           \r\n            if (data && !this.state.leu) {  \r\n                \r\n                this.setState({\r\n                    result: data,\r\n                    leu: true,\r\n                })\r\n                setQrCodeModal(false)         \r\n\r\n                //console.log(\"data\", data)\r\n\r\n                setLoading(true)\r\n                \r\n                try {\r\n\r\n                    if(data.includes(\"www.\") || data.includes(\"https\") || data.includes(\"http\")){\r\n                        window.location.href = data\r\n                    }else if(data){\r\n                        const usuarioLogado = JSON.parse(localStorage.getItem(\"usuarioCF\"))\r\n                        const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))\r\n                        \r\n                        \r\n                        const enviarData = {}\r\n                        enviarData.idCliente = usuarioLogado.cliente.id         \r\n                        enviarData.appNome = aplicativoDados.appNome\r\n                        enviarData.codigoSelo = data?.replace(\"market://details?id=br.com.clientefiel&\", \"\") \r\n                        enviarData.token = `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`\r\n                        console.log('data>', enviarData)\r\n                        const response = await RegistrarSeloSeguro2(enviarData, aplicativoDados)\r\n                        console.log('reotnro> ' , response)\r\n                        if(response.retornoErro){\r\n                            //algum erro \r\n                        alertStart(response.mensagem, \"error\")\r\n                        setLoading(false)\r\n\r\n                        }else{ \r\n                            //tudo certo\r\n                            let statusAlert = \"success\"\r\n                            \r\n                            if(response.codErro > 0){ // ERRO\r\n                                statusAlert = \"error\"\r\n                            }else{\r\n\r\n                                if(response.status === 0){                                \r\n                                    usuarioLogado.cartelas[0] = response                         \r\n                                }else{\r\n                                    //CARTELA COMPLETOU - INICIAR OUTRA\r\n                                    usuarioLogado.cartelas.unshift(response)\r\n                                }\r\n\r\n                                localStorage.setItem(\"usuarioCF\", JSON.stringify(usuarioLogado))\r\n                                setUsuarioLogado(usuarioLogado)\r\n                                \r\n                            }                          \r\n                            \r\n                            setLoading(false)\r\n                            alertStart(response.mensagem, statusAlert)\r\n                        }\r\n                    }else{\r\n                        alertStart(\"Esse QRCode não é válido!\", \"error\")   \r\n                    }\r\n                    \r\n                }\r\n                catch (error) {\r\n                    Sentry.captureMessage(`NotFunctions RegistrarSeloSeguro2 ${window.location.hostname} - ${error}`);\r\n                    alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n                    setLoading(false)\r\n\r\n                }\r\n\r\n                \r\n            }\r\n        }\r\n\r\n        handleError = err => {\r\n            setQrCodeModal(false) \r\n            setLoading(false)\r\n            alertStart(\"Algo deu errado ao registrar selo  (handleError)\", \"error\")\r\n        }\r\n\r\n        render() {\r\n            if(qrCodeModal){\r\n                return (\r\n                    <div>\r\n                        <QrReader\r\n                            delay={300}\r\n                            onError={this.handleError}\r\n                            onScan={this.handleScan}\r\n                            style={{ width: '100%' }}\r\n                        />\r\n                        {/*<p>{this.state.result}</p>*/}\r\n                    </div>\r\n                )\r\n            }else{\r\n                return (\r\n                    <div>\r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    //console.log(QRCode.result)\r\n    \r\n    useEffect(()=>{\r\n        console.log(\"useEffect\", ultimoPedido)\r\n        const ultimo = async () => {\r\n            console.log(\"ultimo\")\r\n            try {\r\n                const data = usuarioLogado.cliente\r\n                data.appNome = aplicativoDados.appNome\r\n                data.token = `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`\r\n            \r\n                const response = await BuscarUltimoPedidoCliente(data, aplicativoDados)\r\n                console.log('BuscarUltimoPedidoCliente', response)\r\n                if(response.retornoErro){\r\n                    //algum erro\r\n                    alertStart(response.mensagem, \"error\")\r\n                }else{ \r\n                    //tudo certo\r\n                    if(response === \"\"){\r\n                        localStorage.setItem(\"ultimoPedidoCF\", '{\"tem\":false}')\r\n                        setUltimoPedido({\"tem\":false})   \r\n                        return false\r\n                    }\r\n                    localStorage.setItem(\"ultimoPedidoCF\", JSON.stringify(response))\r\n                    setUltimoPedido(response)\r\n                }\r\n            }\r\n            catch (error) {\r\n                Sentry.captureMessage(`NotFunctions BuscarUltimoPedidoCliente ${window.location.hostname} - ${error}`);\r\n                alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n            }\r\n        }\r\n\r\n        if(!ultimoPedido){\r\n            ultimo();\r\n        }\r\n    }, [ultimoPedido])\r\n\r\n\r\n    return (\r\n        <>\r\n            {loading &&\r\n            (<Backdrop className={classes.backdrop} open={loading}>\r\n            <CircularProgress color=\"inherit\" />\r\n            </Backdrop>)}\r\n\r\n            <Snackbar open={alert.status} autoHideDuration={6000} onClose={alertClose}>\r\n                <Alert onClose={alertClose} severity={alert.tipo}>\r\n                {alert.mesangem}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n\r\n            <Cabecalho nomeUsuario={true}></Cabecalho>\r\n\r\n            <div className=\"container container-perfil\">\r\n                <Container className=\"containerEstabelecimentoComponente\">\r\n                    <div className=\"EstabelecimentoComponente row\" >\r\n                        <div className=\"divFundo\" style={{ \"background\": aplicativoDados.urlFundoSite ? `url(${aplicativoDados.urlFundoSite})` : `${aplicativoDados.corSiteSecundaria}`, \"height\": aplicativoDados.urlFundoSite ? \"280px\" : \"125px\" }} >\r\n                            <Avatar className=\"logoPerfil\" style={{\"top\": aplicativoDados.urlFundoSite ? \"83%\" : \"65%\", \"textTransform\": \"uppercase\" ,\"background\": aplicativoDados.corSitePrimaria, \"color\": aplicativoDados.corSiteSecundaria, \"fontSize\": \"3em\" }}>{usuarioLogado.cliente.nome[0]}</Avatar>\r\n                        </div>\r\n\r\n                        <Carousel indicators={false} controls={false} className=\"carrossel w-100 fundoInfoEstabelecimento\">\r\n                            <Carousel.Item className=\"container\">\r\n                                <Row className=\"rowUsuarioPerfil\">\r\n                                    <Col xs={4} md={4} lg={2}></Col>\r\n                                    <Col xs={8} md={8} lg={6} className=\"fraseLadoLogo\"><h5>{usuarioLogado.cliente.nome}</h5></Col>\r\n\r\n                                    {!ultimoPedido \r\n                                    ? (<Col xs={12} md={12} lg={12} className=\"fraseLadoLogo\" style={{\"textAlign\": \"center\"}}><h5><CircularProgress color=\"inherit\" /></h5></Col>) \r\n                                    : (\r\n                                        <>\r\n                                        { (usuarioLogado.cartelas.length && aplicativoDados.apenasDelivery === false && usuarioLogado.cartelas[0]?.status === 0)\r\n                                        ?   <Col xs={6} md={6} lg={2} className=\"marginTopMd\" >\r\n                                                <b>Cartela Atual</b><br></br>\r\n                                                {usuarioLogado.cartelas[0]?.selos?.length} / {usuarioLogado.cartelas[0]?.promocaoFidelidade?.quantidadeNecessaria} selos\r\n                                            </Col> \r\n                                        : null}\r\n                                        \r\n                                        {ultimoPedido.tem === true || ultimoPedido.id\r\n                                        ? (<Col xs={6} md={6} lg={2} className=\"marginTopMd\"><b>Ultimo Pedido</b><br></br>{Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(ultimoPedido.valorTotal)}</Col>)\r\n                                        : null}\r\n                                        </>\r\n                                    )}\r\n                                    \r\n                                    \r\n                                </Row>\r\n                            </Carousel.Item>\r\n                        </Carousel>\r\n\r\n                        <div style={{\"width\": \"100%\", \"background\": \"#f6f6f6\"}}>\r\n                            <List>\r\n\r\n                                <ListItem button onClick={() => { \r\n                                    history.push(`/delivery/enderecos${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n                                    }}>\r\n                                    <ListItemIcon> <LocationOnIcon /> </ListItemIcon>\r\n                                    <ListItemText primary={\"Endereços\"} />\r\n                                </ListItem>\r\n\r\n                                {aplicativoDados.tokenCashBack &&\r\n                                    <ListItem button onClick={() => { setCashback(true) }}>\r\n                                    <ListItemIcon> <MonetizationOnIcon/> </ListItemIcon>\r\n                                    <ListItemText primary={\"CashBack\"} />\r\n                                    </ListItem>\r\n                                }\r\n\r\n                                {aplicativoDados.apenasDelivery === false &&\r\n                                    <ListItem button onClick={() => { \r\n                                        history.push(`/delivery/fidelidade`)\r\n                                    }}>\r\n                                    <ListItemIcon> <FavoriteIcon /> </ListItemIcon>\r\n                                    <ListItemText primary={\"Cartelas de Fidelidade\"} />\r\n                                    </ListItem>\r\n                                }\r\n\r\n                                \r\n                                \r\n\r\n                                <ListItem button onClick={() => { buscarHistoricoPedido() }}>\r\n                                    <ListItemIcon> <DescriptionIcon /> </ListItemIcon>\r\n                                    <ListItemText primary={\"Histórico de Pedidos\"} />\r\n                                </ListItem>\r\n\r\n                                <ListItem button onClick={() => { setConfiguracoesPerfilModal(true) }}>\r\n                                    <ListItemIcon> <SettingsIcon /> </ListItemIcon>\r\n                                    <ListItemText primary={\"Configurações\"} />\r\n                                </ListItem>\r\n\r\n                                {/* {aplicativoDados.apenasDelivery === false\r\n                                &&  <ListItem button onClick={() => { setCompartilharCodigoAmigo(true) }}>\r\n                                        <ListItemIcon> <ShareIcon /> </ListItemIcon>\r\n                                        <ListItemText primary={\"Ganhar Selos\"} />\r\n                                    </ListItem>\r\n                                } */}\r\n                                <ListItem button onClick={() => { setOpenGanheDescontos(true)}}>\r\n                                    <ListItemIcon> <Receipt /> </ListItemIcon>\r\n                                    <ListItemText primary={\"Ganhe Descontos\"} />\r\n                                </ListItem>\r\n\r\n                            </List>\r\n                            <Divider/>\r\n                            <List>\r\n\r\n                                <ListItem button onClick={logOut}>\r\n                                    <ListItemIcon> <ExitToAppIcon /> </ListItemIcon>\r\n                                    <ListItemText primary={\"Sair\"} />\r\n                                </ListItem>\r\n\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        aplicativoDados.apenasDelivery === false \r\n                        ? (<Tooltip title=\"Ler QRcode\" placement=\"bottom\" aria-label=\"Ler QRcode\" onClick={() => { setQrCodeModal(true) }}>\r\n                            <Fab color=\"secondary\" style={{\"color\": aplicativoDados.corSitePrimaria}} className={classes.fixed}>\r\n                            <AiOutlineQrcode />\r\n                            </Fab>\r\n                        </Tooltip>)\r\n                        : null\r\n                    }\r\n                </Container>\r\n            </div>\r\n\r\n            <GanheDescontos \r\n                setOpenGanheDescontos={setOpenGanheDescontos}\r\n                openGanheDescontos={openGanheDescontos}\r\n                usuario={usuarioLogado}\r\n                jaEstou={true}\r\n                setConfiguracoesPerfilModal={setConfiguracoesPerfilModal}\r\n                setCompartilharCodigoAmigo={setCompartilharCodigoAmigo}\r\n                aplicativoDados={aplicativoDados}\r\n                estabelecimentoAtual={aplicativoDados.estabelecimentos.length === 1 ? aplicativoDados.estabelecimentos[0] : {}}\r\n            />\r\n\r\n            <Dialog\r\n\r\n                open={CompartilharCodigoAmigo}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={() => { setCompartilharCodigoAmigo(false) }}\r\n                aria-labelledby=\"modal-ganhe-selos\"\r\n                aria-describedby=\"modal-ganhe-selos\"\r\n            >\r\n            <DialogTitle id=\"modal-ganhe-selos\">{\"Ganhe Selos\"}</DialogTitle>\r\n            <DialogContent>\r\n                    <Typography> {aplicativoDados.textoPromocaoIndicacao} </Typography>       \r\n\r\n                    <br/>\r\n                    <Button variant=\"outlined\" color=\"primary\" fullWidth onClick={(e) => {\r\n                        navigator.clipboard.writeText(usuarioLogado.cliente.codigoCupomDesconto)\r\n                        alertStart(\"Código copiado!\", \"info\")\r\n                    }}>\r\n                        {usuarioLogado.cliente.codigoCupomDesconto}\r\n                    </Button>\r\n                    <br/>\r\n                                \r\n                    <br/> \r\n                    <Typography> Você ganha {aplicativoDados.selosPorIndicacaoConvidado} selos </Typography>     \r\n                    <br/>                \r\n                    <Typography> Seu amigo ganha {aplicativoDados.selosPorIndicacaoConvidante} selos </Typography>                    \r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() =>{setCompartilharCodigoAmigo(false)}} style={{\"color\":\"#dc3545\"}}>\r\n                    Voltar\r\n                </Button>\r\n                <Button onClick={() =>{\r\n                    let mensagem = aplicativoDados.textoConvidarAmigos\r\n                    mensagem = mensagem.replace('$NOME_APLICATIVO$', aplicativoDados.projectName)\r\n                    mensagem = mensagem.replace('$CODIGO$', usuarioLogado.cliente.codigoCupomDesconto)\r\n                    mensagem = mensagem.replace('$LINK$', aplicativoDados.urlAcesso)\r\n\r\n                    window.location.href = `whatsapp://send?text=${mensagem.replace(\"&\", \"%26\")}` \r\n                }} style={{\"color\": \"white\", \"backgroundColor\":\"#28a745\"}}>\r\n                    Compartilhar\r\n                </Button>\r\n            </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={configuracoesPerfilModal}\r\n                aria-labelledby=\"configPerfil\">\r\n                <form onSubmit={salvarConfiguracoesPerfil}>\r\n\r\n                <DialogTitle id=\"configPerfil\">{\"Configurações do Perfil\"}</DialogTitle>\r\n\r\n\r\n            <DialogContent>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    onChange={(e) =>{ setUsuarioEdit(e.target.value)}}\r\n                    value={usuarioEdit}\r\n                    id=\"usuarioEdit\"\r\n                    label=\"Nome do Usuário\"\r\n                    name=\"usuarioEdit\"\r\n                    type=\"text\"                    \r\n                />   \r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    onChange={(e) =>{ setCpfEdit(e.target.value)}}\r\n                    value={cpfEdit}\r\n                    id=\"cpfEdit\"\r\n                    label=\"CPF\"\r\n                    name=\"cpfEdit\"\r\n                    type=\"text\"                    \r\n                />   \r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    onChange={(e) =>{ setTelefoneEdit(e.target.value)}}\r\n                    value={telefoneEdit}\r\n                    id=\"telefoneEdit\"\r\n                    label=\"Telefone\"\r\n                    name=\"telefoneEdit\"\r\n                    type=\"number\"                    \r\n                />  \r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    onChange={(e) =>{ setDataNascimentoEdit(e.target.value)}}\r\n                    value={dataNascimentoEdit}\r\n                    // defaultValue={0}\r\n                    id=\"dataNascimentoEdit\"\r\n                    label=\"Data Nascimento\"\r\n                    name=\"dataNascimentoEdit\"\r\n                    type=\"date\"   \r\n                    InputLabelProps={{\r\n                        shrink: true\r\n                    }}   \r\n                />  \r\n                {\r\n                    !usuarioLogado.cliente.email.includes('@c.us')\r\n                    &&\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        onChange={(e) =>{ setEmailEdit(e.target.value)}}\r\n                        value={emailEdit}\r\n                        id=\"emailEdit\"\r\n                        label=\"Email\"\r\n                        name=\"emailEdit\"\r\n                        type=\"email\"                    \r\n                    />  \r\n                }\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    onChange={(e) =>{ setSenhaAntigaEdit(e.target.value)}}\r\n                    value={senhaAntigaEdit}\r\n                    required={senhaNovaEdit ? true : false}\r\n                    id=\"senhaAntigaEdit\"\r\n                    label=\"Senha Antiga\"\r\n                    name=\"senhaAntigaEdit\"\r\n                    type=\"password\"                    \r\n                />  \r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    onChange={(e) =>{ setSenhaNovaEdit(e.target.value)}}\r\n                    value={senhaNovaEdit}\r\n                    required={senhaAntigaEdit ? true : false}\r\n                    id=\"senhaNovaEdit\"\r\n                    label=\"Senha Nova\"\r\n                    name=\"senhaNovaEdit\"\r\n                    type=\"password\"                    \r\n                />  \r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    required={senhaNovaEdit ? true : false}\r\n                    onChange={(e) =>{ setSenhaNovaConfirmacaoEdit(e.target.value)}}\r\n                    value={senhaNovaConfirmacaoEdit}\r\n                    id=\"senhaNovaConfirmacaoEdit\"\r\n                    label=\"Senha Nova Confirmação\"\r\n                    name=\"senhaNovaConfirmacaoEdit\"\r\n                    type=\"password\"                    \r\n                /> \r\n            </DialogContent>\r\n\r\n            <DialogActions>                \r\n                <Button onClick={() => {setConfiguracoesPerfilModal(false)}} style={{\"color\":\"#dc3545\"}}>\r\n                    Cancelar\r\n                </Button>\r\n                <Button type=\"submit\"\r\n                style={{\"color\": \"white\", \"backgroundColor\":\"#28a745\"}}>\r\n                    Atualizar\r\n                </Button>\r\n            </DialogActions>\r\n            </form>\r\n            </Dialog>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <Dialog\r\n              fullScreen={fullScreen}\r\n              open={qrCodeModal}\r\n              aria-labelledby=\"qrCodeModal\">\r\n\r\n              <DialogTitle id=\"qrCodeModal\">{\"Leitura de QRCode\"}</DialogTitle>\r\n              <DialogContent>\r\n\r\n                <QRCode/>\r\n\r\n              </DialogContent>\r\n              <DialogActions>                \r\n                <Button onClick={() => {\r\n                    setQrCodeModal(false)\r\n                }} >\r\n                  Cancelar\r\n                </Button>                \r\n              </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            {aplicativoDados.tokenCashBack ? (<Dialog\r\n              fullScreen={fullScreen}\r\n              open={Cashback}\r\n              aria-labelledby=\"cashbackModal\">\r\n\r\n              <DialogTitle id=\"cashbackModal\">{\"CashBack\"}</DialogTitle>\r\n              <DialogContent>\r\n\r\n                <Row style={{\"textAlign\": \"center\"}}>\r\n\r\n                    <Col xs={12} md={12} lg={12}>\r\n                        <Button variant=\"contained\" onClick={() => { }} style={{\"background\": `#28a745`, \"color\":\"white\"}} className=\"buttonSaldoCashBack\">\r\n                            <span style={{\"fontSize\": \"0.75em\"}}>Saldo</span>\r\n                            <span style={{\"fontSize\": \"1.75em\"}}>{usuarioLogado.saldoCashBack}</span>\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs={12} md={12} lg={12} style={{\"marginTop\": \"25px\"}}>\r\n                        <Typography>{usuarioLogado.msgCashBack}</Typography>                            \r\n                    </Col>\r\n                    <Col xs={12} md={12} lg={12} style={{\"marginTop\": \"10px\"}}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            prefix=\"R$\"\r\n                            onChange={(e) => {\r\n                                e.target.value = \"R$ \"+formatReal(getMoney(e.target.value))\r\n                            }}\r\n                            id=\"cashBackValorResgate\"\r\n                            label=\"Valor de Resgate\"\r\n                            name=\"cashBackValorResgate\"\r\n                        />  \r\n                        <Button type=\"submit\"\r\n                            style={{\"color\": \"#28a745\"}}\r\n                            onClick={\r\n                                async () => {\r\n\r\n                                    try {\r\n                                        const valorSaldo = parseInt((usuarioLogado.saldoCashBack.replace('R$', '')))\r\n                                        const valorResgate = parseInt(document.getElementById('cashBackValorResgate').value.replace('R$ ', '').replace('.', '').replace(',', '.'))\r\n                                        //console.log(\"valorResgate\", valorResgate, \"valorSaldo\", valorSaldo )\r\n                                    \r\n                                        if(valorResgate > valorSaldo){\r\n                                            alertStart(\"Valor de resgate maior que seu saldo.\", \"warning\")\r\n                                            document.getElementById('cashBackValorResgate').focus()\r\n                                            return false\r\n                                        }else if(valorResgate < 0){\r\n                                            alertStart(\"Você nao pode resgatar valor negativo.\", \"warning\")\r\n                                            document.getElementById('cashBackValorResgate').focus()\r\n                                            return false\r\n                                        }else if(!valorResgate){\r\n                                            document.getElementById('cashBackValorResgate').focus()\r\n                                            return false\r\n                                        }\r\n                                        setLoading(true)\r\n\r\n                                        const data = {\"resgateCashback\": valorResgate}\r\n\r\n                                        const response = await ResgatarCashBack(data, aplicativoDados)\r\n                                    \r\n                                        if(response.retornoErro){\r\n                                            //algum erro\r\n                                            alertStart(response.mensagem, \"error\")\r\n                                        }else{ \r\n                                            //tudo certo\r\n                                            alertStart(response.mensagem, \"success\")\r\n                                        }\r\n\r\n                                        setLoading(false)\r\n\r\n                                    }\r\n                                    catch (error) {\r\n                                        Sentry.captureMessage(`NotFunctions ResgatarCashBack ${window.location.hostname} - ${error}`);\r\n                                        alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\") \r\n                                        setLoading(false)\r\n                                    }\r\n                                }\r\n                            }>\r\n                            Resgatar\r\n                        </Button>              \r\n                    </Col>\r\n                </Row>\r\n\r\n              </DialogContent>\r\n              <DialogActions style={{\"justifyContent\": \"center\"}}>  \r\n                <Button onClick={() => {setLojasCashBack(true)}} >\r\n                  Lojas CashBack\r\n                </Button>  \r\n                <Button onClick={\r\n                    async () => {  \r\n\r\n                        try {\r\n                            const data = usuarioLogado.cliente.id+'/'+usuarioLogado.appNome+'/1/50/00/00'\r\n                            const response = await ExtratoCashback(data, aplicativoDados)\r\n                        \r\n                            if(response.retornoErro){\r\n                                //algum erro\r\n                            alertStart(response.mensagem, \"error\")\r\n                            }else{ \r\n                                //tudo certo\r\n                                if(response.properties.success === false){\r\n                                    setLoading(false)   \r\n                                    alertStart(response.properties.result, \"error\")\r\n                                }else{\r\n                                    //console.log(\"ExtratoCashback\", resposta) \r\n                                    setDadosRelatorioCashBack(response.properties.result.list)\r\n                                    setRelatorioCashBack(true)\r\n                                    setLoading(false)  \r\n                                }\r\n                            }\r\n                        }\r\n                        catch (error) {\r\n                            Sentry.captureMessage(`NotFunctions ExtratoCashback ${window.location.hostname} - ${error}`);\r\n                            alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n                        }\r\n\r\n                    }} >\r\n                  Relatório\r\n                </Button>                \r\n                <Button onClick={() => {setCashback(false)}} >\r\n                  Voltar\r\n                </Button>                \r\n              </DialogActions>\r\n            </Dialog>)\r\n            : null }\r\n\r\n\r\n            {DadosRelatorioCashBack \r\n                ? \r\n                (<Dialog\r\n                    fullScreen={fullScreen}\r\n                    open={RelatorioCashBack}\r\n                    aria-labelledby=\"cashbackRelatorioModal\">\r\n    \r\n                    <DialogTitle id=\"cashbackRelatorioModal\">{\"Relatório CashBack\"}</DialogTitle>\r\n                    <DialogContent>\r\n                                {/*\r\n                                \r\n                                <Row style={{\"textAlign\": \"center\"}} key={index}>\r\n                                    <Col xs={12} md={12} lg={12} style={{\"marginTop\": \"25px\"}}>\r\n                                        <Typography>{relatorio.properties.balance}</Typography>                            \r\n                                    </Col>\r\n                                </Row>\r\n                                */}\r\n    \r\n                        {\r\n                            DadosRelatorioCashBack.map((relatorio, index) => (\r\n\r\n                                <Card className={classes.root} variant=\"outlined\" key={index}>\r\n                                    <CardContent>\r\n                                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                        {relatorio.properties.date} - {relatorio.properties.hour}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h5\" component=\"h2\">\r\n                                        {relatorio.properties.title}\r\n                                        </Typography>\r\n                                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                                        {relatorio.properties.operation} - Tipo {relatorio.properties.type}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                        Saldo: {relatorio.properties.balance}\r\n                                        <br/>\r\n                                        Porcentagem de CashBack: {relatorio.properties.cashback_percentage}\r\n                                        <br/>\r\n\r\n                                        Pontuação: {relatorio.properties.score_transfer}\r\n                                        <br/>\r\n\r\n                                        Valor da Compra: {relatorio.properties.total_purchase}\r\n                                        <br/>\r\n                                        <br/>\r\n\r\n                                        {relatorio.properties.protocolo}                                        \r\n                                        <br/>\r\n\r\n                                        \r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            ))\r\n                        }\r\n                    \r\n    \r\n                    </DialogContent>\r\n                    <DialogActions>                                \r\n                    <Button onClick={() => {setRelatorioCashBack(false)}} >\r\n                        Voltar\r\n                    </Button>                \r\n                    </DialogActions>\r\n                </Dialog>) \r\n                : null\r\n            }\r\n\r\n            {aplicativoDados.tokenCashBack  ? (<Dialog\r\n                fullScreen={fullScreen}\r\n                open={LojasCashBack}\r\n                aria-labelledby=\"cashbackLojasModal\">\r\n\r\n                <DialogTitle id=\"cashbackLojasModal\">{\"Lojas com CashBack\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <iframe src={'https://sys.vespers.com.br/api/cliente_fiel.php?action=getPartners&mobile='+usuarioLogado.cliente.telefone}></iframe>\r\n                </DialogContent>\r\n                <DialogActions>                                \r\n                <Button onClick={() => {setLojasCashBack(false)}} >\r\n                    Voltar\r\n                </Button>                \r\n                </DialogActions>\r\n            </Dialog> )\r\n            : null}\r\n\r\n\r\n            <Rodape valor=\"Perfil\"></Rodape>\r\n        </>\r\n    );\r\n}\r\n\r\n","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Creditcardweb\\index.js",["403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424"],"import React, {useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Card,  Row, Col } from 'react-bootstrap';\r\nimport flatCard from '../../assets/payCard.png';\r\nimport gifSuccess from '../../assets/success.gif';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//alert\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nexport default function Creditcardweb(props) {\r\n  const { success, appName, tokenEstabelecimentoPagSeguro, idEstabelecimento, clienteId, corPrincipal } = useParams() \r\n  \r\n  \r\n  const search = props.location.search;\r\n  const params = new URLSearchParams(search); \r\n\r\n  const [param1, setParam1] = useState(params.get('app_name'));\r\n  const [param2, setParam2] = useState(params.get('token_estabelecimento'));\r\n  const [param3, setParam3] = useState(params.get('idEstabelecimento'));\r\n  const [param4, setParam4] = useState(params.get('cliente_id'));\r\n  const [param5, setParam5] = useState(params.get('cor_principal'));\r\n\r\n  const [erros, setErros] = useState('');\r\n  \r\n      \r\n  const [alert, setAlert] = useState({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n  const history = useHistory();\r\n\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  const alertStart = (msg, tipo) => {\r\n    setAlert({\"status\": true, \"tipo\": tipo, \"mesangem\": msg});\r\n  };\r\n\r\n  const alertClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n    setAlert({\"status\": false, \"tipo\": alert.tipo, \"mesangem\": alert.mesangem});\r\n  };\r\n\r\n\r\n  function enviarFormulario(e){\r\n    e.preventDefault()\r\n\r\n    var nome = document.getElementById(\"name\").value;\r\n    var cardnumber = document.getElementById(\"number\").value;\r\n    var expirationdateMonth = document.getElementById(\"validationMonth\").value;\r\n    var expirationdateYear = document.getElementById(\"validationYear\").value;\t\r\n    var securitycode = document.getElementById(\"code\").value;\r\n\r\n    var url_string = window.location.href; //window.location.href\r\n    var url = new URL(url_string);\r\n\r\n\r\n    var publicKey = obterPublicKey(param2, function(publicKey){\r\n      return generateKeyPagSeguro(publicKey, nome, cardnumber, expirationdateMonth, expirationdateYear, securitycode)\r\n    }); //tokenLoja\r\n\r\n    /*var keyPagSeguro = generateKeyPagSeguro(publicKey, nome, cardnumber, expirationdateMonth, expirationdateYear, securitycode);\r\n\r\n    if(keyPagSeguro != null){\r\n      createReturnObject(keyPagSeguro, param1, param2, param3, param4);\r\n    }else{\r\n      alert(\"Não foi possível criar o cartão de crédito\");\r\n      //mostrar mensagem de erro\r\n    }*/\r\n    \r\n\r\n    //window.location.href = \"http://telaTeste.html?name=\" + nome + \"&card=\" + cardnumber;\r\n    //document.getElementById(\"formulario\").submit();\r\n\r\n  }\r\n\r\n  function resultSuccessPublicKey(objWithPublickKey, callbackSuccess){\r\n    var keyPagSeguro = callbackSuccess(objWithPublickKey.publicKey);\r\n\r\n    if(keyPagSeguro != null){\r\n      createReturnObject(keyPagSeguro, param1, param2, param3, param4);\r\n    }else{\r\n      setErros(\"Não foi possível criar o cartão de crédito (key)\")\r\n      alertStart(\"Não foi possível criar o cartão de crédito (key)\", \"warning\")\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  function resultFailtPublicKey(){\r\n    //exibirMensagem de erro\r\n    setErros(\"Não foi possível criar o cartão de crédito\")\r\n    alertStart(\"Não foi possível criar o cartão de crédito\", \"warning\")\r\n  }\r\n\r\n  function obterPublicKey(tokenLoja, callbackSuccess){\r\n    var http = new XMLHttpRequest();\r\n    var url = 'https://f3f3f6657b48.ngrok.io/clientefiel/rest/';\r\n    var method = \"comum/pagseguro/publickey/\"+tokenLoja;\r\n\r\n    //http.setRequestHeader('Content-Type', 'application/json');\r\n    http.onreadystatechange = function() {\r\n        if (this.readyState == 4 && this.status == 200) {\r\n          //alert(http.responseText);\r\n          var objWithPublickKey = JSON.parse(http.responseText);\r\n          resultSuccessPublicKey(objWithPublickKey, callbackSuccess);\r\n      }else if(this.readyState == 4 && this.status != 200){\r\n        resultFailtPublicKey();\r\n      }\r\n    };\r\n    http.open('GET', url + method, true);\r\n    http.send(null);\r\n\r\n  }\r\n\r\n  function createReturnObject(keyPagSeguro, appName, tokenEstabelecimento, idEstabelemento, clienteId){\r\n    var valorRetorno = JSON.stringify(\r\n      {\r\n       store: false,\r\n       key_card_token: keyPagSeguro,\r\n       app_name: appName,\r\n       estabelecimento_id: idEstabelemento,\r\n       cliente_id: clienteId\r\n      });\r\n\r\n    valorRetorno = btoa(btoa(valorRetorno));\r\n\r\n    window.location.href = `http://${window.location.host}/card.html?creditcardweb=${valorRetorno}` \r\n  }\r\n\r\n  function generateKeyPagSeguro(publicKey, nome, cardnumber, expirationdateMonth, expirationdateYear, securitycode){\r\n\r\n    var card = window.PagSeguro.encryptCard({\r\n        publicKey: publicKey,\r\n        holder: nome,\r\n        number: cardnumber,\r\n        expMonth: expirationdateMonth,\r\n        expYear: expirationdateYear,\r\n       securityCode: securitycode\r\n    });\r\n\r\n    if(card.hasErrors){\r\n      // mostrar Erros\r\n      setErros(\"Erro\")\r\n      return null;\r\n    }\r\n    console.log(card);\r\n    var encrypted = card.encryptedCard;\r\n    return encrypted;\r\n  }\r\n\r\n\r\n\r\n  const handleCard = () => {\r\n    const data = {\r\n      publicKey: tokenEstabelecimentoPagSeguro,\r\n      holder: document.getElementById(\"name\").value,\r\n      number: document.getElementById(\"number\").value,\r\n      expMonth: document.getElementById(\"validationMonth\").value,\r\n      expYear: document.getElementById(\"validationYear\").value, \r\n      securityCode: document.getElementById(\"code\").value,\r\n    }\r\n    var card = window.PagSeguro.encryptCard(data);\r\n\r\n    console.log(card)\r\n\r\n    if(card?.errors?.length){\r\n      const error = card.errors[0];\r\n      console.log('error', error)\r\n      switch (error.code) {\r\n        case \"INVALID_NUMBER\":\r\n            alertStart(\"Número do cartão está invalido\", \"error\")\r\n          break;\r\n        case \"INVALID_SECURITY_CODE\":\r\n            alertStart(\"Código de segurança está invalido\", \"error\")\r\n          break;\r\n        case \"INVALID_NUMBER\":\r\n            alertStart(\"Número do cartão está invalido\", \"error\")\r\n          break;\r\n\r\n        case \"INVALID_EXPIRATION_MONTH\":\r\n            if(data.expMonth.length < 2 || data.expMonth.length > 2)\r\n              alertStart(\"Mês de validade está invalido. A quantidade de digitos é 2 !\", \"error\")\r\n            else\r\n            alertStart(\"Mês de validade está invalido\", \"error\")\r\n          break;\r\n\r\n        case \"INVALID_EXPIRATION_YEAR\":\r\n            if(data.expYear.length < 2 || data.expYear.length > 4)\r\n              alertStart(\"Ano de validade está invalido. A quantidade de digitos é 4 !\", \"error\")\r\n            else\r\n              alertStart(\"Ano de validade está invalido\", \"error\")\r\n          break;\r\n        case \"INVALID_HOLDER\":\r\n            alertStart(\"Nome impresso no cartão está invalido\", \"error\")\r\n          break;\r\n        default:\r\n            alertStart(error.message, \"error\")\r\n          break;\r\n      }\r\n    }else {\r\n      const encrypted = card.encryptedCard;\r\n      // history.push(`/creditcardweb/success?token=${btoa(btoa(btoa(encrypted)))}`)\r\n      history.push(`/creditcardweb/success?token=${btoa(btoa(btoa(card)))}`)\r\n      console.log()\r\n    }\r\n      \r\n      \r\n    \r\n    \r\n    \r\n\r\n\r\n  }\r\n\r\n  if(success){\r\n    return (\r\n      <Row style={{\r\n        \"position\": \"fixed\",\r\n        \"display\": \"flex\",\r\n        \"margin\": 0,\r\n        \"padding\": 0,\r\n        \"height\": \"100vh\",\r\n        \"background\": \"#32bc43\",\r\n        \"width\": \"100vw\",\r\n      }}>\r\n        <Col  xs={12} md={12} lg={12}  style={{\r\n          \"margin\": 0,\r\n          \"padding\": 0,\r\n          \"display\": \"flex\",\r\n          \"justifyContent\": \"center\",\r\n          \"alignSelf\": \"center\"\r\n        }}>\r\n          <img src={gifSuccess}/>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n  \r\n  return (\r\n      <Row style={{\"padding\": \"2em 2em 0 2em\", \"margin\": \"0\"}}>\r\n        <Snackbar open={alert.status} autoHideDuration={6000} onClose={alertClose}>\r\n            <Alert onClose={alertClose} severity={alert.tipo}>\r\n              {alert.mesangem}\r\n            </Alert>\r\n        </Snackbar>\r\n\r\n        \r\n        <Col  xs={12} md={12} lg={12}  >\r\n          <TextField \r\n            style={{\"backgroundColor\": \"white\"}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"name\"\r\n            label=\"Nome Impresso no Cartão\"\r\n            name=\"name\"\r\n          />\r\n        </Col>\r\n\r\n        <Col  xs={12} md={12} lg={12}  >\r\n          <TextField \r\n            style={{\"backgroundColor\": \"white\"}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            type={\"text\"}\r\n            pattern=\"[0-9]*\"\r\n            fullWidth\r\n            id=\"number\"\r\n            label=\"Numero do Cartão\"\r\n            name=\"number\"\r\n          />\r\n        </Col>\r\n        \r\n        <Col  xs={6} md={6} lg={6}  >\r\n          \r\n          <TextField \r\n            type=\"text\" pattern=\"[0-9]*\" \r\n            style={{\"backgroundColor\": \"white\"}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"validationMonth\"\r\n            label=\"Mes\"\r\n            name=\"validationMonth\"\r\n          />\r\n        </Col>\r\n        <Col  xs={6} md={6} lg={6}  >\r\n          <TextField \r\n            style={{\"backgroundColor\": \"white\"}}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            type=\"text\" pattern=\"[0-9]*\" \r\n            id=\"validationYear\"\r\n            label=\"Ano\"\r\n            name=\"validationYear\"\r\n          />\r\n        </Col>\r\n        <Col  xs={12} md={12} lg={12}  >\r\n          <TextField \r\n            style={{\"backgroundColor\": \"white\"}}\r\n            type=\"text\" pattern=\"[0-9]*\" \r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"code\"\r\n            label=\"Código\"\r\n            name=\"code\"\r\n          />\r\n        </Col>\r\n        <Col  xs={12} md={12} lg={12}  >\r\n          <Typography> {erros} </Typography>\r\n        </Col>\r\n        <Col  xs={12} md={12} lg={12} style={{\"zIndex\": 2}} >\r\n          <Button fullWidth onClick={enviarFormulario} style={{\"color\": \"white\", \"backgroundColor\": \"#28a745\"}}>\r\n            Cadastrar\r\n          </Button>\r\n        </Col>\r\n        {/* <Col  xs={12} md={12} lg={12} style={{\"zIndex\": 2}} >\r\n          <Button fullWidth onClick={handleBack} style={{\"color\": \"white\", \"backgroundColor\": \"#6c757d\", \"marginTop\":\"1em\"}}>\r\n            Voltar\r\n          </Button>\r\n        </Col> */}\r\n        <Col  xs={12} md={12} lg={12} style={{\"zIndex\": 1}}>\r\n          <img src={flatCard} style={{\r\n                \"width\": \"100%\",\r\n          }}/>\r\n        </Col>\r\n      </Row>\r\n  );\r\n}","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Offline\\index.js",[],"C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Enderecos\\index.js",["425","426","427","428","429"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './styles.css';\r\nimport Cabecalho from '../Global/cabecalho';\r\nimport Rodape from '../Global/rodape';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport {\r\n  ComumCep,\r\n  CadastrarEnderecoCliente,\r\n  ObterCardapioCompletoV1, \r\n  ObterCardapioPedidoMesa,\r\n  identificarEstabelecimentoSelecionado\r\n} from '../../services/functions';\r\nimport * as Sentry from \"@sentry/react\";\r\n\r\nimport api from '../../services/api';\r\n\r\nimport {  Row, Col } from 'react-bootstrap';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport enderecosVazios from '../../assets/endereco-flat.svg';\r\n\r\nimport PersonPinCircleIcon from '@material-ui/icons/PersonPinCircle';\r\n\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n//alert\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n/* modal */\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n//import Loading from '../loading';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  rootAlert: {\r\n    zIndex: theme.zIndex.drawer + 9999,\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  rootForm: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1, 0),\r\n      //width: '25ch',\r\n    },\r\n  },\r\n  alertIndex: {\r\n    zIndex: '999999',\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 999,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nfunction qtdEnderecos(enderecos){\r\n  let qtd = 0;\r\n  enderecos.forEach(endereco => {\r\n    if(endereco.ativo === true){\r\n      qtd++;\r\n    }\r\n  });\r\n  return qtd;\r\n}\r\n\r\n\r\nexport default function Estabelecimento() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  \r\n  const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))\r\n  const usuarioLogado = JSON.parse(localStorage.getItem(\"usuarioCF\"))\r\n  const [enderecos, setEnderecos] = useState(usuarioLogado.cliente?.enderecos ? usuarioLogado.cliente.enderecos : []);  \r\n  const qtdEnd = qtdEnderecos(enderecos)\r\n\r\n  const estabelecimentoAtual = JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\"))\r\n  const enderecoAtual = JSON.parse(localStorage.getItem(\"enderecoAtualCF\"))\r\n  const [loading, setLoading] = React.useState(false);\r\n  \r\n  //console.log(\"aplicativoDados\", aplicativoDados)\r\n  //console.log(\"enderecos\", enderecos)\r\n\r\n\r\n  // dados para adicionar cep\r\n  const [temCEP, setTemCEP] = React.useState(false);\r\n  \r\n  const [cidadesNaoSeiCep, setCidadesNaoSeiCep] = React.useState([]);\r\n  const [bairrosCepUnico, setBairrosCepUnico] = React.useState([]);\r\n  const [bairroCepUnicoSelecionado, setBairroCepUnicoSelecionado] = React.useState('');\r\n  const [cep, setCep] = React.useState('');\r\n  const [uf, setUf] = React.useState('');\r\n  const [cidade, setCidade] = React.useState('');\r\n  const [bairro, setBairro] = React.useState('');\r\n  const [rua, setRua] = React.useState('');\r\n  const [numero, setNumero] = React.useState('');\r\n  const [complemento, setComplemento] = React.useState('');\r\n  const [referencia, setReferencia] = React.useState('');\r\n\r\n  //alerts    \r\n  const [alert, setAlert] = useState({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n\r\n  function Alert(props) {\r\n      return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\n  const alertStart = (msg, tipo) => {\r\n      setAlert({\"status\": true, \"tipo\": tipo, \"mesangem\": msg});\r\n  };\r\n\r\n  const alertClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n          return;\r\n      }\r\n      setAlert({\"status\": false, \"tipo\": alert.tipo, \"mesangem\": alert.mesangem});\r\n  };\r\n\r\n  const [openAdicionarEndereco, setOpenAdicionarEndereco] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const closeAdicionarEndereco = () =>{\r\n    setOpenAdicionarEndereco(false)    \r\n    setTimeout(() => {\r\n      setTemCEP(false)\r\n    }, 300);\r\n  }\r\n\r\n  const removerEndereco = (index) => {\r\n    try {\r\n      setLoading(true)\r\n      enderecos[index].ativo = false\r\n      const data = enderecos[index]\r\n      data.idCliente = usuarioLogado.cliente.id\r\n      data.idEstabelecimento = estabelecimentoAtual.id\r\n      data.token = `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`\r\n\r\n      if(enderecoAtual.id === enderecos[index].id){\r\n        localStorage.setItem('enderecoAtualCF', JSON.stringify({}))\r\n      }\r\n      const response = CadastrarEnderecoCliente(data, aplicativoDados)\r\n  \r\n      if(response.retornoErro){\r\n        //algum erro\r\n        alertStart(response.mensagem, \"error\")\r\n      }else{ \r\n        //tudo certo\r\n        // DEU CERTO\r\n        usuarioLogado.cliente.enderecos[index] = response\r\n        localStorage.setItem('usuarioCF', JSON.stringify(usuarioLogado))\r\n        \r\n        setEnderecos(usuarioLogado.cliente.enderecos)\r\n        alertStart(\"Endereço Removido!\", \"success\")\r\n      }\r\n    }\r\n    catch (error) {\r\n        Sentry.captureMessage(`NotFunctions CadastrarEnderecoCliente ${window.location.hostname} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n    }\r\n\r\n    setLoading(false)\r\n    \r\n  }\r\n\r\n  const adicionarEndereco = async () => {\r\n\r\n    try {\r\n      \r\n  \r\n      \r\n\r\n      const data = {\r\n        \"idCliente\": usuarioLogado.cliente.id,\r\n        \"idEstabelecimento\": estabelecimentoAtual.id,\r\n        \"cep\": cep,\r\n        \"uf\": uf,\r\n        \"cidade\": cidade,\r\n        \"bairro\": bairro,\r\n        \"logradouro\": rua,\r\n        \"numero\": numero,\r\n        \"complemento\": complemento,\r\n        \"referencia\": referencia,\r\n        \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n      }\r\n\r\n      \r\n      if(aplicativoDados.tipoEntregaBairro == 1){\r\n        data.bairroEspecifico = 1\r\n      }else{\r\n        data.bairroEspecifico = 0\r\n      }\r\n\r\n      if(!cep){\r\n        alertStart(\"Necessario o preenchimento do CEP!\", \"warning\")     \r\n        document.getElementById(\"cadastroCep\").focus()\r\n        return false\r\n      }else if(!uf){\r\n        alertStart(\"Necessario o preenchimento da sigla do estado!\", \"warning\")     \r\n        document.getElementById(\"cadastroUf\").focus()\r\n        return false\r\n      }else if(!cidade){\r\n        alertStart(\"Necessario o preenchimento da cidade!\", \"warning\")     \r\n        document.getElementById(\"cadastroCidade\").focus()\r\n        return false\r\n      }else if(!bairro){\r\n        alertStart(\"Necessario o preenchimento do bairro!\", \"warning\")     \r\n        document.getElementById(\"cadastroBairro\").focus()\r\n        return false\r\n      }else if(!rua){\r\n        alertStart(\"Necessario o preenchimento da rua!\", \"warning\")     \r\n        document.getElementById(\"cadastroRua\").focus()\r\n        return false\r\n      }else if(!numero){\r\n        alertStart(\"Necessario o preenchimento do numero!\", \"warning\")     \r\n        document.getElementById(\"cadastroNumero\").focus()\r\n        return false\r\n      }\r\n      // }else if(!complemento){\r\n      //   alertStart(\"Necessario o preenchimento do complemento!\", \"warning\")     \r\n      //   document.getElementById(\"cadastroComplemento\").focus()\r\n      //   return false\r\n      // }\r\n      setLoading(true)\r\n\r\n      const response = await CadastrarEnderecoCliente(data, aplicativoDados)\r\n\r\n      if(response.retornoErro){\r\n          //algum erro\r\n          alertStart(response.mensagem, \"error\")\r\n          setLoading(false)\r\n          closeAdicionarEndereco()\r\n      }else{ \r\n          //tudo certo\r\n          // DEU CERTO\r\n\r\n          /*const newEnderecos = enderecos\r\n          newEnderecos.push(retorno.data)\r\n          //console.log(\"newEnderecos\", newEnderecos)\r\n          setEnderecos(newEnderecos)*/\r\n          alertStart(response.mensagem, \"success\")     \r\n\r\n\r\n          usuarioLogado.cliente.enderecos.push(response)\r\n          localStorage.setItem('usuarioCF', JSON.stringify(usuarioLogado))\r\n          \r\n          buscarCardapio(response)\r\n          \r\n      }\r\n    }\r\n    catch (error) {\r\n        Sentry.captureMessage(`NotFunctions buscarCardapioOffline ${window.location.hostname} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n        setLoading(false)\r\n    }\r\n  \r\n\r\n    \r\n  }\r\n\r\n\r\n\r\n  async function calcularValorTotal(){\r\n    const cardapio = JSON.parse(localStorage.getItem(\"cardapioCF\"))\r\n    const carrinho = JSON.parse(localStorage.getItem(\"carrinhoCF\"))\r\n    \r\n    \r\n\r\n    let valorTotalItens = 0;\r\n    let valorProdutosPromocionais = 0;\r\n\r\n    carrinho.pedido.itens.forEach(item => {\r\n      valorTotalItens += item.valorProdutoHistorico      \r\n      if(item.produto.promocional){\r\n        valorProdutosPromocionais += item.valorProdutoHistorico\r\n      }\r\n    })\r\n\r\n    //console.log(\"valorProdutosPromocionais\", valorProdutosPromocionais)\r\n    //console.log(\"valorPrduto\", valorTotalItens)\r\n    \r\n    \r\n\r\n\r\n    let taxaDeEntrega = 0\r\n    if(carrinho.pedido.tipoPedido !== 1 && !(valorTotalItens > cardapio.minimoEntregaGratis && cardapio.minimoEntregaGratis > 0)){ // NAO FOR RETIRADA NO LOCAL\r\n      taxaDeEntrega = carrinho.pedido.valorEntrega ? carrinho.pedido.valorEntrega : enderecoAtual.taxaEntrega ? enderecoAtual.taxaEntrega : 0\r\n    }\r\n\r\n    let valorFinalProdutos = 0;\r\n    if(cardapio.percentualDesconto && (cardapio.valorDesconto === 0 || !cardapio.valorDesconto)){\r\n      //desconto percetual - apenas em produtos nao promocionais\r\n      var descontoPercentual = ((valorTotalItens - valorProdutosPromocionais) * cardapio.percentualDesconto) / 100\r\n\r\n      //maximo que pode dar de desconto\r\n      if(cardapio.maximoDesconto && descontoPercentual > cardapio.maximoDesconto){\r\n        descontoPercentual = cardapio.maximoDesconto\r\n      }\r\n      \r\n\r\n      carrinho.percentualDescontoValor = descontoPercentual\r\n      valorFinalProdutos = ( valorTotalItens - descontoPercentual ) \r\n\r\n    }else{\r\n      //desconto fixo - apenas em produtos nao promocionais\r\n      var descontoFixo = carrinho.pedido.valorDesconto\r\n\r\n      //maximo que pode dar de desconto\r\n      if(cardapio.maximoDesconto && descontoFixo > cardapio.maximoDesconto){\r\n        descontoFixo = cardapio.maximoDesconto\r\n      }\r\n\r\n      let produtosNaoPromocionais = valorTotalItens - valorProdutosPromocionais\r\n      produtosNaoPromocionais -= descontoFixo      \r\n      valorFinalProdutos = valorProdutosPromocionais + (produtosNaoPromocionais > 0 ? produtosNaoPromocionais : 0)     \r\n    }\r\n\r\n    //console.log(\"valorFinalProdutos\", valorFinalProdutos)\r\n    if(valorFinalProdutos < 0){\r\n      carrinho.pedido.valorTotal = taxaDeEntrega\r\n    }else{\r\n      carrinho.pedido.valorTotal = valorFinalProdutos + taxaDeEntrega\r\n    }\r\n\r\n    if(carrinho.pedido.valorTotal < 0){\r\n      carrinho.pedido.valorTotal = 0.0\r\n    }\r\n\r\n    localStorage.setItem(\"carrinhoCF\", JSON.stringify(carrinho)) \r\n  }\r\n\r\n  const buscarCardapio = async (endereco) => {  \r\n    setLoading(true)\r\n\r\n    try {\r\n      let data = {\r\n        \"idCliente\": usuarioLogado.cliente.id,\r\n        \"idEstabelecimento\": estabelecimentoAtual.id,\r\n        \"idEndereco\": endereco.id,\r\n        \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n      }              \r\n\r\n      \r\n      const mesaLogada = !!JSON.parse(localStorage.getItem('usuarioPedidoMesaCF'))?.logado\r\n      const response = mesaLogada ? await ObterCardapioPedidoMesa(data, aplicativoDados) : await ObterCardapioCompletoV1(data, aplicativoDados)\r\n\r\n        if(response.retornoErro){\r\n            //algum erro\r\n            setLoading(false)\r\n          alertStart(response.mensagem, \"error\")\r\n        }else{ \r\n            //tudo certo\r\n            const retorno = response\r\n            if(!JSON.parse(localStorage.getItem('usuarioCF')).logado){\r\n              retorno.id = \"usuarioDeslogado\"\r\n            }\r\n            const carrinhoRetorno = JSON.parse(localStorage.getItem(\"carrinhoCF\")) \r\n            const cardapio = JSON.parse(localStorage.getItem(\"cardapioCF\"))\r\n            \r\n            \r\n    \r\n            carrinhoRetorno.valorMinimoPedido = retorno.valorMinimoPedido\r\n            carrinhoRetorno.valorDesconto = retorno.valorDesconto\r\n            carrinhoRetorno.percentualDesconto = retorno.percentualDesconto\r\n            carrinhoRetorno.minimoEntregaGratis = retorno.minimoEntregaGratis\r\n            carrinhoRetorno.maximoPedidoComDesconto = retorno.maximoPedidoComDesconto\r\n            carrinhoRetorno.maximoDesconto = retorno.maximoDesconto\r\n            carrinhoRetorno.cupomDesconto = retorno.cupomDesconto\r\n      \r\n            \r\n            let enderecoSelecionadoNoRetorno = retorno?.enderecos[0]\r\n            if(retorno.enderecos.length > 1){\r\n              for(let j = 0; j < retorno.enderecos.length; j++){\r\n                if(endereco.id === retorno.enderecos[j].id){\r\n                  enderecoSelecionadoNoRetorno = retorno.enderecos[j]\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n            const produtosDoCarrinho = JSON.parse(localStorage.getItem('backupItensCarrinhoCF'))\r\n            \r\n            carrinhoRetorno.pedido = {\r\n              \"entregaImediata\": false,\r\n              \"formaPagamento\": {},\r\n              \"itens\": produtosDoCarrinho?.length > 0 ? produtosDoCarrinho : [],\r\n              \"taxaEntrega\": enderecoSelecionadoNoRetorno ? enderecoSelecionadoNoRetorno.taxaEntrega : null,\r\n              //\"tipoDesconto\": null,\r\n              \"tokenCartaoCredito\": null,\r\n              \"troco\": null,\r\n              \"valorDesconto\": carrinhoRetorno.valorDesconto,\r\n              \"valorEntrega\": enderecoSelecionadoNoRetorno ? enderecoSelecionadoNoRetorno.taxaEntrega : null,\r\n              \"valorTotal\": enderecoSelecionadoNoRetorno ? enderecoSelecionadoNoRetorno.taxaEntrega : null,\r\n              \"token\": `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n            }\r\n      \r\n            if(!retorno?.cupomDesconto?.codigoCupom){\r\n              retorno.cupomDesconto = cardapio.cupomDesconto\r\n              if(cardapio?.cupomDesconto?.freteGratis){\r\n                carrinhoRetorno.pedido.valorEntrega = 0;\r\n                carrinhoRetorno.pedido.taxaEntrega = 0;\r\n                if(enderecoSelecionadoNoRetorno.bairro){\r\n                  enderecoSelecionadoNoRetorno.taxaEntrega = 0;          \r\n                }\r\n              }\r\n            }\r\n            \r\n            localStorage.setItem(\"cardapioCF\", JSON.stringify(retorno))          \r\n      \r\n            localStorage.setItem(\"enderecoAtualCF\", JSON.stringify(enderecoSelecionadoNoRetorno?.bairro ? enderecoSelecionadoNoRetorno : {}))    \r\n      \r\n            localStorage.setItem(\"carrinhoCF\", JSON.stringify(carrinhoRetorno)) \r\n            \r\n            if(produtosDoCarrinho?.length > 0){\r\n              await calcularValorTotal()\r\n            }else{\r\n              if(carrinhoRetorno.pedido.taxaEntrega == -1 && aplicativoDados.estabelecimentos.length > 1){\r\n                history.push(`/estabelecimento`) \r\n                return true\r\n              }\r\n            }\r\n      \r\n            history.push(`/delivery${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n        }\r\n    }\r\n    catch (error) {\r\n        Sentry.captureMessage(`NotFunctions ObterCardapioPedidoMesa, ObterCardapioCompletoV1 ${window.location.hostname} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n    }\r\n  }\r\n\r\n  const naoSeiCep = async (e) => {\r\n    setLoading(true)\r\n    try {\r\n      await api.post(\"comum/CidadesAtendidasPorAplicativo\", {\"appNome\": aplicativoDados.appNome}, {\r\n        headers: {\"Content-Type\": \"application/json\"}\r\n      }).then(retorno => {\r\n        console.log('CidadesAtendidasPorAplicativo> ', retorno)\r\n        setTemCEP(true)\r\n        setCidadesNaoSeiCep(retorno.data);\r\n      })\r\n    } catch (error) {\r\n      Sentry.captureMessage(`${aplicativoDados.appNome} - ${error} - CidadesAtendidasPorAplicativo`);\r\n\r\n      alertStart(\"Erro não identificado ao buscar CidadesAtendidasPorAplicativo\", \"error\")   \r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  const alterarCidade = async (e) => {      \r\n    setLoading(true)                        \r\n    try {\r\n      await api.post(\"comum/Bairros\", cidadesNaoSeiCep[e.target.value], {\r\n        headers: { \"Content-Type\": \"application/json\", \"app\": aplicativoDados.appNome}\r\n      }).then(retorno => {\r\n        console.log(\"Bairros\", retorno)\r\n        setBairrosCepUnico(retorno.data)\r\n        setCep(\"00000000\");\r\n        setBairroCepUnicoSelecionado(0)\r\n      })\r\n    } catch (error) {\r\n      Sentry.captureMessage(`${aplicativoDados.appNome} - ${error} - comum/Bairros`);\r\n\r\n      alertStart(\"Erro não identificado ao buscar Bairros\", \"error\")                                   \r\n    }\r\n    setLoading(false)                        \r\n  }\r\n\r\n  const digitandoCep = async (e) => {\r\n\r\n    try {\r\n      let valorInput = e.target.value\r\n      valorInput = valorInput.replace(/-/g, '')\r\n      valorInput = valorInput.replace(/ /g, '')\r\n      valorInput = valorInput.replace(/\\//g, '')\r\n      \r\n      console.log(\"valorInput\", valorInput)\r\n      if(valorInput.length == 8 ){\r\n        setCep(valorInput)\r\n\r\n        setLoading(true)\r\n        //buscar dados do cep\r\n        const response = await ComumCep(valorInput, aplicativoDados)\r\n    \r\n        if(response.retornoErro){\r\n          //algum erro\r\n          alertStart(response.mensagem, \"error\")\r\n        }else{ \r\n          //tudo certo\r\n          if(response.id || response.logradouro){\r\n            //TEM 1 ENDEREÇO\r\n            alertClose()\r\n            setBairro(response.bairro)\r\n            setCidade(response.localidade)\r\n            setRua(response.logradouro)\r\n            setUf(response.uf)\r\n            setTemCEP(true)                            \r\n          }else if(response.bairros.length >= 1){\r\n            //CIDADE COM CEP UNICO, TEM VARIOAS BAIRROS\r\n            alertClose()\r\n            setTemCEP(true)\r\n            setBairrosCepUnico(response.bairros)\r\n            \r\n          }else{\r\n            //DEU ERRO, OU NAO EXISTE\r\n            alertStart(\"CEP não encontrado\", \"error\")   \r\n            setCep('')\r\n            document.getElementById(\"cepDigitando\").focus()\r\n\r\n          }\r\n        }\r\n        setLoading(false)\r\n      }\r\n    }\r\n    catch (error) {\r\n        Sentry.captureMessage(`NotFunctions digitandoCep ${window.location.hostname} - ${error}`);\r\n        alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")   \r\n        setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading &&\r\n        (<Backdrop className={classes.backdrop} open={loading}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>)}\r\n\r\n      <Snackbar open={alert.status} autoHideDuration={6000} onClose={alertClose} className={classes.alertIndex}>\r\n          <Alert onClose={alertClose} severity={alert.tipo}>\r\n          {alert.mesangem}\r\n          </Alert>\r\n      </Snackbar>\r\n        \r\n      <Cabecalho voltar={true} produtoNome={usuarioLogado?.cliente?.nome} ></Cabecalho>\r\n      <div className=\"container container-Estabelecimento\">\r\n        <Row>\r\n          <Col xs={12} md={12} lg={12} >\r\n            <Typography gutterBottom variant=\"h5\" >\r\n              Selecione o endereço para entrega\r\n            </Typography>\r\n          </Col>\r\n\r\n          <Col xs={7} md={7} lg={7} style={{\"alignSelf\": \"center\"}}>            \r\n            {qtdEnd} {qtdEnd > 1 ? \"Endereços cadastrados\" : \"Endereço cadastrado\"} \r\n          </Col>\r\n          <Col xs={5} md={5} lg={5} >            \r\n            <Button variant=\"contained\" onClick={() => { \r\n                setBairrosCepUnico([])\r\n                setBairroCepUnicoSelecionado(null)\r\n                setCep('')\r\n                setUf('')\r\n                setCidade('')\r\n                setBairro('')\r\n                setRua('')\r\n                setNumero('')\r\n                setComplemento('')\r\n                setReferencia('')\r\n                setOpenAdicionarEndereco(true) \r\n              }} style={{\"backgroundColor\": `#28a745`, \"color\":\"white\"}} >\r\n              Adicionar \r\n            </Button>\r\n          </Col>\r\n          \r\n          { enderecos.length\r\n\r\n            //TEM ENDEREÇO\r\n            ? (enderecos.map( (endereco, index) => (\r\n              endereco.ativo === true ?\r\n                (<React.Fragment key={index}>\r\n                  <Col xs={12} md={6} lg={4} key={index} style={{\"margin\": \"1em 0\"}}  >\r\n                      \r\n                      <Card className={classes.root} style={{\"height\": \"100%\"}}>\r\n                        <CardActionArea  style={{ \"height\": \"calc(100% - 30px)\", \"flexFlow\": \"column-reverse\", \"alignItems\": \"normal\"}}>\r\n                          \r\n                          <Row style={{\"margin\":0,\"textAlign\": \"\", \"width\": \"100%\", \"padding\": \"1em\", \"alignItems\": \"center\"}}>\r\n                            <Col xs={3} md={3} lg={3} style={{\"padding\":0}}>\r\n                              <PersonPinCircleIcon style={{\r\n                                \"width\": \"100%\",\r\n                                \"height\": \"100%\"\r\n                              }}/>\r\n                            </Col>\r\n                            <Col xs={9} md={9} lg={9}>\r\n                              \r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\r\n                              {endereco.cidade} / {endereco.uf}\r\n                              </Typography>\r\n\r\n                              <Typography gutterBottom  component=\"h2\" >                    \r\n                              {endereco.bairro}\r\n                              </Typography>\r\n                              \r\n                              <Typography className={\"StatusEstabelecimento\"} variant=\"body2\"  component=\"p\">\r\n                              {endereco.logradouro} n° {endereco.numero}\r\n                              </Typography>\r\n\r\n\r\n                              {endereco.complemento && <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\r\n                              {endereco.complemento}\r\n                              </Typography>}\r\n\r\n                              {endereco.referencia && <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\r\n                              {endereco.referencia}\r\n                              </Typography>}\r\n\r\n                              \r\n                            </Col>\r\n                          \r\n                          </Row>\r\n                          \r\n                          <CardContent style={{\"padding\": \"0 16px\"}}>\r\n                          \r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions style={{\"padding\":\"0\"}}>\r\n      \r\n                          \r\n                          <Button size=\"small\" className={\"botaoVerde naoArredondado\"} \r\n                            onClick={() =>{\r\n                              buscarCardapio(endereco)\r\n                            }}>\r\n                              Selecionar\r\n                            </Button>\r\n      \r\n                            <Button size=\"small\" className={\"botaoVermelho naoArredondado\"} \r\n                              onClick={() =>{\r\n                                removerEndereco(index)\r\n                            }}>\r\n                              Remover\r\n                            </Button>\r\n                          \r\n                        </CardActions>\r\n                      </Card>\r\n                    </Col>\r\n              </React.Fragment>\r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n              //   <Col xs={12} md={6} lg={4} key={endereco.id} className=\"enderecoAtivo\" style={{\"margin\": \"1em 0\"}}>                \r\n              //   <Card className={classes.root}>\r\n              //     <CardActionArea onClick={() =>{\r\n              //         buscarCardapio(endereco)\r\n              //       }}>                   \r\n              //       <CardContent>\r\n              //         <PersonPinCircleIcon/>\r\n              //         <Typography  variant=\"h6\" component=\"h3\">                    \r\n              //         {endereco.logradouro}\r\n              //         </Typography>\r\n              //         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              //         n° {endereco.numero}, {endereco.bairro} - {endereco.cidade} / {endereco.uf}\r\n              //         </Typography>\r\n              //       </CardContent>\r\n              //     </CardActionArea>\r\n              //     <CardActions>\r\n              //       <Button size=\"small\" color=\"primary\" onClick={() =>{\r\n              //         buscarCardapio(endereco)\r\n              //       }}>\r\n              //         Selecionar\r\n              //       </Button>\r\n              //       <Button size=\"small\" style={{\"position\": \"absolute\", \"right\": \"3em\", \"color\": \"#dc3545\"}} onClick={() =>{\r\n              //         removerEndereco(index)\r\n              //       }}>\r\n              //         Excluir\r\n              //       </Button>\r\n              //     </CardActions>\r\n              //   </Card>\r\n              // </Col>\r\n              \r\n              ) \r\n              : null             \r\n            )))\r\n            \r\n            //NAO TEM ENDEREÇO\r\n            : <div className=\"divImageCentroCardapio\" >\r\n                <img alt={\"sem endereços cadastrados\"} src={enderecosVazios} className=\"pretoEBranco\" />\r\n              </div>\r\n          }   \r\n        </Row>\r\n\r\n\r\n        <Dialog\r\n        fullScreen={fullScreen}\r\n        open={openAdicionarEndereco}\r\n        onClose={closeAdicionarEndereco}\r\n        aria-labelledby=\"adicionar-endereco\">\r\n        <DialogTitle id=\"adicionar-endereco\">{\"Adicionar Endereço\"}</DialogTitle>\r\n        <DialogContent>\r\n            <form className={classes.rootForm} noValidate autoComplete=\"off\" name=\"adicionarEndereco\">\r\n              \r\n              {\r\n                temCEP\r\n                //COM CEP\r\n                ?                     \r\n                 (<Row style={{\"textAlign\": \"center\"}}>\r\n                  <Col xs={12} md={12} lg={12}>\r\n                    <Typography gutterBottom variant=\"h5\" >\r\n                      Complete o endereço \r\n                    </Typography>\r\n                  </Col>\r\n                  \r\n                  {\r\n                    (cidadesNaoSeiCep.length > 0 && (cep == \"00000000\" || !cep)) &&\r\n                    (<Col xs={12} md={12} lg={12}>\r\n\r\n                        <FormControl variant=\"outlined\" style={{\"width\": \"100%\", \"marginBottom\": \"1em\"}}>\r\n                          <InputLabel>Selecione a Cidade</InputLabel>\r\n                          <Select                           \r\n                            fullWidth\r\n                            onChange={alterarCidade}\r\n                            label=\"Selecione a Cidade\"\r\n                          >\r\n                            \r\n                             {cidadesNaoSeiCep.map((cidade, index) => (\r\n                                <MenuItem key={cidade.id} value={index}>{cidade.nomeCompleto}</MenuItem>\r\n                              ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                    </Col>)\r\n                  }\r\n\r\n                  {\r\n                    bairrosCepUnico.length > 0 &&\r\n                    (<Col xs={12} md={12} lg={12}>\r\n\r\n                        <FormControl variant=\"outlined\" style={{\"width\": \"100%\", \"marginBottom\": \"1em\"}}>\r\n                          <InputLabel id=\"demo-simple-select-outlined-label\">Selecione o Bairro</InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            fullWidth\r\n                            // value={bairroCepUnicoSelecionado == null ? null : bairroCepUnicoSelecionado}\r\n                            onChange={(e) => {\r\n                              console.log(\"bairro selecionei\", bairrosCepUnico[e.target.value])\r\n                              setBairroCepUnicoSelecionado(e.target.value)\r\n                              setUf(bairrosCepUnico[e.target.value]?.cidade?.estado?.sigla)\r\n                              setCidade(bairrosCepUnico[e.target.value]?.cidade?.nome)\r\n                              setBairro(bairrosCepUnico[e.target.value].nome)\r\n                            }}\r\n                            label=\"Selecione o Bairro\"\r\n                          >\r\n                             {bairrosCepUnico.map((bairro, index) => (\r\n                                <MenuItem key={bairro.id} value={index}>{bairro.nome}</MenuItem>\r\n                              ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                    </Col>)\r\n                  }\r\n\r\n                  { ((bairroCepUnicoSelecionado != null || bairrosCepUnico.length === 0 ) && (cidadesNaoSeiCep.length === 0 || bairroCepUnicoSelecionado != null)) && \r\n                    (<>\r\n                    \r\n                    {\r\n                      bairrosCepUnico.length > 0\r\n                      ? null\r\n                      :   <Col xs={12} md={12} lg={12}>\r\n                            <TextField\r\n                              disabled                    \r\n                              fullWidth\r\n                              name=\"CEP\"\r\n                              // value={cep}\r\n                              id=\"cadastroCep\"\r\n                              label=\"CEP\"\r\n                              /*defaultValue=\"Hello World\"*/\r\n                              variant=\"outlined\"\r\n                            />\r\n                          </Col>\r\n                    }\r\n                   \r\n                    <Col xs={12} md={6} lg={6} >\r\n                      <TextField\r\n                        disabled\r\n                        fullWidth                    \r\n                        required\r\n                        value={uf}\r\n                        name=\"UF\"\r\n                        id=\"cadastroUf\"\r\n                        label=\"UF\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Col>\r\n\r\n                    {\r\n                      !cidadesNaoSeiCep.length > 0\r\n                      ? <Col xs={12} md={6} lg={6} >                                           \r\n                      <TextField\r\n                        required\r\n                        fullWidth\r\n                        disabled\r\n                        value={cidade}\r\n                        name=\"CIDADE\"\r\n                        id=\"cadastroCidade\"\r\n                        label=\"CIDADE\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Col>\r\n                    : null\r\n                    }\r\n                    \r\n                    {\r\n                      bairrosCepUnico.length > 0\r\n                      ? null\r\n                      : <Col xs={12} md={6} lg={6} >\r\n                          <TextField\r\n                            disabled\r\n                            fullWidth                 \r\n                            required\r\n                            value={bairro}\r\n                            name=\"BAIRRO\"\r\n                            id=\"cadastroBairro\"\r\n                            label=\"BAIRRO\"\r\n                            variant=\"outlined\"\r\n                          />\r\n                        </Col>\r\n                    }\r\n                    \r\n                    <Col xs={12} md={6} lg={6} >\r\n                      <TextField\r\n                        required\r\n                        fullWidth\r\n                        //autoFocus={bairrosCepUnico.length ? true : false}\r\n                        disabled={bairrosCepUnico.length ? false : true}                      \r\n                        name=\"RUA\"\r\n                        onChange={(e) => {\r\n                          setRua(e.target.value)\r\n                        }}\r\n                        value={rua}\r\n                        id=\"cadastroRua\"\r\n                        label=\"RUA\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Col>\r\n                    <Col xs={12} md={6} lg={6} >\r\n                      <TextField\r\n                        //autoFocus\r\n                        fullWidth\r\n                        required\r\n                        name=\"NUMERO\"\r\n                        value={numero}\r\n                        onChange={(e) => {\r\n                          setNumero(e.target.value)\r\n                        }}\r\n                        id=\"cadastroNumero\"\r\n                        label=\"NUMERO\"\r\n                        variant=\"outlined\"\r\n                        type=\"number\"\r\n                      />\r\n                    </Col>\r\n                    <Col xs={12} md={6} lg={6} >\r\n                      <TextField\r\n                        fullWidth\r\n                        value={complemento}\r\n                        onChange={(e) => {\r\n                          setComplemento(e.target.value)\r\n                        }}\r\n                        name=\"COMPLEMENTO\"\r\n                        id=\"cadastroComplemento\"\r\n                        label=\"COMPLEMENTO\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Col>\r\n                    <Col xs={12} md={6} lg={6} >\r\n                    <TextField\r\n                      fullWidth\r\n                      value={referencia}\r\n                      onChange={(e) => {\r\n                        setReferencia(e.target.value)\r\n                      }}\r\n                      name=\"REFERENCIA\"\r\n                      id=\"cadastroReferencia\"\r\n                      label=\"REFERENCIA\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Col></>)\r\n                  }                  \r\n                  </Row>)\r\n                //SEM CEP\r\n                : (<Row style={{\"textAlign\": \"center\"}}><Col xs={12} md={12} lg={12}>\r\n                  <Typography gutterBottom variant=\"h5\" >\r\n                    Digite o seu CEP\r\n                  </Typography>\r\n                </Col>\r\n                <Col xs={12} md={12} lg={12}>\r\n                  <TextField\r\n                    type=\"text\"\r\n                    // value={cep}\r\n                    disabled={cep.length >= 8 ? true : false}\r\n                    autoFocus\r\n                    fullWidth\r\n                    required\r\n                    name=\"CEP\"\r\n                    id=\"cepDigitando\"\r\n                    label=\"CEP\"\r\n                    variant=\"outlined\"\r\n                    onChange={digitandoCep}\r\n                  />\r\n                </Col>\r\n                <Col xs={12} md={12} lg={12} className=\"mt-3 mb-3\">\r\n                  <Button variant=\"contained\" onClick={naoSeiCep} color=\"default\" >\r\n                    Não Sei CEP \r\n                  </Button>\r\n                  </Col></Row>)\r\n              }              \r\n            </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={closeAdicionarEndereco} style={{\"color\": \"#dc3545\"}}>\r\n            Fechar\r\n          </Button>\r\n           {temCEP && (bairroCepUnicoSelecionado != null || bairrosCepUnico.length === 0 ) && ( <Button onClick={adicionarEndereco} style={{\"backgroundColor\": `#28a745`, \"color\":\"white\"}}>\r\n            Adicionar\r\n          </Button>)}\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n\r\n      </div>\r\n      <Rodape valor={\"Endereco\"}></Rodape>\r\n\r\n    </>\r\n  );\r\n}","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\StatusPedido\\index.js",["430","431","432","433","434","435"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport * as Sentry from \"@sentry/react\";\r\nimport { ObterStatusPedido, CancelarPedido } from \"../../services/functions\";\r\n\r\nimport PopUpDoacao from \"./popupDoacao\";\r\n\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Row, Container } from \"react-bootstrap\";\r\n\r\nimport Cabecalho from \"../Global/cabecalho\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nimport \"./styles.css\";\r\n\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport StepContent from \"@material-ui/core/StepContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 999,\r\n    color: \"#fff\",\r\n  },\r\n  alerta: {\r\n    zIndex: theme.zIndex.drawer + 9999,\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n/*\r\n    AGUARDANDO_ACEITACAO = 0;\r\n    ACEITO = 1;\r\n    CONFIRMACAO_VISUALIZADA = 2;\r\n    EM_ENTREGA = 3;\r\n    ENTREGUE = 4;\r\n    PAGO = 5;\r\n    PRONTO = 6;\r\n    EM_PRODUCAO = 7;\r\n    AGUARDANDO ATUALIZAR STATUS = 10;\r\n\r\n    CANCELADO_PELO_DISTRIBUIDOR = -1;\r\n    CANCELADO_PELO_CLIENTE = -2;\r\n    NAO_ENTREGUE = -3;\r\n    EXPIRADO = -4;\r\n    CHARGEBACK = -10;\r\n\r\n\r\n*/\r\n\r\nfunction getSteps(statusPedido) {\r\n  switch (statusPedido) {\r\n    case 10:\r\n    case 0:\r\n    case 1:\r\n    case 2:\r\n    case 3:\r\n    case 4:\r\n    case 5:\r\n    case 7:\r\n      return [\r\n        \"Pedido Enviado\",\r\n        \"Aguardando Aceitação\",\r\n        \"Aceito\",\r\n        \"Em Produção\",\r\n        \"Saiu para Entrega\",\r\n        \"Entregue\",\r\n      ];\r\n    case 6:\r\n      return [\r\n        \"Pedido Enviado\",\r\n        \"Aguardando Aceitação\",\r\n        \"Aceito\",\r\n        \"Em Produção\",\r\n        \"Pronto para Retirada\",\r\n        \"Entregue\",\r\n      ];\r\n    case -1:\r\n    case -2:\r\n    case -3:\r\n    case -4:\r\n    case -5:\r\n    case -10:\r\n      return [\r\n        \"Pedido Enviado\",\r\n        \"Aguardando Aceitação\",\r\n        \"Cancelado\",\r\n        \"Saiu para Entrega\",\r\n        \"Entregue\",\r\n      ];\r\n  }\r\n}\r\n\r\nfunction getStepContent(step, statusPedido) {\r\n  switch (statusPedido) {\r\n    case 0: //aguardando aceitação\r\n      return `Seu pedido foi enviado! Estamos aguardando o estabelecimento aceitar seu pedido!`;\r\n\r\n    case 10: //aguardando aceitação\r\n      return `Aguarde atualização do status`;\r\n\r\n    case 1: //aceito\r\n    case 2: //visualizado\r\n      return `Seu pedido foi aceito! Vamos enviar seu pedido para a produção!`;\r\n\r\n    case 3: //em entrega\r\n      return `Seu pedido foi produzido! Nosso entregador acabou de sair com seu pedido. Fique atento para receber!`;\r\n\r\n    case 4: //entregue\r\n      return `Seu pedido foi entregue! Obrigado pela preferencia, estamos sempre a disposição.`;\r\n\r\n    case 5: //pago\r\n      return `Seu pedido já foi pago!`;\r\n\r\n    case 6: //pronto pra retirada\r\n      return `Seu pedido está pronto para retirada!`;\r\n\r\n    case 7: //em producao\r\n      return `Seu pedido está em produção!`;\r\n\r\n    case -1:\r\n      return `O estabelecimento cancelou seu pedido!`;\r\n    case -2:\r\n      return `Você mesmo cancelou o pedido!`;\r\n    case -3:\r\n      return `O pedido não foi entregue!`;\r\n    case -4:\r\n      return `O pedido expirou por ficar muito tempo aguardando aceitação!`;\r\n    case -5:\r\n    case -10:\r\n      return `Houve uma falha no pagamento!`;\r\n    default:\r\n      return \"erro\";\r\n  }\r\n}\r\n\r\nexport default function Status() {\r\n  const { idPedido, statusInicial } = useParams();\r\n\r\n  if (parseInt(statusInicial) == 0) {\r\n    localStorage.setItem(\"atualizarUsuarioCF\", true);\r\n  }\r\n\r\n  const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"));\r\n  const history = useHistory();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const [statusPedido, setStatusPedido] = React.useState(\r\n    parseInt(statusInicial)\r\n  );\r\n\r\n  const [alert, setAlert] = useState({\r\n    status: false,\r\n    tipo: \"success\",\r\n    mesangem: \"\",\r\n  });\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  const alertStart = (msg, tipo) => {\r\n    setAlert({ status: true, tipo: tipo, mesangem: msg });\r\n  };\r\n\r\n  const alertClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setAlert({ status: false, tipo: alert.tipo, mesangem: alert.mesangem });\r\n  };\r\n\r\n  const verificarStatus = async () => {\r\n    try {\r\n      const response = await ObterStatusPedido(idPedido, aplicativoDados);\r\n\r\n      if (response.retornoErro) {\r\n        //algum erro\r\n        alertStart(response.mensagem, \"error\");\r\n      } else {\r\n        //tudo certo\r\n        if (response.status == 0) {\r\n          localStorage.setItem(\"atualizarUsuarioCF\", true);\r\n        }\r\n        setStatusPedido(response.status);\r\n      }\r\n    } catch (error) {\r\n      Sentry.captureMessage(\r\n        `NotFunctions verificarStatus ${window.location.hostname} - ${error}`\r\n      );\r\n      alertStart(\"Procure os desenvolvedores! Erro: \" + error.message, \"error\");\r\n    }\r\n  };\r\n\r\n  const cancelarPedido = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const data = {\r\n        id: idPedido,\r\n        token: `${process.env.REACT_APP_CLIENTEFIEL_TOKEN}`,\r\n        appNome: aplicativoDados.appNome,\r\n      };\r\n      const response = await CancelarPedido(data, aplicativoDados);\r\n\r\n      if (response.retornoErro) {\r\n        //algum erro\r\n        alertStart(response.mensagem, \"error\");\r\n        setLoading(false);\r\n      } else {\r\n        //tudo certo\r\n        alertStart(\"Pedido cancelado\", \"success\");\r\n\r\n        const pedidoCancelado = JSON.parse(\r\n          localStorage.getItem(\"PedidoCanceladoBackupCF\")\r\n        );\r\n        localStorage.setItem(\r\n          \"carrinhoCF\",\r\n          JSON.stringify(pedidoCancelado.carrinho)\r\n        );\r\n        localStorage.setItem(\r\n          \"usuarioCF\",\r\n          JSON.stringify(pedidoCancelado.usuario)\r\n        );\r\n        localStorage.removeItem(\"ultimoPedidoCF\");\r\n\r\n        setTimeout(() => {\r\n          history.goBack();\r\n        }, 3000);\r\n      }\r\n    } catch (error) {\r\n      Sentry.captureMessage(\r\n        `NotFunctions cancelarPedido ${window.location.hostname} - ${error}`\r\n      );\r\n      alertStart(\"Procure os desenvolvedores! Erro: \" + error.message, \"error\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      verificarStatus();\r\n    }, 10000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  var stepStatus = 0;\r\n  switch (statusPedido) {\r\n    case 10:\r\n      stepStatus = 0;\r\n      break;\r\n    case 0: //aguardando aceitação\r\n      stepStatus = 1; //aguardando aceitacao\r\n      break;\r\n    case 1: //aceito\r\n    case 2: //visualização\r\n      stepStatus = 2; //aceito\r\n      break;\r\n\r\n    case 5: //pago\r\n    case 7: //em producao\r\n      stepStatus = 3; //em producao\r\n      break;\r\n\r\n    case 3: //em entrega\r\n    case 6: //pronto pra retirada\r\n      stepStatus = 4; //saiu para entrega\r\n      break;\r\n\r\n    case 4: //entregue\r\n      stepStatus = 5; //entegue\r\n      break;\r\n\r\n    case -1:\r\n    case -2:\r\n    case -3:\r\n    case -4:\r\n    case -5:\r\n    case -10:\r\n      stepStatus = 2; //cancelado\r\n      break;\r\n  }\r\n\r\n  //const [activeStep, setActiveStep] = React.useState(stepStatus);\r\n\r\n  const steps = getSteps(statusPedido);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Cabecalho voltar={true} produtoNome={`#${idPedido}`}></Cabecalho>\r\n      {loading && (\r\n        <Backdrop className={classes.backdrop} open={loading}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      )}\r\n\r\n      <Snackbar\r\n        open={alert.status}\r\n        className={classes.alerta}\r\n        autoHideDuration={6000}\r\n        onClose={alertClose}\r\n      >\r\n        <Alert onClose={alertClose} severity={alert.tipo}>\r\n          {alert.mesangem}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <PopUpDoacao aplicativoDados={aplicativoDados} />\r\n\r\n      <div className=\"container container-statusPedido\">\r\n        <Container className=\"containerStatusPedido\">\r\n          <Row>\r\n            <div className={classes.root}>\r\n              <Stepper\r\n                activeStep={stepStatus}\r\n                orientation=\"vertical\"\r\n                style={{ backgroundColor: \"#f8f8f8\" }}\r\n              >\r\n                {steps.map((label, index) => (\r\n                  <Step key={label}>\r\n                    <StepLabel>{label}</StepLabel>\r\n                    <StepContent>\r\n                      <Typography>\r\n                        {getStepContent(index, statusPedido)}\r\n                      </Typography>\r\n                    </StepContent>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n            </div>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Typography\r\n              style={{ margin: \"2em 0.5em 0.5em 0.5em\", textAlign: \"center\" }}\r\n            >\r\n              Você só pode cancelar o pedido caso ele ainda não tenha sido\r\n              aceito.\r\n            </Typography>\r\n            <Button\r\n              fullWidth\r\n              disabled={!(statusPedido === 0 || statusPedido === 10)}\r\n              // variant=\"contained\"\r\n              onClick={cancelarPedido}\r\n              style={\r\n                !(statusPedido === 0 || statusPedido === 10)\r\n                  ? { margin: \"0em 0.5em 0.5em 0.5em\" }\r\n                  : { margin: \"0em 0.5em 0.5em 0.5em\", color: \"#dc3545\" }\r\n              }\r\n              className={classes.submit}\r\n            >\r\n              Cancelar Pedido\r\n            </Button>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\ConectarMesa\\index.js",["436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471"],"\r\nimport React, {Component, useState, useEffect } from 'react'\r\nimport QrReader from 'react-qr-reader'\r\nimport * as Sentry from \"@sentry/react\";\r\n\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport './styles.css';\r\nimport Cabecalho from '../Global/cabecalho';\r\nimport Rodape from '../Global/rodape';\r\nimport CropFreeIcon from '@material-ui/icons/CropFree';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DialpadIcon from '@material-ui/icons/Dialpad';\r\nimport { Card, Row, Col, Container, Carousel } from 'react-bootstrap';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nimport {\r\n    RegistrarSeloSeguro2,\r\n    identificarEstabelecimentoSelecionado,\r\n  } from '../../services/functions';\r\n\r\nimport api from '../../services/api';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\n\r\n//import ShareBtn from 'react-share-button';\r\n\r\n//import Loading from '../loading';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { AiOutlineQrcode } from 'react-icons/ai';\r\n\r\n//alert\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport flatMesa from '../../assets/flatMesa.png'\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\n\r\nfunction getMoney( str )\r\n{\r\n        return parseInt( str.replace(/[\\D]+/g,'') );\r\n}\r\nfunction formatReal( int )\r\n{\r\n        var tmp = int+'';\r\n        tmp = tmp.replace(/([0-9]{2})$/g, \",$1\");\r\n        if( tmp.length > 6 )\r\n                tmp = tmp.replace(/([0-9]{3}),([0-9]{2}$)/g, \".$1,$2\");\r\n\r\n        return tmp;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    fixed: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(10),\r\n        right: theme.spacing(3),\r\n        fontSize: \"30px\",\r\n    },\r\n    rootAlert: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n          marginTop: theme.spacing(2),\r\n        },\r\n      },\r\n      backdrop: {\r\n        zIndex: theme.zIndex.drawer + 9999,\r\n        color: '#fff',\r\n      },\r\n      root: {\r\n        minWidth: 275,\r\n        marginTop: '10px',\r\n      },\r\n      bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n      },\r\n      title: {\r\n        fontSize: 14,\r\n      },\r\n      pos: {\r\n        marginBottom: 12,\r\n      },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\n\r\nexport default function Perfil() {\r\n    const [estabelecimentoAtual, setEstabelecimentoAtual] = useState(JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\")));\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))\r\n    //console.log(\"usuarioLogado\", usuarioLogado)\r\n\r\n    const [configuracoesPerfilModal, setConfiguracoesPerfilModal] = React.useState(false);\r\n    const [qrCodeModal, setQrCodeModal] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false);\r\n    \r\n\r\n    \r\n    //alerts    \r\n    const [alert, setAlert] = useState({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n    \r\n    const alertStart = (msg, tipo) => {\r\n        setAlert({\"status\": true, \"tipo\": tipo, \"mesangem\": msg});\r\n    };\r\n\r\n    const alertClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setAlert({\"status\": false, \"tipo\": alert.tipo, \"mesangem\": alert.mesangem});\r\n    };\r\n\r\n\r\n\r\n \r\n    class QRCode extends Component {\r\n\r\n        state = {\r\n            result: 'No result',\r\n            leu: false,\r\n        }\r\n    \r\n        handleScan = async data =>  {           \r\n            if (data && !this.state.leu) {  \r\n                \r\n                this.setState({\r\n                    result: data,\r\n                    leu: true,\r\n                })\r\n\r\n                setQrCodeModal(false)         \r\n\r\n                //console.log(\"data\", data)\r\n\r\n                setLoading(true)\r\n                \r\n                try {\r\n                    if(data.includes(\"www.\") || data.includes(\"https\") || data.includes(\"http\")){\r\n                        window.location.href = data\r\n                    }\r\n                } catch (error) {\r\n                    setLoading(true)\r\n                    setQrCodeModal(false)        \r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        handleError = err => {\r\n            setQrCodeModal(false) \r\n            setLoading(false)\r\n            alertStart(\"Algo deu errado ao registrar selo  (handleError)\", \"error\")\r\n        }\r\n\r\n        render() {\r\n            if(qrCodeModal){\r\n                return (\r\n                    <div>\r\n                        <QrReader\r\n                            delay={300}\r\n                            onError={this.handleError}\r\n                            onScan={this.handleScan}\r\n                            style={{ width: '100%' }}\r\n                        />\r\n                        {/*<p>{this.state.result}</p>*/}\r\n                    </div>\r\n                )\r\n            }else{\r\n                return (\r\n                    <div>\r\n                        \r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {loading &&\r\n            (<Backdrop className={classes.backdrop} open={loading}>\r\n            <CircularProgress color=\"inherit\" />\r\n            </Backdrop>)}\r\n\r\n            <Snackbar open={alert.status} autoHideDuration={6000} onClose={alertClose}>\r\n                <Alert onClose={alertClose} severity={alert.tipo}>\r\n                {alert.mesangem}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n\r\n\r\n            <div className=\"container container-perfil\">\r\n                <Container className=\"\">\r\n                    <Row>\r\n                      <Col xs={12} md={12} lg={12}   style={{\"width\": \"100%\",  \"textAlign\": \"center\"}}>\r\n\r\n                           <img src={estabelecimentoAtual.urlLogo} style={{\"width\": \"100px\"}}/>\r\n                           <img src={flatMesa} style={{\"maxWidth\": \"100%\", \"maxHeight\": \"300px\"}}/>\r\n                           <Typography variant=\"h4\" component=\"h2\" style={{\"marginTop\": \"0.5em\"}}>\r\n                                Conecte-se a mesa\r\n                            </Typography>\r\n                            <Typography  style={{\"fontSize\": \"18px\", \"margin\": \"0.5em 0 0.5em 0\"}} >\r\n                                Na mesa do estabelecimento {estabelecimentoAtual.nome} provavelmente haverá um QRCode ou Código para se conectar a mesa.\r\n                            </Typography>\r\n\r\n                        </Col>\r\n\r\n                        <Col xs={12} md={12} lg={12}   style={{\"width\": \"100%\",  \"textAlign\": \"center\"}}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                margin=\"normal\"\r\n                                fullWidth\r\n                                id=\"codigo\"\r\n                                label=\"Código da Mesa\"\r\n                                name=\"codigo\"\r\n                                autoFocus\r\n                            />\r\n                        </Col>\r\n                        <Col xs={12} md={12} lg={12}   style={{\"width\": \"100%\",  \"textAlign\": \"center\"}}>\r\n                            <Button\r\n                                type=\"button\"\r\n                                fullWidth\r\n                                onClick={() => {\r\n                                    const codigo = document.getElementById(\"codigo\").value\r\n                                    var codigo2 = ((parseInt(codigo) - 5555) + \"\")\r\n                                    var mesa = codigo2.substring(0,1) + codigo2.substring(4,5)\r\n\r\n                                    if(mesa > 0 && mesa < 51){\r\n                                        setLoading(true)\r\n                                        window.location.href = `https://${aplicativoDados.urlAcesso}/?loja=${estabelecimentoAtual.id}&mesa=${mesa}`\r\n                                    }\r\n                                    console.log('mesa', mesa)\r\n                                }}\r\n                                variant=\"contained\"\r\n                                style={{\"margin\": \"0 0 1em 0\", \"background\":`${aplicativoDados.corSitePrimaria}`, \"color\":\"white\"}}\r\n                            >\r\n                            <DialpadIcon style={{\"fontSize\": \"25px\",\"marginRight\": \"10px\"}}/>  Enviar Código\r\n                            </Button>\r\n                        </Col>\r\n\r\n\r\n                        <Col xs={12} md={12} lg={12}   style={{\"width\": \"100%\",  \"textAlign\": \"center\"}}>\r\n                            <Button\r\n                                type=\"button\"\r\n                                fullWidth\r\n                                onClick={() => {\r\n                                    setQrCodeModal(true)\r\n                                }}\r\n                                variant=\"contained\"\r\n                                style={{\"background\":`${aplicativoDados.corSitePrimaria}`, \"color\":\"white\"}}\r\n                            >\r\n                            <AiOutlineQrcode style={{\"fontSize\": \"25px\",\"marginRight\": \"10px\"}}/>Ler QR Code\r\n                            </Button>\r\n                        </Col>\r\n\r\n                        <Col xs={12} md={12} lg={12}   style={{\"marginTop\":\"1em\", \"width\": \"100%\",  \"textAlign\": \"center\"}}>\r\n                            <Link to={`/login`} variant=\"body2\" style={{\"color\":`${aplicativoDados.corSitePrimaria}`}}>\r\n                                {\"Voltar\"}\r\n                            </Link>\r\n                        </Col>\r\n                        \r\n                        \r\n                    </Row>\r\n                    \r\n                </Container>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <Dialog\r\n              fullScreen={fullScreen}\r\n              open={qrCodeModal}\r\n              aria-labelledby=\"qrCodeModal\">\r\n\r\n              <DialogTitle id=\"qrCodeModal\">{\"QRCode de Mesa\"}</DialogTitle>\r\n              <DialogContent>\r\n\r\n                <QRCode/>\r\n\r\n              </DialogContent>\r\n              <DialogActions>                \r\n                <Button onClick={() => {\r\n                    setQrCodeModal(false)\r\n                }} >\r\n                  Cancelar\r\n                </Button>                \r\n              </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\HistoricoPedido\\index.js",["472","473","474","475","476"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './styles.css';\r\nimport Cabecalho from '../Global/cabecalho';\r\nimport Rodape from '../Global/rodape';\r\nimport * as Sentry from \"@sentry/react\";\r\nimport api from '../../services/api';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport {\r\n  identificarEstabelecimentoSelecionado,\r\n  ObterStatusPedido,\r\n} from '../../services/functions';\r\nimport {  Row, Col } from 'react-bootstrap';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n/* modal */\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\r\n\r\n\r\n//import Loading from '../loading';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  rootForm: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 999,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\n\r\nexport default function Estabelecimento() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  \r\n  const [loading, setLoading] = React.useState(false);\r\n  const usuarioLogado = JSON.parse(localStorage.getItem(\"usuarioCF\"))  \r\n  const usuarioPedidoMesa = JSON.parse(localStorage.getItem(\"usuarioPedidoMesaCF\"))\r\n  const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))\r\n  const [estabelecimentoAtual, setEstabelecimentoAtual] = useState(JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\")));\r\n  const [verPedido, setVerPedido] = useState(false)\r\n  const [verPedidoPosicao, setVerPedidoPosicao] = useState(0)\r\n  const pedidos  =  JSON.parse(localStorage.getItem('historicoPedidosCF'))\r\n\r\n  if(!pedidos || !pedidos.length){\r\n    history.push(`/delivery${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n  }\r\n  \r\n  const [alert, setAlert] = useState({\"status\": false, \"tipo\": \"success\", \"mesangem\": \"\"});\r\n  \r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  const alertStart = (msg, tipo) => {\r\n    setAlert({\"status\": true, \"tipo\": tipo, \"mesangem\": msg});\r\n  };\r\n\r\n  const alertClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n    setAlert({\"status\": false, \"tipo\": alert.tipo, \"mesangem\": alert.mesangem});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n\r\n      {\r\n        usuarioPedidoMesa?.logado\r\n        ?<Cabecalho mesaHistorico={usuarioLogado.cliente.nome} ></Cabecalho>\r\n        :<Cabecalho nomeUsuario={true}></Cabecalho>\r\n      }\r\n      <div className=\"container container-Estabelecimento\">\r\n        <Row>\r\n          <Col xs={12} md={12} lg={12} >\r\n            <Typography gutterBottom variant=\"h5\" >\r\n              Historico de Pedidos\r\n            </Typography>\r\n          </Col>\r\n\r\n          <Col xs={6} md={6} lg={6} style={{\"alignSelf\": \"center\"}}>            \r\n            {(!pedidos?.length)\r\n            ? 'Nenhum pedido registrado'\r\n            : (pedidos?.length > 1 \r\n              ? pedidos?.length + \" Pedidos realizados\" \r\n              : pedidos?.length + \" pedido realizado\")} \r\n          </Col>\r\n          <Col xs={6} md={6} lg={6} >            \r\n            <Button variant=\"contained\" onClick={() => { \r\n              localStorage.removeItem('historicoPedidosCF')\r\n              history.push(`/delivery${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n            }} style={{\"background\": `#28a745`, \"color\":\"white\"}} >\r\n              Novo Pedido \r\n            </Button>\r\n          </Col>\r\n\r\n          { pedidos?.length\r\n              //TEM ENDEREÇO\r\n              ? (pedidos.map( (pedido, index) => (\r\n                (<React.Fragment key={index}>\r\n                  <Col xs={12} md={6} lg={4} key={index} style={{\"margin\": \"1em 0\"}}  >\r\n                      \r\n                      <Card className={classes.root} style={{\"height\": \"100%\"}}>\r\n                        <CardActionArea  style={{ \"height\": \"calc(100% - 30px)\", \"flexFlow\": \"column-reverse\", \"alignItems\": \"normal\"}}>\r\n                          \r\n                          <Row style={{\"margin\":0,\"textAlign\": \"\", \"width\": \"100%\", \"padding\": \"1em\", \"alignItems\": \"center\"}}>\r\n                            <Col xs={3} md={3} lg={3} style={{\"padding\":0}}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                className={\"logoLojas\"}\r\n                                alt={pedido.estabelecimento.nome}\r\n                                image={pedido.estabelecimento.urlLogo}\r\n                                title={pedido.estabelecimento.nome}\r\n                              />\r\n                            </Col>\r\n                            <Col xs={9} md={9} lg={9}>\r\n                              \r\n\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" >\r\n                              {Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(pedido.valorTotal)} - {pedido.strDataRealizacao}\r\n                              </Typography>\r\n\r\n                              <Typography gutterBottom  component=\"h2\" >                    \r\n                              {pedido.estabelecimento.nome}\r\n                              </Typography>\r\n                              \r\n                              <Typography className={\"StatusEstabelecimento\"} variant=\"body2\"  component=\"p\">\r\n                              {pedido.estabelecimento.cidade.nome}\r\n                              </Typography>\r\n\r\n\r\n\r\n                              \r\n                            </Col>\r\n                          \r\n                          </Row>\r\n                          \r\n                          <CardContent style={{\"padding\": \"0 16px\"}}>\r\n                          \r\n                          </CardContent>\r\n                        </CardActionArea>\r\n                        <CardActions style={{\"padding\":\"0\"}}>\r\n      \r\n                          \r\n                          <Button size=\"small\" className={\"botaoVerde naoArredondado\"} \r\n                            onClick={() =>{\r\n                              setVerPedido(true)\r\n                              setVerPedidoPosicao(index)\r\n                            }}>\r\n                              VER PEDIDO\r\n                            </Button>\r\n      \r\n                            <Button size=\"small\" className={pedido.idAvaliacao ? \"botaoCinza naoArredondado\" : \"botaoVerde naoArredondado\"} \r\n                              disabled={pedido.idAvaliacao ? true : false}\r\n                              onClick={() =>{\r\n                                history.push(`/delivery/avaliacaoPedido/?Cliente=${btoa(pedido.cliente.id)}&Pedido=${btoa(pedido.id)}`)\r\n                            }}>\r\n                              {pedido.idAvaliacao ? \"Avaliado\" : \"Avaliar\"}\r\n                            </Button>\r\n                          \r\n                        </CardActions>\r\n                      </Card>\r\n                    </Col>\r\n              </React.Fragment>)  \r\n              )))\r\n              \r\n              //NAO TEM PEDIDO\r\n              : null\r\n              }   \r\n          \r\n\r\n              <Dialog\r\n                open={verPedido}\r\n                aria-labelledby=\"qrCodeModal\">\r\n\r\n                <DialogTitle id=\"qrCodeModal\">#{pedidos[verPedidoPosicao]?.id}</DialogTitle>\r\n                <DialogContent>\r\n                    \r\n                    \r\n                    <span>\r\n                      <ListItem button  >\r\n                        <ListItemAvatar>\r\n                          <Avatar>\r\n                            <MotorcycleIcon />\r\n                          </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={pedidos[verPedidoPosicao].end?.id === -1 ? \"Retirada\" : \"Entrega\"} />\r\n                        <ListItemText primary={Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(pedidos[verPedidoPosicao]?.taxaEntrega)} className=\"carrinho-produto-valor\"/>\r\n                      </ListItem>\r\n                      <Divider/>\r\n                    </span>\r\n\r\n\r\n\r\n                  {pedidos[verPedidoPosicao]?.itens?.map((item, index) => (                    \r\n                    <span key={index}>\r\n                      <ListItem button  >\r\n                        <ListItemAvatar>\r\n                          <Avatar>\r\n                            <ImageIcon />\r\n                          </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={item.quantidade + \"x \"+ item.produto.nome} />\r\n                        <ListItemText primary={Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(item.valorProdutoHistorico)} className=\"carrinho-produto-valor\"/>\r\n                      </ListItem>    \r\n\r\n                      {!!item.itensOpcaoProduto.length &&\r\n                        item.itensOpcaoProduto.map((adicional, index) =>(\r\n                          <List key={index} component=\"div\" disablePadding >\r\n                            <ListItem  className={classes.nested} style={{\"paddingTop\": \"0\"}}>\r\n                              <ListItemText secondary={adicional.quantidade + \"x \" + adicional.opcaoProduto.nome} />\r\n                            </ListItem>\r\n                          </List>     \r\n                        ))\r\n                      }\r\n                            \r\n                      <Divider/>\r\n                    </span>\r\n                    \r\n                  ))}\r\n\r\n\r\n                <Button >\r\n                  Total: {Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(pedidos[verPedidoPosicao]?.valorTotal)}\r\n                </Button>\r\n                </DialogContent>\r\n                <DialogActions>                \r\n                  <Button style={{\"color\":\"#dc3545\"}} onClick={() => {setVerPedido(false)}} >\r\n                    Cancelar\r\n                  </Button>    \r\n\r\n                  <Button style={{\"background\": `#28a745`, \"color\":\"white\"}} onClick={async () => \r\n                  {\r\n\r\n                    try {\r\n      \r\n                      const response = await ObterStatusPedido(pedidos[verPedidoPosicao].id, aplicativoDados)\r\n                  \r\n                      if(response.retornoErro){\r\n                        //algum erro\r\n                        alertStart(response.mensagem, \"error\")\r\n                      }else{ \r\n                        //tudo certo\r\n                        // history.push(`/delivery/pedido/${estabelecimentoAtual.id}/${pedidos[verPedidoPosicao].id}/${response.status}${identificarEstabelecimentoSelecionado(aplicativoDados)}`)\r\n                        history.push(`/delivery/pedido${identificarEstabelecimentoSelecionado(aplicativoDados, pedidos[verPedidoPosicao].id, response.status)}`)\r\n                      }\r\n                    }\r\n                    catch (error) {\r\n                        Sentry.captureMessage(`NotFunctions ObterStatusPedido ${window.location.hostname} - ${error}`);\r\n                        alertStart(\"Procure os desenvolvedores! Erro: \"+error.message, \"error\")    \r\n                    }\r\n                  \r\n                    setLoading(true)\r\n                   }}>\r\n                    Verificar Status\r\n                  </Button>            \r\n                </DialogActions>\r\n              </Dialog>\r\n          \r\n        </Row>\r\n\r\n\r\n\r\n      </div>\r\n      <Rodape valor=\"DeliveryHistorico\"></Rodape>\r\n\r\n    </>\r\n  );\r\n}","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Global\\cabecalho.js",[],"C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\estabelecimento.js",["477","478","479","480","481","482","483","484"],"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {  Row, Col, Container } from 'react-bootstrap';\r\nimport {\r\n  identificarEstabelecimentoSelecionado\r\n} from '../../services/functions';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\n\r\nimport './styles.css';\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    height: \"100%\",\r\n    display: 'block',\r\n    overflow: 'hidden',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nexport default function Cardapio(props) {\r\n  \r\n  const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"))\r\n  const cardapio = JSON.parse(localStorage.getItem(\"cardapioCF\"))\r\n  const carrinho = JSON.parse(localStorage.getItem(\"carrinhoCF\")) \r\n  const usuarioPedidoMesa = JSON.parse(localStorage.getItem(\"usuarioPedidoMesaCF\"))\r\n\r\n\r\n  const enderecoAtual = JSON.parse(localStorage.getItem(\"enderecoAtualCF\"));\r\n\r\n  const estabelecimentoAtual = JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\"));\r\n\r\n  const history = useHistory();\r\n\r\n  \r\n  const bannersStep = estabelecimentoAtual?.banners;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n \r\n\r\n\r\n  return (\r\n    <Container className=\"containerEstabelecimentoComponente\">\r\n\r\n \r\n\r\n      <div className=\"EstabelecimentoComponente row\">\r\n          <div className={\"divFundo \" + (bannersStep?.length > 0 ? \"\" : \" notBannerSlide\") }  style={{\"background\":  `${aplicativoDados?.corSiteSecundaria}`}}>\r\n          \r\n            {bannersStep?.length > 0\r\n            ? (\r\n              <AutoPlaySwipeableViews\r\n              style={{\"height\": \"100%\", \"overflow\": \"hidden\"}}\r\n              axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n              index={activeStep}\r\n              onChangeIndex={(step) => {setActiveStep(step)}}\r\n              enableMouseEvents\r\n            >\r\n              {bannersStep.map((step, index) => (\r\n                <div key={index}>\r\n                  {Math.abs(activeStep - index) <= 2 ? (\r\n                    <img alt={\"banner estabelecimento\"} className={classes.img} src={step}/>\r\n                  ) : null}\r\n                </div>\r\n              ))}\r\n            </AutoPlaySwipeableViews>\r\n            ) : null} \r\n          \r\n        </div>\r\n\r\n            \r\n    </div>\r\n    </Container>\r\n  );\r\n}","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Global\\rodape.js",["485","486","487","488"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n/*import { RiShoppingBag3Line, RiUserLocationLine, RiHeartLine } from 'react-icons/ri';\r\n\r\nimport { Navbar, Col, Row } from 'react-bootstrap';*/\r\nimport { identificarEstabelecimentoSelecionado } from \"../../services/functions\";\r\n\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport MotorcycleIcon from \"@material-ui/icons/Motorcycle\";\r\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport LoyaltyIcon from \"@material-ui/icons/Loyalty\";\r\nimport RoomServiceIcon from \"@material-ui/icons/RoomService\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  svg: {\r\n    color: \"#fff\",\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nexport default function Rodape(props) {\r\n  const [estabelecimentoAtual, setEstabelecimentoAtual] = React.useState(\r\n    JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\"))\r\n  );\r\n  const aplicativoDados = JSON.parse(localStorage.getItem(\"aplicativoCF\"));\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(props.valor);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const history = useHistory();\r\n\r\n  var scrollPos = 0;\r\n  window.addEventListener(\"scroll\", function () {\r\n    if (document.getElementsByClassName(\"RodapeComponente\").length > 0) {\r\n      if (document.body.getBoundingClientRect().top >= scrollPos) {\r\n        //document.getElementsByClassName('RodapeComponente')[0].style.height = \"56px\"\r\n        //document.getElementsByClassName('cabecalhoApp')[0].style.height = \"0px\"\r\n      } else {\r\n        //document.getElementsByClassName('cabecalhoApp')[0].style.height = \"56px\"\r\n        //document.getElementsByClassName('RodapeComponente')[0].style.height = \"0px\"\r\n      }\r\n      scrollPos = document.body.getBoundingClientRect().top;\r\n    }\r\n  });\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        light: `${\r\n          !aplicativoDados?.corSiteSecundaria ||\r\n          aplicativoDados?.corSiteSecundaria ===\r\n            aplicativoDados?.corSitePrimaria\r\n            ? \"#6c757d\"\r\n            : aplicativoDados?.corSiteSecundaria\r\n        }`,\r\n        main: `${\r\n          !aplicativoDados?.corSiteSecundaria ||\r\n          aplicativoDados?.corSiteSecundaria ===\r\n            aplicativoDados?.corSitePrimaria\r\n            ? \"#6c757d\"\r\n            : aplicativoDados?.corSiteSecundaria\r\n        }`,\r\n        // dark: will be calculated from palette.secondary.main,\r\n        contrastText: `#000000`,\r\n      },\r\n      secondary: {\r\n        light: `${\r\n          !aplicativoDados?.corSiteSecundaria\r\n            ? \"#6c757d\"\r\n            : aplicativoDados?.corSiteSecundaria\r\n        }`,\r\n        main: `${\r\n          !aplicativoDados?.corSitePrimaria\r\n            ? \"#6c757d\"\r\n            : aplicativoDados?.corSitePrimaria\r\n        }`,\r\n        contrastText: `#fff`,\r\n      },\r\n    },\r\n  });\r\n\r\n  const usuarioLogado = JSON.parse(localStorage.getItem(\"usuarioCF\"));\r\n  const usuarioPedidoMesa = JSON.parse(\r\n    localStorage.getItem(\"usuarioPedidoMesaCF\")\r\n  );\r\n\r\n  //PEDIDO MESA\r\n  if (usuarioPedidoMesa?.logado) {\r\n    return <div className=\"RodapeComponente\"></div>;\r\n  } else if (usuarioLogado?.logado) {\r\n    return (\r\n      <div className=\"RodapeComponente\" id=\"RodapeComponente\">\r\n        <ThemeProvider theme={theme}>\r\n          <BottomNavigation\r\n            value={value}\r\n            onChange={handleChange}\r\n            className={classes.root}\r\n            style={{ backgroundColor: `${aplicativoDados?.corSitePrimaria}` }}\r\n          >\r\n            <BottomNavigationAction\r\n              onClick={() => {\r\n                if (value !== \"Delivery\")\r\n                  history.push(\r\n                    `/delivery${identificarEstabelecimentoSelecionado(\r\n                      aplicativoDados\r\n                    )}`\r\n                  );\r\n              }}\r\n              label={\r\n                aplicativoDados.appNome === \"gessominas\"\r\n                  ? \"Produtos\"\r\n                  : \"Cardápio\"\r\n              }\r\n              className={classes.svg}\r\n              value=\"Delivery\"\r\n              icon={\r\n                aplicativoDados.appNome === \"gessominas\" ? (\r\n                  <ShoppingCartIcon />\r\n                ) : (\r\n                  <RoomServiceIcon />\r\n                )\r\n              }\r\n            />\r\n\r\n            {aplicativoDados?.apenasDelivery === false && (\r\n              <BottomNavigationAction\r\n                onClick={() => {\r\n                  if (value !== \"Fidelidade\")\r\n                    history.push(`/delivery/fidelidade`);\r\n                }}\r\n                label=\"Fidelidade\"\r\n                className={classes.svg}\r\n                value=\"Fidelidade\"\r\n                icon={<LoyaltyIcon />}\r\n              />\r\n            )}\r\n\r\n            {usuarioLogado.estabelecimentos.length > 1 ? (\r\n              <BottomNavigationAction\r\n                onClick={() => {\r\n                  if (value !== \"Estabelecimento\")\r\n                    history.push(`/estabelecimento`);\r\n                }}\r\n                label=\"Lojas\"\r\n                className={classes.svg}\r\n                value=\"Estabelecimento\"\r\n                icon={<StoreIcon />}\r\n              />\r\n            ) : (\r\n              <BottomNavigationAction\r\n                onClick={() => {\r\n                  if (value !== \"Endereco\")\r\n                    history.push(\r\n                      `/delivery/enderecos${identificarEstabelecimentoSelecionado(\r\n                        aplicativoDados\r\n                      )}`\r\n                    );\r\n                }}\r\n                label=\"Endereço\"\r\n                className={classes.svg}\r\n                value=\"Endereco\"\r\n                icon={<LocationOnIcon />}\r\n              />\r\n            )}\r\n\r\n            <BottomNavigationAction\r\n              onClick={() => {\r\n                if (value !== \"Perfil\") history.push(`/perfil`);\r\n              }}\r\n              label=\"Perfil\"\r\n              className={classes.svg}\r\n              value=\"Perfil\"\r\n              icon={<PersonIcon />}\r\n            />\r\n          </BottomNavigation>\r\n        </ThemeProvider>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"RodapeComponente\" id=\"RodapeComponente\">\r\n        <ThemeProvider theme={theme}>\r\n          <BottomNavigation\r\n            value={value}\r\n            onChange={handleChange}\r\n            className={classes.root}\r\n            style={{ backgroundColor: `${aplicativoDados?.corSitePrimaria}` }}\r\n          >\r\n            <BottomNavigationAction\r\n              onClick={() => {\r\n                if (\r\n                  JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\"))\r\n                    ?.id &&\r\n                  value !== \"Delivery\"\r\n                ) {\r\n                  history.push(\r\n                    `/delivery${identificarEstabelecimentoSelecionado(\r\n                      aplicativoDados\r\n                    )}`\r\n                  );\r\n                }\r\n              }}\r\n              label={\r\n                aplicativoDados.appNome === \"gessominas\"\r\n                  ? \"Produtos\"\r\n                  : \"Cardápio\"\r\n              }\r\n              className={classes.svg}\r\n              value=\"Delivery\"\r\n              icon={\r\n                aplicativoDados.appNome === \"gessominas\" ? (\r\n                  <ShoppingCartIcon />\r\n                ) : (\r\n                  <RoomServiceIcon />\r\n                )\r\n              }\r\n            />\r\n\r\n            {aplicativoDados?.estabelecimentos?.length > 1 && (\r\n              <BottomNavigationAction\r\n                onClick={() => {\r\n                  if (\r\n                    JSON.parse(localStorage.getItem(\"estabelecimentoAtualCF\"))\r\n                      ?.id &&\r\n                    value !== \"Estabelecimento\"\r\n                  ) {\r\n                    history.push(`/lojas`);\r\n                  }\r\n                }}\r\n                label=\"Lojas\"\r\n                className={classes.svg}\r\n                value=\"Estabelecimento\"\r\n                icon={<StoreIcon />}\r\n              />\r\n            )}\r\n\r\n            <BottomNavigationAction\r\n              onClick={() => {\r\n                if (value !== \"Login\") {\r\n                  if (\r\n                    !!JSON.parse(localStorage.getItem(\"carrinhoCF\"))?.pedido\r\n                      ?.itens\r\n                  ) {\r\n                    localStorage.setItem(\r\n                      \"backupItensCarrinhoCF\",\r\n                      JSON.stringify(\r\n                        JSON.parse(localStorage.getItem(\"carrinhoCF\"))?.pedido\r\n                          .itens\r\n                      )\r\n                    );\r\n                  }\r\n                  history.push(\r\n                    `/login${identificarEstabelecimentoSelecionado(\r\n                      aplicativoDados\r\n                    )}`\r\n                  );\r\n                }\r\n              }}\r\n              label=\"Login\"\r\n              className={classes.svg}\r\n              value=\"Login\"\r\n              icon={<PersonIcon />}\r\n            />\r\n          </BottomNavigation>\r\n        </ThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\imagensTematicas\\Revellion.js",["489","490","491","492","493","494","495","496","497"],"import React, {useState} from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {Card,  Row, Col } from 'react-bootstrap';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AlertFixo from '@material-ui/lab/Alert';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\n\r\nimport stories from '../../assets/geradorDeImagens/revellion/1920x1080.jpg';\r\nimport feed from '../../assets/geradorDeImagens/revellion/1500x1500.jpg';\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nfunction download(imageURL, nameDownload){  \r\n\r\n  const a = document.createElement(\"a\");\r\n  a.href = imageURL\r\n  a.download = nameDownload;\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n} \r\n\r\nexport default class Revellion extends React.Component {\r\n  \r\n  render() {\r\n\r\n    \r\n    const logoEstabelecimento = new Image();            \r\n    logoEstabelecimento.src = this.props.logo;\r\n    \r\n    \r\n    const backGroundImage1920x1080 = new Image();            \r\n    backGroundImage1920x1080.src = stories\r\n\r\n    const backGroundImage1500x1500 = new Image();            \r\n    backGroundImage1500x1500.src = feed\r\n\r\n    var s = 0;\r\n    var f = 0;\r\n    \r\n    function criarStories(){\r\n      if(s >= 2){\r\n        console.log('criar')\r\n        const canvas = document.createElement('canvas');\r\n        canvas.height = 1920;\r\n        canvas.width = 1080;\r\n        const context = canvas.getContext(\"2d\")\r\n        context.drawImage(backGroundImage1920x1080, 0, 0)\r\n        context.drawImage(logoEstabelecimento, 340, 250, 400, 400);\r\n\r\n        var texto = document.getElementById('opcoes').value\r\n\r\n        if(texto === \"LINK\"){\r\n          context.font = \"bold 55px Arial\";\r\n          context.fillStyle = \"BLACK\";\r\n          context.textAlign = \"center\";\r\n          texto = window.location.hostname\r\n          context.fillText(texto, 540, 1700);\r\n\r\n        }else if(texto.includes(\"CUPOM_\")){\r\n          context.font = \"bold 50px Arial\";\r\n          context.fillStyle = \"BLACK\";\r\n          context.textAlign = \"center\";\r\n          context.fillText(\"CUPOM\", 540, 1660);\r\n          \r\n          context.font = \"bold 80px Arial\";\r\n          context.fillStyle = \"BLACK\";\r\n          context.textAlign = \"center\";\r\n          texto = texto.replace(\"CUPOM_\", \"\")\r\n          context.fillText(texto, 540, 1740);\r\n\r\n        }else if(texto === \"FRASEPEQUENA\"){\r\n          context.font = \"bold 55px Arial\";\r\n          context.fillStyle = \"BLACK\";\r\n          context.textAlign = \"center\";\r\n          context.fillText(\"PARA VOCÊ E A\", 540, 1700);\r\n          context.fillText(\"TODOS OS SEUS FAMILIARES.\", 540, 1760);\r\n\r\n        }\r\n        \r\n\r\n        context.fill();\r\n        const dataURL = canvas.toDataURL()\r\n        document.getElementById('loadingImageStories').style.display = \"none\"\r\n        document.getElementById('imageGeradaStories').src = dataURL\r\n        document.getElementById('notLoadingImageStories').style.display = \"block\"\r\n        document.getElementById('notLoadingOpcoes').style.display = \"block\"\r\n\r\n        \r\n\r\n      } \r\n    }\r\n\r\n    function criarFeed(){\r\n      if(f >= 2){\r\n        console.log('criar')\r\n        const canvas = document.createElement('canvas');\r\n        canvas.height = 1500;\r\n        canvas.width = 1500;\r\n        const context = canvas.getContext(\"2d\")\r\n        context.drawImage(backGroundImage1500x1500, 0, 0)\r\n        context.drawImage(logoEstabelecimento, 600, 100, 300, 300);\r\n\r\n\r\n        var texto = document.getElementById('opcoes').value\r\n\r\n        if(texto === \"LINK\"){\r\n          context.font = \"bold 75px Arial\";\r\n          context.fillStyle = \"BLACK\";\r\n          context.textAlign = \"center\";\r\n          texto = window.location.hostname\r\n          context.fillText(texto, 750, 1375);\r\n\r\n        }else if(texto.includes(\"CUPOM_\")){\r\n          context.font = \"bold 70px Arial\";\r\n          context.fillStyle = \"BLACK\";\r\n          context.textAlign = \"center\";\r\n          context.fillText(\"CUPOM\", 750, 1330);\r\n          \r\n          context.font = \"bold 100px Arial\";\r\n          context.fillStyle = \"BLACK\";\r\n          context.textAlign = \"center\";\r\n          texto = texto.replace(\"CUPOM_\", \"\")\r\n          context.fillText(texto, 750, 1430);\r\n\r\n        }else if(texto === \"FRASEPEQUENA\"){\r\n          context.font = \"bold 70px Arial\";\r\n          context.fillStyle = \"BLACK\";\r\n          context.textAlign = \"center\";\r\n          context.fillText(\"PARA VOCÊ E A\", 750, 1330);\r\n\r\n          context.font = \"bold 80px Arial\";\r\n          context.fillText(\"TODOS OS SEUS FAMILIARES.\", 750, 1430);\r\n\r\n        }\r\n        \r\n\r\n\r\n        \r\n\r\n        context.fill();\r\n        const dataURL = canvas.toDataURL()\r\n        document.getElementById('loadingImageFeed').style.display = \"none\"\r\n        document.getElementById('imageGeradaFeed').src = dataURL\r\n        document.getElementById('notLoadingImageFeed').style.display = \"block\"\r\n        document.getElementById('notLoadingOpcoes').style.display = \"block\"\r\n\r\n      }\r\n    }\r\n\r\n\r\n    backGroundImage1920x1080.onload = () => {s++; criarStories()}\r\n\r\n    backGroundImage1500x1500.onload = () => {f++; criarFeed()}\r\n\r\n    logoEstabelecimento.onload = () => {s++; f++; criarStories(); criarFeed()}\r\n\r\n\r\n    return(\r\n      <Row>\r\n        <Col xs={12} md={12} lg={12} style={{\"margin\": \"1em 0\"}}>\r\n        <AlertFixo severity={\"warning\"}>\r\n          Lembre-se: Caso seja um cupom, você precisa criar no sistema administrativo.\r\n        </AlertFixo>    \r\n        </Col>\r\n        <Col xs={12} md={12} lg={12} style={{\"margin\": \"1em 0\"}}>\r\n          <span id=\"notLoadingOpcoes\" style={{\"display\": \"none\"}}>\r\n            <NativeSelect\r\n              fullWidth\r\n              defaultValue={`LINK`}\r\n              onChange={() => {\r\n                criarFeed()\r\n                criarStories()\r\n              }}\r\n              id=\"opcoes\"\r\n              input={<BootstrapInput />}\r\n            >\r\n              <option value={`LINK`}>LINK DO SITE</option>\r\n              <option value={'CUPOM_ANONOVO10%'}>CUPOM 10% DE DESCONTO</option>\r\n              <option value={'CUPOM_ANONOVO10REAIS'}>CUPOM R$ 10,00 DE DESCONTO</option>\r\n              <option value={'CUPOM_ANONOVOFRETE'}>CUPOM FRETE GRÁTIS</option>\r\n              <option value={`FRASEPEQUENA`}>FRASE PEQUENA</option>\r\n            </NativeSelect>\r\n          </span>\r\n        </Col>\r\n        <Col xs={12} md={6} lg={6} style={{\"margin\": \"1em 0\"}}>\r\n          <CircularProgress id=\"loadingImageStories\"  color=\"inherit\" />\r\n          <span id=\"notLoadingImageStories\" style={{\"display\": \"none\"}}>\r\n          <Button\r\n              fullWidth\r\n              onClick={async () => {\r\n                download(await document.getElementById('imageGeradaStories').src, \"blackFriday-1080x1920\")  \r\n              }}\r\n              variant=\"contained\">Baixar Stories</Button>\r\n            <img ref=\"image\" style={{\"width\": \"100%\"}} id=\"imageGeradaStories\" className=\"hidden\" />\r\n           \r\n          </span>\r\n         \r\n        </Col>\r\n        <Col xs={12} md={6} lg={6} style={{\"margin\": \"1em 0\"}}>\r\n          <CircularProgress id=\"loadingImageFeed\" color=\"inherit\" />\r\n          <span id=\"notLoadingImageFeed\" style={{\"display\": \"none\"}}>\r\n            <Button\r\n              fullWidth\r\n              onClick={async () => {\r\n                download(await document.getElementById('imageGeradaFeed').src, \"blackFriday-1500x1500\")  \r\n              }}\r\n              variant=\"contained\">Baixar Feed</Button>\r\n            <img ref=\"image\" style={{\"width\": \"100%\"}} id=\"imageGeradaFeed\" className=\"hidden\" />\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\imagensTematicas\\Natal.js",["498","499","500","501","502","503","504","505","506"],"import React, {useState} from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {Card,  Row, Col } from 'react-bootstrap';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AlertFixo from '@material-ui/lab/Alert';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\n\r\nimport stories from '../../assets/geradorDeImagens/natal/1920x1080.jpg';\r\nimport feed from '../../assets/geradorDeImagens/natal/1500x1500.jpg';\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nfunction download(imageURL, nameDownload){  \r\n\r\n  const a = document.createElement(\"a\");\r\n  a.href = imageURL\r\n  a.download = nameDownload;\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n} \r\n\r\nexport default class Natal extends React.Component {\r\n  \r\n  render() {\r\n\r\n    \r\n    const logoEstabelecimento = new Image();            \r\n    logoEstabelecimento.src = this.props.logo;\r\n    \r\n    \r\n    const backGroundImage1920x1080 = new Image();            \r\n    backGroundImage1920x1080.src = stories\r\n\r\n    const backGroundImage1500x1500 = new Image();            \r\n    backGroundImage1500x1500.src = feed\r\n\r\n    var s = 0;\r\n    var f = 0;\r\n    \r\n    function criarStories(){\r\n      if(s >= 2){\r\n        console.log('criar')\r\n        const canvas = document.createElement('canvas');\r\n        canvas.height = 1920;\r\n        canvas.width = 1080;\r\n        const context = canvas.getContext(\"2d\")\r\n        context.drawImage(backGroundImage1920x1080, 0, 0)\r\n        context.drawImage(logoEstabelecimento, 340, 150, 400, 400);\r\n\r\n        context.font = \"bold 55px Arial\";\r\n        context.fillStyle = \"WHITE\";\r\n        context.textAlign = \"center\";\r\n\r\n        var texto = document.getElementById('opcoes').value\r\n\r\n        if(texto === \"LINK\"){\r\n          context.font = \"bold 55px Arial\";\r\n          context.fillStyle = \"white\";\r\n          context.textAlign = \"center\";\r\n          texto = window.location.hostname\r\n          context.fillText(texto, 540, 1800);\r\n\r\n        }else if(texto.includes(\"CUPOM_\")){\r\n          context.font = \"bold 50px Arial\";\r\n          context.fillStyle = \"white\";\r\n          context.textAlign = \"center\";\r\n          context.fillText(\"CUPOM\", 540, 1760);\r\n          \r\n          context.font = \"bold 80px Arial\";\r\n          context.fillStyle = \"white\";\r\n          context.textAlign = \"center\";\r\n          texto = texto.replace(\"CUPOM_\", \"\")\r\n          context.fillText(texto, 540, 1840);\r\n\r\n        }else if(texto === \"FRASEPEQUENA\"){\r\n          context.font = \"bold 55px Arial\";\r\n          context.fillStyle = \"white\";\r\n          context.textAlign = \"center\";\r\n          context.fillText(\"PARA VOCÊ E A\", 540, 1800);\r\n          context.fillText(\"TODOS OS SEUS FAMILIARES.\", 540, 1860);\r\n\r\n        }\r\n        \r\n\r\n        context.fill();\r\n        const dataURL = canvas.toDataURL()\r\n        document.getElementById('loadingImageStories').style.display = \"none\"\r\n        document.getElementById('imageGeradaStories').src = dataURL\r\n        document.getElementById('notLoadingImageStories').style.display = \"block\"\r\n        document.getElementById('notLoadingOpcoes').style.display = \"block\"\r\n\r\n        \r\n\r\n      } \r\n    }\r\n\r\n    function criarFeed(){\r\n      if(f >= 2){\r\n        console.log('criar')\r\n        const canvas = document.createElement('canvas');\r\n        canvas.height = 1500;\r\n        canvas.width = 1500;\r\n        const context = canvas.getContext(\"2d\")\r\n        context.drawImage(backGroundImage1500x1500, 0, 0)\r\n        context.drawImage(logoEstabelecimento, 840, 290, 450, 450);\r\n\r\n        var texto = document.getElementById('opcoes').value\r\n\r\n        if(texto === \"LINK\"){\r\n          context.font = \"bold 75px Arial\";\r\n          context.fillStyle = \"WHITE\";\r\n          context.textAlign = \"center\";\r\n          texto = window.location.hostname\r\n          context.fillText(texto, 750, 1375);\r\n\r\n        }else if(texto.includes(\"CUPOM_\")){\r\n          context.font = \"bold 70px Arial\";\r\n          context.fillStyle = \"WHITE\";\r\n          context.textAlign = \"center\";\r\n          context.fillText(\"CUPOM\", 750, 1330);\r\n          \r\n          context.font = \"bold 100px Arial\";\r\n          context.fillStyle = \"WHITE\";\r\n          context.textAlign = \"center\";\r\n          texto = texto.replace(\"CUPOM_\", \"\")\r\n          context.fillText(texto, 750, 1430);\r\n\r\n        }else if(texto === \"FRASEPEQUENA\"){\r\n          context.font = \"bold 70px Arial\";\r\n          context.fillStyle = \"WHITE\";\r\n          context.textAlign = \"center\";\r\n          context.fillText(\"PARA VOCÊ E A\", 750, 1330);\r\n\r\n          context.font = \"bold 80px Arial\";\r\n          context.fillText(\"TODOS OS SEUS FAMILIARES.\", 750, 1430);\r\n\r\n        }\r\n        \r\n\r\n        context.fill();\r\n        const dataURL = canvas.toDataURL()\r\n        document.getElementById('loadingImageFeed').style.display = \"none\"\r\n        document.getElementById('imageGeradaFeed').src = dataURL\r\n        document.getElementById('notLoadingImageFeed').style.display = \"block\"\r\n        document.getElementById('notLoadingOpcoes').style.display = \"block\"\r\n\r\n      }\r\n    }\r\n\r\n\r\n    backGroundImage1920x1080.onload = () => {s++; criarStories()}\r\n\r\n    backGroundImage1500x1500.onload = () => {f++; criarFeed()}\r\n\r\n    logoEstabelecimento.onload = () => {s++; f++; criarStories(); criarFeed()}\r\n\r\n\r\n    return(\r\n      <Row>\r\n        <Col xs={12} md={12} lg={12} style={{\"margin\": \"1em 0\"}}>\r\n        <AlertFixo severity={\"warning\"}>\r\n          Lembre-se: Caso seja um cupom, você precisa criar no sistema administrativo.\r\n        </AlertFixo>    \r\n        </Col>\r\n        <Col xs={12} md={12} lg={12} style={{\"margin\": \"1em 0\"}}>\r\n          <span id=\"notLoadingOpcoes\" style={{\"display\": \"none\"}}>\r\n            <NativeSelect\r\n              fullWidth\r\n              defaultValue={`LINK`}\r\n              onChange={() => {\r\n                criarFeed()\r\n                criarStories()\r\n              }}\r\n              id=\"opcoes\"\r\n              input={<BootstrapInput />}\r\n            >\r\n              <option value={`LINK`}>LINK DO SITE</option>\r\n              <option value={'CUPOM_NATAL10%'}>CUPOM 10% DE DESCONTO</option>\r\n              <option value={'CUPOM_NATAL10REAIS'}>CUPOM R$ 10,00 DE DESCONTO</option>\r\n              <option value={'CUPOM_NATALFRETEGRATIS'}>CUPOM FRETE GRÁTIS</option>\r\n              <option value={`FRASEPEQUENA`}>FRASE PEQUENA</option>\r\n            </NativeSelect>\r\n          </span>\r\n        </Col>\r\n        <Col xs={12} md={6} lg={6} style={{\"margin\": \"1em 0\"}}>\r\n          <CircularProgress id=\"loadingImageStories\"  color=\"inherit\" />\r\n          <span id=\"notLoadingImageStories\" style={{\"display\": \"none\"}}>\r\n          <Button\r\n              fullWidth\r\n              onClick={async () => {\r\n                download(await document.getElementById('imageGeradaStories').src, \"blackFriday-1080x1920\")  \r\n              }}\r\n              variant=\"contained\">Baixar Stories</Button>\r\n            <img ref=\"image\" style={{\"width\": \"100%\"}} id=\"imageGeradaStories\" className=\"hidden\" />\r\n           \r\n          </span>\r\n         \r\n        </Col>\r\n        <Col xs={12} md={6} lg={6} style={{\"margin\": \"1em 0\"}}>\r\n          <CircularProgress id=\"loadingImageFeed\" color=\"inherit\" />\r\n          <span id=\"notLoadingImageFeed\" style={{\"display\": \"none\"}}>\r\n            <Button\r\n              fullWidth\r\n              onClick={async () => {\r\n                download(await document.getElementById('imageGeradaFeed').src, \"blackFriday-1500x1500\")  \r\n              }}\r\n              variant=\"contained\">Baixar Feed</Button>\r\n            <img ref=\"image\" style={{\"width\": \"100%\"}} id=\"imageGeradaFeed\" className=\"hidden\" />\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\imagensTematicas\\BlackFriday.js",["507","508","509","510","511","512","513","514","515"],"import React, {useState} from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {Card,  Row, Col } from 'react-bootstrap';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\n\r\nimport stories from '../../assets/geradorDeImagens/blackFriday/1920x1080.jpg';\r\nimport feed from '../../assets/geradorDeImagens/blackFriday/1500x1500.jpg';\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nfunction download(imageURL, nameDownload){  \r\n\r\n  const a = document.createElement(\"a\");\r\n  a.href = imageURL\r\n  a.download = nameDownload;\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n} \r\n\r\nexport default class BlackFriday extends React.Component {\r\n  \r\n  render() {\r\n\r\n    \r\n    const logoEstabelecimento = new Image();            \r\n    logoEstabelecimento.src = this.props.logo;\r\n    \r\n    \r\n    const backGroundImage1920x1080 = new Image();            \r\n    backGroundImage1920x1080.src = stories\r\n\r\n    const backGroundImage1500x1500 = new Image();            \r\n    backGroundImage1500x1500.src = feed\r\n\r\n    var s = 0;\r\n    var f = 0;\r\n    \r\n    function criarStories(){\r\n      if(s >= 2){\r\n        console.log('criar')\r\n        const canvas = document.createElement('canvas');\r\n        canvas.height = 1920;\r\n        canvas.width = 1080;\r\n        const context = canvas.getContext(\"2d\")\r\n        context.drawImage(backGroundImage1920x1080, 0, 0)\r\n        context.drawImage(logoEstabelecimento, 340, 150, 400, 400);\r\n\r\n        context.font = \"bold 65px Arial\";\r\n        context.fillStyle = \"BLACK\";\r\n        context.textAlign = \"center\";\r\n        context.fillText(document.getElementById('opcaoBlackFriday').value, 540, 1580);\r\n\r\n        context.fill();\r\n        const dataURL = canvas.toDataURL()\r\n        document.getElementById('loadingImageStories').style.display = \"none\"\r\n        document.getElementById('imageGeradaStories').src = dataURL\r\n        document.getElementById('notLoadingImageStories').style.display = \"block\"\r\n        document.getElementById('notLoadingOpcoes').style.display = \"block\"\r\n\r\n        \r\n\r\n      } \r\n    }\r\n\r\n    function criarFeed(){\r\n      if(f >= 2){\r\n        console.log('criar')\r\n        const canvas = document.createElement('canvas');\r\n        canvas.height = 1500;\r\n        canvas.width = 1500;\r\n        const context = canvas.getContext(\"2d\")\r\n        context.drawImage(backGroundImage1500x1500, 0, 0)\r\n        context.drawImage(logoEstabelecimento, 600, 90, 300, 300);\r\n\r\n        context.font = \"bold 65px Arial\";\r\n        context.fillStyle = \"BLACK\";\r\n        context.textAlign = \"center\";\r\n        context.fillText(document.getElementById('opcaoBlackFriday').value, 750, 1345);\r\n\r\n        context.fill();\r\n        const dataURL = canvas.toDataURL()\r\n        document.getElementById('loadingImageFeed').style.display = \"none\"\r\n        document.getElementById('imageGeradaFeed').src = dataURL\r\n        document.getElementById('notLoadingImageFeed').style.display = \"block\"\r\n        document.getElementById('notLoadingOpcoes').style.display = \"block\"\r\n\r\n      }\r\n    }\r\n\r\n\r\n    backGroundImage1920x1080.onload = () => {s++; criarStories()}\r\n\r\n    backGroundImage1500x1500.onload = () => {f++; criarFeed()}\r\n\r\n    logoEstabelecimento.onload = () => {s++; f++; criarStories(); criarFeed()}\r\n\r\n\r\n    return(\r\n      <Row>\r\n        <Col xs={12} md={12} lg={12} style={{\"margin\": \"1em 0\"}}>\r\n          <span id=\"notLoadingOpcoes\" style={{\"display\": \"none\"}}>\r\n            <NativeSelect\r\n              fullWidth\r\n              onChange={() => {\r\n                criarFeed()\r\n                criarStories()\r\n              }}\r\n              id=\"opcaoBlackFriday\"\r\n              input={<BootstrapInput />}\r\n            >\r\n              <option value={'BLACKFRIDAY10%'}>CUPOM 10% DE DESCONTO</option>\r\n              <option value={'BLACKFRIDAY10R$'}>CUPOM R$ 10,00 DE DESCONTO</option>\r\n              <option value={'BLACKFRIDAYFRETE'}>CUPOM FRETE GRÁTIS</option>\r\n            </NativeSelect>\r\n          </span>\r\n        </Col>\r\n        <Col xs={12} md={6} lg={6} style={{\"margin\": \"1em 0\"}}>\r\n          <CircularProgress id=\"loadingImageStories\"  color=\"inherit\" />\r\n          <span id=\"notLoadingImageStories\" style={{\"display\": \"none\"}}>\r\n          <Button\r\n              fullWidth\r\n              onClick={async () => {\r\n                download(await document.getElementById('imageGeradaStories').src, \"blackFriday-1080x1920\")  \r\n              }}\r\n              variant=\"contained\">Baixar Stories</Button>\r\n            <img ref=\"image\" style={{\"width\": \"100%\"}} id=\"imageGeradaStories\" className=\"hidden\" />\r\n           \r\n          </span>\r\n         \r\n        </Col>\r\n        <Col xs={12} md={6} lg={6} style={{\"margin\": \"1em 0\"}}>\r\n          <CircularProgress id=\"loadingImageFeed\" color=\"inherit\" />\r\n          <span id=\"notLoadingImageFeed\" style={{\"display\": \"none\"}}>\r\n            <Button\r\n              fullWidth\r\n              onClick={async () => {\r\n                download(await document.getElementById('imageGeradaFeed').src, \"blackFriday-1500x1500\")  \r\n              }}\r\n              variant=\"contained\">Baixar Feed</Button>\r\n            <img ref=\"image\" style={{\"width\": \"100%\"}} id=\"imageGeradaFeed\" className=\"hidden\" />\r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\imagensTematicas\\DiaDosPais.js",["516","517","518","519"],"import React, {useState} from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {Card,  Row, Col } from 'react-bootstrap';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport stories_diaDosPais from '../../assets/geradorDeImagens/diaDosPais/1920x1080.jpg';\r\nimport stories_bigode_diaDosPais from '../../assets/geradorDeImagens/diaDosPais/bigode1920x1080.png';\r\nimport feed_diaDosPais from '../../assets/geradorDeImagens/diaDosPais/1500x1500.jpg';\r\nimport feed_bigode_diaDosPais from '../../assets/geradorDeImagens/diaDosPais/bigode1500x1500.png';\r\n\r\nfunction download(imageURL, nameDownload){  \r\n\r\n  const a = document.createElement(\"a\");\r\n  a.href = imageURL\r\n  a.download = nameDownload;\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n} \r\n\r\nexport default class DiaDosPais extends React.Component {\r\n  \r\n  componentDidMount() {\r\n    const logoEstabelecimento = new Image();            \r\n    logoEstabelecimento.src = this.props.logo;\r\n    \r\n    \r\n    const backGroundImage1920x1080 = new Image();            \r\n    backGroundImage1920x1080.src = stories_diaDosPais\r\n    const bigode1920x1080 = new Image();            \r\n    bigode1920x1080.src = stories_bigode_diaDosPais\r\n\r\n    const backGroundImage1500x1500 = new Image();            \r\n    backGroundImage1500x1500.src = feed_diaDosPais\r\n    const bigode1500x1500 = new Image();            \r\n    bigode1500x1500.src = feed_bigode_diaDosPais\r\n\r\n    var s = 0;\r\n    var f = 0;\r\n    \r\n    function criarStories(){\r\n      if(s >= 3){\r\n        console.log('criar')\r\n        const canvas = document.createElement('canvas');\r\n        canvas.height = 1920;\r\n        canvas.width = 1080;\r\n        const context = canvas.getContext(\"2d\")\r\n        context.drawImage(backGroundImage1920x1080, 0, 0)\r\n        context.drawImage(logoEstabelecimento, 395, 90, 300, 300);\r\n        context.drawImage(bigode1920x1080, 0, 0)\r\n        context.fill();\r\n        const dataURL = canvas.toDataURL()\r\n        document.getElementById('loadingImageStories').style.display = \"none\"\r\n        document.getElementById('imageGeradaStories').src = dataURL\r\n        document.getElementById('notLoadingImageStories').style.display = \"block\"\r\n\r\n      }\r\n    }\r\n\r\n    function criarFeed(){\r\n      if(f >= 3){\r\n        console.log('criar')\r\n        const canvas = document.createElement('canvas');\r\n        canvas.height = 1500;\r\n        canvas.width = 1500;\r\n        const context = canvas.getContext(\"2d\")\r\n        context.drawImage(backGroundImage1500x1500, 0, 0)\r\n        context.drawImage(logoEstabelecimento, 580, 90, 350, 350);\r\n        context.drawImage(bigode1500x1500, 0, 0)\r\n        context.fill();\r\n        const dataURL = canvas.toDataURL()\r\n        document.getElementById('loadingImageFeed').style.display = \"none\"\r\n        document.getElementById('imageGeradaFeed').src = dataURL\r\n        document.getElementById('notLoadingImageFeed').style.display = \"block\"\r\n      }\r\n    }\r\n\r\n\r\n    backGroundImage1920x1080.onload = () => {s++; criarStories()}\r\n    bigode1920x1080.onload = () => {s++; criarStories()}\r\n\r\n    backGroundImage1500x1500.onload = () => {f++; criarFeed()}\r\n    bigode1500x1500.onload = () => {f++; criarFeed()}\r\n\r\n    logoEstabelecimento.onload = () => {s++; f++; criarStories(); criarFeed()}\r\n\r\n    \r\n  }\r\n  render() {\r\n\r\n    return(\r\n      <Row>\r\n        <Col xs={12} md={6} lg={6} style={{\"margin\": \"1em 0\"}}>\r\n          <CircularProgress id=\"loadingImageStories\"  color=\"inherit\" />\r\n          <span id=\"notLoadingImageStories\" style={{\"display\": \"none\"}}>\r\n          <Button\r\n              fullWidth\r\n              onClick={async () => {\r\n                download(await document.getElementById('imageGeradaStories').src, \"diaDosPais-1080x1920\")  \r\n              }}\r\n              variant=\"contained\">Baixar Stories</Button>\r\n            <img ref=\"image\" style={{\"width\": \"100%\"}} id=\"imageGeradaStories\" className=\"hidden\" />\r\n           \r\n          </span>\r\n         \r\n        </Col>\r\n        <Col xs={12} md={6} lg={6} style={{\"margin\": \"1em 0\"}}>\r\n          <CircularProgress id=\"loadingImageFeed\" color=\"inherit\" />\r\n          <span id=\"notLoadingImageFeed\" style={{\"display\": \"none\"}}>\r\n            <Button\r\n              fullWidth\r\n              onClick={async () => {\r\n                download(await document.getElementById('imageGeradaFeed').src, \"diaDosPais-1500x1500\")  \r\n              }}\r\n              variant=\"contained\">Baixar Feed</Button>\r\n            <img ref=\"image\" style={{\"width\": \"100%\"}} id=\"imageGeradaFeed\" className=\"hidden\" />\r\n            \r\n          </span>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\cardapio.js",["520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602"],"C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\infoCardapio.js",["603","604","605","606","607"],"C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\opcoesProdutos.js",["608","609","610","611"],"import React from \"react\"\r\nimport {Card,  Row, Col, Container } from 'react-bootstrap';\r\nimport AlertFixo from '@material-ui/lab/Alert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { TramRounded } from \"@material-ui/icons\";\r\n\r\nexport default function opcoesProdutos(props){\r\n\r\n    const {\r\n        classes,\r\n        procurarProduto,\r\n        cardapio\r\n    } = props\r\n\r\n    return(\r\n        <>\r\n            <Row style={{\"textAlign\":\"center\"}} id=\"campoOpcoesProdutos\">\r\n              {/* <Col xs={12} md={9} lg={9}>\r\n                <div className={classes.search}>\r\n                  <div className={classes.searchIcon}>\r\n                    <SearchIcon />\r\n                  </div>\r\n                  <InputBase\r\n                    placeholder=\"Procurar...\"\r\n                    onChange={procurarProduto}\r\n                    style={{\"display\": \"block\"}}\r\n                    classes={{\r\n                      root: classes.inputRoot,\r\n                      input: classes.inputInput,\r\n                    }}\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                  />\r\n                </div>\r\n              \r\n              </Col> */}\r\n              <Col xs={9} md={9} lg={9} style={{\"textAlign\":\"left\"}} >\r\n                 <span>\r\n                  {\r\n                      cardapio.minimoEntregaGratis && cardapio.minimoEntregaGratis < 9000\r\n                        ? `Mínimo para entrega grátis: ${Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(cardapio.minimoEntregaGratis)}`\r\n                        : !cardapio.valorMinimoPedido\r\n                            ? \"Não possui pedido mínimo\"\r\n                            : `Pedido mínimo: ${Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(cardapio.valorMinimoPedido)}`\r\n                  } \r\n                 </span>\r\n\r\n                 <InputBase\r\n                      placeholder=\"Procurar...\"\r\n                      onChange={procurarProduto}\r\n                      style={{\"display\": \"block\"}}\r\n                      classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                      }}\r\n                      id=\"InputPesquisar\"\r\n                      className=\"inputSearch\"\r\n                      inputProps={{ 'aria-label': 'search' }}\r\n                    /> \r\n              </Col>\r\n              <Col xs={3} md={3} lg={3} style={{\"textAlign\":\"right\"}} \r\n                onClick={() => {\r\n                  document.getElementsByClassName('inputSearch')[0].children[0].focus()\r\n                }}>\r\n                    {/* // onMouseOver={()=>{\r\n                    //   console.log('onmouseover')\r\n                    //   document.getElementsByClassName('inputSearch')[0].children[0].focus()\r\n                    // }}\r\n                    // onMouseLeave={ () => {\r\n                    //   console.log('onmouseout')\r\n                    //   setTimeout(() => {\r\n                    //   document.getElementById('InputInvisible').focus()\r\n                    //   }, 300);\r\n                    // }}> */}\r\n                  \r\n                  <SearchIcon\r\n                  className=\"SearchIconPesquisar\"\r\n                    \r\n                  />\r\n                    <input id=\"InputInvisible\" ></input>\r\n              </Col>\r\n              \r\n            </Row>\r\n        </>\r\n    )\r\n}","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\carrinho.js",["612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646"],"import React from 'react'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport InfoCardapio from \"./infoCardapio\"\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\n//loading\r\n//import Loading from '../loading';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n//alert\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport Prato from '../../assets/pratos.svg';\r\nimport Megafone from '../../assets/megafone.svg';\r\nimport Comida from '../../assets/comida.svg';\r\nimport DesenvolvidoPor from '../../assets/desenvolvidoPor.png';\r\nimport {fade, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport ViewColumnOutlinedIcon from '@material-ui/icons/ViewColumnOutlined';\r\n\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\n\r\nimport AlertFixo from '@material-ui/lab/Alert';\r\n\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nimport api from '../../services/api';\r\n/*import './styles.css';*/\r\n\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\r\n\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport carrinhoVazio from '../../assets/cart-empty-flat.gif';\r\n\r\n\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\n// import Estabelecimentos from '../Deslogado/estabelecimentos';\r\n\r\n\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\nexport default function Carrinho (props) {\r\n    const{\r\n        carrinho,\r\n        iphone,\r\n        android,\r\n        classes,\r\n        setCarrinhoOpen,\r\n        estabelecimentoAtual,\r\n        aplicativoDados,\r\n        quantidadeProdutos,\r\n        removeItem,\r\n        setRemoveItem,\r\n        removeItemSelecionado,\r\n        setCarrinho,\r\n        calcularValorTotal,\r\n        setAdicionarCupom,\r\n        adicionarCupom,\r\n        fullScreen,\r\n        carrinhoOpen,\r\n        isEntregaNoEndereco,\r\n        usuarioPedidoMesa,\r\n        setInformacoesDoTipoEntrega,\r\n        isRetiradaNoLocal,\r\n        isUsuarioPedidoMesa,\r\n        temEndereco,\r\n        enderecoAtual,\r\n        setTelaRetiradaOuEntrega,\r\n        usuarioLogado,\r\n        isFreteGratisMinimoEntrega,\r\n        setPagamentoOpen,\r\n        alertStart,\r\n        setRodarFuncaoAposIsso,\r\n        setInformacoesPedido,\r\n        irParaEnderecos,\r\n        qrCodeModal,\r\n        setQrCodeModal,\r\n        informacoesPedido,\r\n        isNumeric,\r\n        nomeMesa,\r\n        numeroMesas,\r\n        confirmacaoInformacoes,\r\n        formaDePagamento,\r\n        setFormaDePagamento,\r\n        setLoading,\r\n        obterMeusCartoesSalvos,\r\n        setPagamentoOnline,\r\n        troco,\r\n        setTroco,\r\n        formatReal,\r\n        getMoney,\r\n        setCriarCartao,\r\n        setAbrirMostrarFotoProduto,\r\n        irParaProduto,\r\n        selecioneiRetiradaNoLocal,\r\n        selecioneiEndereco,\r\n        cardapio,\r\n        descontoCardapio,\r\n        removerCupom,\r\n        setRemoveItemSelecionado,\r\n        pagamentoOpen,\r\n        irParaLogin,\r\n        AdicionarCupom,\r\n        AvatarTipoEntrega,\r\n        ReactPixel,\r\n        EnderecoPedidoMesa,\r\n        QRCode,\r\n        PagamentoOnline,\r\n        MeusCartoes,\r\n        CriarCartao,\r\n        VerificarPagamentoOnline,\r\n        EscolhiMeuCartaoPagamentoOnline,\r\n        InformacoesDoTipoEntrega,\r\n        AbrirMostrarFotoProduto,\r\n        MostrarFotoProduto,\r\n        TelaRetiradaOuEntrega\r\n    } = props\r\n\r\n\r\n    const selecionarFormaDePagamento = async (valor) => {\r\n\r\n        setFormaDePagamento(valor)\r\n        const formaPagamentoSelecionado = cardapio.formasPagamento[valor.replace(\"forma\",\"\")]\r\n        carrinho.formaPagamentoDescricao = formaPagamentoSelecionado.descricao\r\n        carrinho.pedido.formaPagamento = formaPagamentoSelecionado\r\n        if(formaPagamentoSelecionado.desconto){\r\n            carrinho.pedido.valorTotal -= (formaPagamentoSelecionado.desconto / 100 ) *  carrinho.pedido.valorTotal\r\n        }\r\n        localStorage.setItem('carrinhoCF', JSON.stringify(carrinho));\r\n        setCarrinho(carrinho)\r\n        ////console.log(\"formaPagamentoSelecionado\", /**formaPagamentoSelecionado */)\r\n        if(formaPagamentoSelecionado.descricao === \"DINHEIRO\"){\r\n            setTroco([true, ''])\r\n        }else if(formaPagamentoSelecionado.descricao === \"Pagamento Online\"){\r\n            setLoading(true)\r\n            await obterMeusCartoesSalvos()\r\n            setLoading(false)\r\n            setPagamentoOnline([true, {}])\r\n        }else{\r\n            setInformacoesPedido(true)    \r\n            //enviarPedido()\r\n        }\r\n    }\r\n    return(\r\n        <>\r\n            {\r\n            (carrinho.pedido?.itens?.length > 0 && !props.visualizacao) && \r\n                <Fab\r\n                    variant=\"extended\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    aria-label=\"add\"\r\n                    style={(iphone || android) ? null : {\"padding\": \"25px\"}  }\r\n                    onClick={() => {setCarrinhoOpen(true)}}\r\n                    className={ usuarioPedidoMesa ? classes.fixedMesa : classes.fixed  } id=\"botaoCarrinho\"\r\n                    >\r\n                    <ShoppingBasketIcon className={classes.extendedIcon} />\r\n                    {/* carrinho.pedido?.itens?.length + \" \" */}\r\n                    {/* { carrinho.pedido?.itens?.length > 1 ? \"Produtos\" : \"Produto\" } */}\r\n                    Meu Pedido\r\n                    <span className=\"valorFinalizarPedido\" style={{\"color\":aplicativoDados.corSitePrimaria}}>\r\n                        {\r\n                        estabelecimentoAtual.somarQtdItens == true \r\n                        ? quantidadeProdutos() //carrinho.pedido?.itens.length\r\n                        : Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(carrinho.pedido?.valorTotal)      \r\n                        }\r\n                    </span>\r\n                </Fab>\r\n            }\r\n            \r\n            {\r\n                (carrinho.pedido?.itens?.length > 0)\r\n                &&\r\n                <Dialog\r\n                open={removeItem}\r\n                aria-labelledby=\"excluirProduto\">\r\n                <DialogTitle id=\"excluirProduto\">{\"Remover Produto\"}</DialogTitle>\r\n                <DialogActions style={{\"justifyContent\": \"center\"}}>  \r\n                    <Button onClick={() => {\r\n                    setRemoveItem(false)\r\n                    }} style={{\"color\": \"#dc3545\"}}>\r\n                        Não\r\n                    </Button>\r\n\r\n                    <Button onClick={async () => {\r\n\r\n                    setRemoveItem(false)\r\n\r\n\r\n                    carrinho.pedido.itens.splice(removeItemSelecionado, 1)\r\n                    \r\n                    localStorage.setItem(\"carrinhoCF\", JSON.stringify(carrinho))\r\n                    setCarrinho(carrinho)\r\n\r\n                    //calcula valor total\r\n                    await calcularValorTotal()\r\n\r\n                    \r\n\r\n                    \r\n                    }} style={{\"color\": \"white\", \"backgroundColor\": \"#28a745\"}}>\r\n                    Sim\r\n                    </Button>    \r\n                                \r\n                </DialogActions>\r\n                </Dialog> \r\n            }\r\n\r\n            {(carrinho.pedido?.itens?.length > 0) &&\r\n                <Dialog\r\n                open={AdicionarCupom}\r\n                aria-labelledby=\"adicionarCupom\">\r\n                <DialogTitle id=\"adicionarCupom\">{\"Adicionar Cupom\"}</DialogTitle>\r\n                <DialogContent>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    autoFocus\r\n                    id=\"codigoAddCupom\"\r\n                    label=\"Código Cupom\"\r\n                    name=\"codigoAddCupom\"\r\n                />  \r\n                </DialogContent>\r\n                <DialogActions style={{\"justifyContent\": \"center\"}}>  \r\n                <Button onClick={() => {\r\n                    setAdicionarCupom(false)\r\n                }} style={{\"color\": \"#dc3545\"}}>\r\n                    Cancelar\r\n                </Button>\r\n\r\n                <Button onClick={adicionarCupom} style={{\"color\": 'white', 'backgroundColor': '#28a745'}}>\r\n                    Adicionar\r\n                </Button>    \r\n                                \r\n                </DialogActions>\r\n            </Dialog>\r\n            }\r\n\r\n            { (carrinho.pedido?.itens?.length > 0) ?\r\n            (<>\r\n                <Dialog\r\n                fullScreen={fullScreen}\r\n                open={carrinhoOpen}\r\n                aria-labelledby=\"Carrinho-de-Pedidos\">\r\n                <DialogTitle id=\"Carrinho-de-Pedidos\">{\"Pedido\"}</DialogTitle>\r\n\r\n\r\n                \r\n                <DialogContent>\r\n                \r\n                {\r\n                    (isEntregaNoEndereco || isRetiradaNoLocal)\r\n                    ? <DialogActions>\r\n                        <Button onClick={!usuarioPedidoMesa?.logado ? () => { setInformacoesDoTipoEntrega(true) } : null}>\r\n                        {((isRetiradaNoLocal || isEntregaNoEndereco) && !isUsuarioPedidoMesa)\r\n                        ? isEntregaNoEndereco ? \"Entrega - \" : \"Retirada - \" \r\n                        : null}  Valor Total\r\n                        </Button>\r\n                        <Button >\r\n                        {Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(carrinho.pedido.valorTotal)}\r\n                        </Button>\r\n                    </DialogActions>\r\n                    : null\r\n                }\r\n\r\n                        <List\r\n                        component=\"div\"\r\n                        aria-labelledby=\"nested-list-subheader\"\r\n                        className={classes.rootCarrinho}\r\n                        >\r\n\r\n                            {\r\n                                (isEntregaNoEndereco === false  && temEndereco)\r\n                                && \r\n                                (<>\r\n                                    <AlertFixo style={{\"marginBottom\": \"1em\"}} severity=\"error\"> Essa loja não entrega no seu endereço <b>{enderecoAtual.logradouro}, {enderecoAtual.numero}</b> <Button onClick={() => { setTelaRetiradaOuEntrega(true)}} style={{\"padding\": \"0px\", \"fontSize\": \"80%\"}}>Trocar</Button></AlertFixo>\r\n                                </>)\r\n                            }\r\n                            \r\n                            \r\n                                \r\n                            { (!isUsuarioPedidoMesa && usuarioLogado?.logado && (isRetiradaNoLocal || isEntregaNoEndereco))  &&\r\n                                \r\n                                (<span>\r\n                                    {( !isUsuarioPedidoMesa && !isRetiradaNoLocal && isEntregaNoEndereco && carrinho.minimoEntregaGratis > 0 && carrinho.minimoEntregaGratis < 999) &&\r\n                                    <AlertFixo style={{\"marginBottom\": \"1em\"}} severity={isFreteGratisMinimoEntrega ? \"success\" : \"warning\"} className=\"campoDeUmAlert\">\r\n                                        Frete Grátis acima de <b>\r\n                                        {Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(carrinho.minimoEntregaGratis)}</b> no total dos produtos.\r\n                                    </AlertFixo>}\r\n\r\n                                    { /* ========== ALERTA MINIMO PARA REALIZAR PEDIDO ============ */\r\n                                        carrinho.valorMinimoPedido > 0 && <AlertFixo severity={carrinho.pedido.valorTotal  > carrinho.valorMinimoPedido ? \"success\" : \"warning\"} className=\"campoDeUmAlert\">O valor minimo do pedido é de <b>{Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(carrinho.valorMinimoPedido)} </b></AlertFixo>}\r\n\r\n\r\n                                    <ListItem button  onClick={() =>{setInformacoesDoTipoEntrega(true)}}>\r\n                                        <ListItemAvatar>\r\n                                        <AvatarTipoEntrega retirada={isRetiradaNoLocal}/>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText \r\n                                        primary={isRetiradaNoLocal ? \"Retirada\" : isEntregaNoEndereco && \"Entrega\"}\r\n                                        />\r\n                                        <ListItemText \r\n                                        primary={(isRetiradaNoLocal || isFreteGratisMinimoEntrega) ? \"\" : Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(carrinho?.pedido ? carrinho?.pedido?.taxaEntrega  : enderecoAtual.taxaEntrega)} className=\"carrinho-produto-valor\"\r\n                                        secondary={\r\n                                            <Button \r\n                                            onClick={() => { /*setTelaRetiradaOuEntrega(true) */}} \r\n                                            style={{\"padding\": \"0px\", \"float\": \"right\", \"fontSize\": \"80%\" /*,\"color\": `${aplicativoDados.corSitePrimaria}` */}}\r\n                                            >\r\n                                            Trocar\r\n                                            </Button>\r\n                                        }    \r\n                                        />\r\n                                    </ListItem>\r\n                                    <List component=\"div\" disablePadding  >\r\n                                        <ListItem  className={classes.nested} style={{\"paddingTop\": \"0\"}}>\r\n                                        <ListItemText \r\n                                            secondary={\r\n                                            isRetiradaNoLocal \r\n                                            ? `${estabelecimentoAtual?.nome}: ${estabelecimentoAtual?.endereco} - ${estabelecimentoAtual?.telefone}`\r\n                                            : `${enderecoAtual.logradouro} - nº ${enderecoAtual.numero}`\r\n                                            } \r\n                                        />\r\n                                        </ListItem>\r\n                                    </List>            \r\n                                    <Divider/>\r\n                                </span>)\r\n                            }\r\n                            \r\n\r\n\r\n                            \r\n                        \r\n\r\n                        {((cardapio.percentualDesconto || cardapio.valorDesconto) && cardapio.informacao)\r\n                        ? (\r\n                        <span>\r\n                            <ListItem button  >\r\n                            <ListItemAvatar>\r\n                                <Avatar>\r\n                                <FavoriteIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary={cardapio.informacao.includes(\"resgate de cartela\") ? \"Fidelidade\" : \"Desconto\"} />\r\n                            {\r\n                                /*\r\n                                valorDosPromocionais = CalcularValorItensPromocionais(pedido);\r\n                                def subTotal = session[\"pedido\"].valorTotal - (valorDosPromocionais + session[\"pedido\"].taxaEntrega)\r\n                                valorDesconto = (subTotal * valorDescontoPercentual) / 100.0\r\n                                */\r\n                            }\r\n                            <ListItemText \r\n                                primary={Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format( -descontoCardapio )} className=\"carrinho-produto-valor-negativo\"\r\n                                secondary={\r\n                                <Button \r\n                                    onClick={removerCupom} \r\n                                    style={{\"padding\": \"0px\", \"float\": \"right\", \"fontSize\": \"80%\" /*,\"color\": `${aplicativoDados.corSitePrimaria}` */}}\r\n                                >\r\n                                    Não Usar\r\n                                </Button>\r\n                                }   \r\n                            />\r\n                            </ListItem> \r\n                            <List component=\"div\" disablePadding >\r\n                            <ListItem  className={classes.nested} style={{\"paddingTop\": \"0\"}}>\r\n                                <ListItemText secondary={cardapio.informacao} />\r\n                            </ListItem>\r\n                            </List>  \r\n                            <Divider/>\r\n                        </span>\r\n                        ): null}\r\n\r\n\r\n                        {cardapio.cupomDesconto \r\n                        ? (\r\n                        <span>\r\n                            <ListItem button >\r\n                            <ListItemAvatar>\r\n                                <Avatar>\r\n                                <ConfirmationNumberIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary={cardapio.cupomDesconto.codigoCupom} />\r\n                            <ListItemText \r\n                                primary={Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format( -descontoCardapio )} className=\"carrinho-produto-valor-negativo\"\r\n                                secondary={\r\n                                <Button \r\n                                    onClick={removerCupom} \r\n                                    style={{\"padding\": \"0px\", \"float\": \"right\", \"fontSize\": \"80%\" /*,\"color\": `${aplicativoDados.corSitePrimaria}` */}}\r\n                                >\r\n                                    Remover\r\n                                </Button>\r\n                                }    \r\n                            />\r\n                            </ListItem>                       \r\n                            <List component=\"div\" disablePadding >\r\n                            <ListItem  className={classes.nested} style={{\"paddingTop\": \"0\"}}>\r\n                                <ListItemText secondary={cardapio.cupomDesconto.mensagem ? cardapio.cupomDesconto.mensagem : \r\n                                `Cupom de desconto ${cardapio.cupomDesconto.codigoCupom} ${cardapio.cupomDesconto.freteGratis ? \"com frete grátis\" : \"\"}`} />\r\n                            </ListItem>\r\n                            </List>   \r\n                            <Divider/>\r\n                        </span> \r\n                        ): (usuarioLogado.logado && !usuarioPedidoMesa?.logado && !(cardapio.percentualDesconto || cardapio.valorDesconto)) &&\r\n                            <span> \r\n                                <ListItem button onClick={()=>{setAdicionarCupom(true)}} >\r\n                                <ListItemAvatar>\r\n                                    <Avatar>\r\n                                    <ConfirmationNumberIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={'Adicionar Cupom'} />\r\n                                </ListItem>        \r\n                                <Divider/>\r\n                            </span> }\r\n\r\n\r\n                        \r\n\r\n\r\n\r\n                        <ListSubheader component=\"div\" id=\"nested-list-subheader\" className=\"mt-4\">\r\n                            <b> ({carrinho.pedido?.itens.length}) Produtos adicionados:</b>\r\n                        </ListSubheader>\r\n                        \r\n                        \r\n                        \r\n                        {carrinho.pedido?.itens.map((item, index) => (\r\n                            \r\n                            <div key={index} style={{\"position\": \"relative\"}}>\r\n                            \r\n                            <ListItem button onClick={() => {\r\n                                setRemoveItemSelecionado(index)\r\n                                setRemoveItem(true)\r\n                                }} >\r\n                                <ListItemAvatar>\r\n                                {\r\n                                    item.produto.urlImagem ? \r\n                                    <Avatar style={{\"backgroundImage\": `url(${item.produto.urlImagem})`, \"backgroundSize\": \"cover\"}}>\r\n                                        <> </>\r\n                                    </Avatar>\r\n                                    : <Avatar className={\"opacity05\"} style={{\"backgroundImage\": `url(${(item.produto.produtoExibicao ? Megafone : /**Prato */ Comida)})`, \"backgroundSize\": \"cover\", \"backgroundColor\": \"white\"}}>\r\n                                        <> </>\r\n                                    </Avatar>\r\n                                }\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={item.quantidade + \"x \"+ item.produto.nome} />\r\n                                <ListItemText \r\n                                primary={Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(item.valorProdutoHistorico)} \r\n                                secondary={\r\n                                    <Button\r\n                                    style={{\"padding\": \"0px\", \"float\": \"right\", \"fontSize\": \"80%\", \"color\": `#dc3545`}}\r\n                                    onClick={() => {\r\n                                        setRemoveItemSelecionado(index)\r\n                                        setRemoveItem(true)\r\n                                    }}\r\n                                    >Remover</Button>\r\n                                }\r\n                                className=\"carrinho-produto-valor\"/>\r\n                                \r\n                            </ListItem>    \r\n\r\n                            {\r\n                                item.produto.promocional && (carrinho.valorDesconto || carrinho.percentualDesconto)\r\n                                ?\r\n                                <List key={index} component=\"div\" disablePadding >\r\n                                    <ListItem  className={classes.nested} style={{\"paddingTop\": \"0\"}}>\r\n                                       <p className=\"promocionalElement\">\r\n                                           É promocional, então não recebe desconto.\r\n                                       </p>\r\n                                    </ListItem>\r\n                                </List> \r\n                                \r\n                                : null \r\n                            }\r\n                            {!!item.itensOpcaoProduto.length &&\r\n                                item.itensOpcaoProduto.map((adicional, index) =>(\r\n                                <List key={index} component=\"div\" disablePadding >\r\n                                    <ListItem  className={classes.nested} style={{\"paddingTop\": \"0\"}}>\r\n                                    <ListItemText secondary={adicional.quantidade + \"x \" + adicional.opcaoProduto.nome} />\r\n                                    </ListItem>\r\n                                </List>     \r\n                                ))\r\n                            }\r\n                            \r\n                            \r\n\r\n                            <Divider/>\r\n                            </div>\r\n                            \r\n                        ))}\r\n                        \r\n                    </List>     \r\n\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                \r\n                <Button onClick={() => {setCarrinhoOpen(false)}} style={{\"color\": \"#dc3545\"}}>\r\n                    Voltar ao Cardápio\r\n                </Button>\r\n                \r\n                \r\n                \r\n                <Button variant=\"contained\" fullWidth onClick={() => {\r\n                    if(aplicativoDados.clienteFielStart){\r\n                    setPagamentoOpen(true)\r\n                    }else{\r\n                    if(estabelecimentoAtual.online === false){\r\n                        alertStart(\"Estamos fechados no momento. Tente novamente mais tarde!\", \"warning\")              \r\n                    // }else if( enderecoAtual.taxaEntrega === -1 || carrinho?.pedido?.taxaEntrega === -1){\r\n                    }else if(estabelecimentoAtual.online && estabelecimentoAtual.pausado){\r\n                        alertStart(\"Estamos abertos, porém pausados nesse momento. Tente novamente mais tarde!\", \"warning\")              \r\n                    }else if( isEntregaNoEndereco === false && temEndereco){\r\n                        alertStart(\"Não entregamos no seu endereço atualmente.\", \"warning\")  \r\n                    }else if( carrinho.pedido.valorTotal < carrinho.valorMinimoPedido && !usuarioPedidoMesa?.logado){\r\n                        alertStart(`O valor mínimo para pedido é de ${Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(carrinho.valorMinimoPedido)}.`, \"warning\")  \r\n                    }else{\r\n\r\n                        if(aplicativoDados.pixelFacebook){\r\n                        ReactPixel.track('InitiateCheckout')\r\n                        }\r\n\r\n                        setRodarFuncaoAposIsso('formaPagamento')\r\n                        if(!usuarioLogado.logado && !usuarioPedidoMesa?.logado ){\r\n                        //PEDE PRA FAZER LOGIN\r\n                        setInformacoesDoTipoEntrega(true)\r\n                        }else if(usuarioPedidoMesa?.logado){\r\n                        EnderecoPedidoMesa()\r\n                        if(cardapio.formasPagamento?.length > 0){\r\n                            setPagamentoOpen(true) \r\n                        }else{\r\n                            setInformacoesPedido(true)\r\n                        }\r\n                        }else if((carrinho.pedido?.tipoPedido || enderecoAtual.ativo)){\r\n                        setPagamentoOpen(true) \r\n                        }else{\r\n                        if(estabelecimentoAtual.permiteRetiradaBalcao){\r\n                            setTelaRetiradaOuEntrega(true)\r\n                        }else{\r\n                            localStorage.setItem('backupItensCarrinhoCF', JSON.stringify(JSON.parse(localStorage.getItem('carrinhoCF')).pedido.itens))\r\n                            irParaEnderecos()\r\n                        }\r\n                        }                             \r\n                    }}\r\n                    // }} style={(enderecoAtual.taxaEntrega === -1 || carrinho?.pedido?.taxaEntrega === -1) ? {} : {\"background\": \"#28a745\", \"color\":\"white\"}}>\r\n                    }} style={( isEntregaNoEndereco === false && temEndereco) ? {} : {\"background\": \"#28a745\", \"color\":\"white\"}}>\r\n                    Finalizar  \r\n                    {\r\n                    // (enderecoAtual.taxaEntrega === -1 || carrinho?.pedido?.taxaEntrega === -1)\r\n                    ( isEntregaNoEndereco === false && temEndereco)\r\n                    ? null\r\n                    : <span className=\"valorFinalizarPedido\">\r\n                        {Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(carrinho.pedido.valorTotal ? carrinho.pedido.valorTotal : 0.0)}\r\n                        </span>\r\n                    }\r\n                    \r\n                </Button>          \r\n                \r\n                \r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n                    \r\n                {\r\n                ( usuarioPedidoMesa?.logado && estabelecimentoAtual.solicitarComanda ) &&\r\n                <Dialog\r\n                    fullScreen={fullScreen}\r\n                    open={qrCodeModal}\r\n                    aria-labelledby=\"qrCodeComanda\">\r\n\r\n                    <DialogTitle id=\"qrCodeComanda\">{\"Leia o QRCode na COMANDA\"}</DialogTitle>\r\n                    <DialogContent>\r\n\r\n                    <QRCode/>\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>                \r\n                    <Button onClick={() => {setQrCodeModal(false)}} >\r\n                        Cancelar\r\n                    </Button>                \r\n                    </DialogActions>\r\n                </Dialog>\r\n                }\r\n                \r\n                <Dialog\r\n                fullScreen={fullScreen}\r\n                open={informacoesPedido}\r\n                onClose={() => {setInformacoesPedido(false)}}\r\n                aria-labelledby=\"responsive-dialog-informacoes-nome-pedido\">\r\n                <DialogTitle id=\"responsive-dialog-informacoes-nome-pedido\">{\"Confirmação Dados\"}</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    { (carrinho.pedido?.tipoPedido !== 1 && !usuarioPedidoMesa?.logado)\r\n                    ? <Typography>\r\n                        <b>Entregar</b> na {enderecoAtual.logradouro + \" - n°: \" + enderecoAtual.numero} - Bairro {enderecoAtual.bairro} - {enderecoAtual.cidade + \" - \" + enderecoAtual.uf}\r\n                        <b> Complemento:</b> {enderecoAtual.complemento} e <b>Referência: </b>{enderecoAtual.referencia}\r\n                        <br/>\r\n                        <Button onClick={irParaEnderecos} style={{\"padding\": \"0px\", \"float\": \"right\", \"fontSize\": \"80%\", \"color\": `${aplicativoDados.corSitePrimaria}`}}>Trocar endereço de entrega</Button>\r\n                        </Typography>\r\n                    : null\r\n                    }\r\n\r\n                    {\r\n                    !(usuarioPedidoMesa?.logado && aplicativoDados.solicitarNomePedidoMesa == false) &&\r\n                        <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        autoFocus={(usuarioLogado?.cliente?.nome && !usuarioPedidoMesa?.logado) ? false : true}\r\n                        defaultValue={usuarioPedidoMesa?.logado ? usuarioPedidoMesa?.cliente?.nome : usuarioLogado?.cliente?.nome}\r\n                        id=\"nomePedido\"\r\n                        label=\"Seu Nome\"\r\n                        name=\"nomePedido\"\r\n                        />  \r\n                    }\r\n\r\n                    {\r\n                    !(usuarioPedidoMesa?.logado && aplicativoDados.solicitarTelefonePedidoMesa == false) &&\r\n                        <TextField\r\n                        variant=\"outlined\"\r\n                        autoFocus={(!usuarioPedidoMesa?.logado && usuarioLogado?.cliente?.nome && !usuarioLogado?.cliente?.telefone ) ? true : false}\r\n                        defaultValue={(usuarioLogado?.cliente?.telefone)?.replace(' ', '').replace('.','').replace('-','').replace('(','').replace(')','').replace('/','')}\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        id=\"telefonePedido\"\r\n                        label=\"Seu Telefone\"\r\n                        name=\"telefonePedido\"\r\n                        />  \r\n                    }\r\n                    \r\n                    {\r\n                    usuarioPedidoMesa?.logado &&\r\n                    \r\n                    <FormControl disabled={(isNumeric(nomeMesa) || carrinho?.mesa) ? true : false} variant=\"outlined\" style={{\"width\": \"100%\", \"marginTop\": \"1.5em\"}}>\r\n                        <InputLabel id=\"numeroDaMesaLabel\">Mesa</InputLabel>\r\n                        <Select\r\n                        defaultValue={isNumeric(nomeMesa) ? nomeMesa : (carrinho?.mesa ? carrinho?.mesa : 0)}\r\n                        labelId=\"numeroDaMesaLabel\"\r\n                        id=\"numeroDaMesa\"\r\n                        label=\"Mesa\"\r\n                        fullWidth\r\n                        > \r\n                        <MenuItem key={0} value={0}>{\"Não Selecionada\"} </MenuItem>\r\n                        {\r\n                            numeroMesas.map((num) => (\r\n                            <MenuItem key={num} value={num}>{\"Mesa \" + num} </MenuItem>\r\n                            ))\r\n                        }\r\n                        </Select>\r\n                    </FormControl>              \r\n                    }\r\n\r\n                    <TextField style={{\"margin\": \"1em 0\"}}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        id=\"observacaoPedido\"\r\n                        label=\"Observação\"\r\n                        name=\"observacaoPedido\"\r\n                        type=\"text\"\r\n                        ></TextField>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => {setInformacoesPedido(false)}} style={{\"color\": \"#dc3545\"}}>\r\n                    Fechar\r\n                    </Button> \r\n                    <Button variant=\"contained\" style={{\"background\": \"#28a745\", \"color\":\"white\"}} onClick={confirmacaoInformacoes}>\r\n                    Confirmar\r\n                    </Button>\r\n                </DialogActions>\r\n                </Dialog>\r\n\r\n                {cardapio.formasPagamento ? <Dialog\r\n                fullScreen={fullScreen}\r\n                open={pagamentoOpen}\r\n                onClose={() => {setPagamentoOpen(false)}}\r\n                aria-labelledby=\"responsive-dialog-pagamento\">\r\n                <DialogTitle id=\"responsive-dialog-pagamento\">{\"Formas de Pagamento\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\">Selecione a melhor opção</FormLabel>\r\n                        <RadioGroup aria-label=\"formaDePagamento\" name=\"formaDePagamento\" value={formaDePagamento} onChange={async (e) => {\r\n                        \r\n                        selecionarFormaDePagamento(e.target.value)\r\n\r\n                    }}>\r\n                        {\r\n                        cardapio.formasPagamento.map((formaDePagamento, index) => (                  \r\n                            <span key={formaDePagamento.id} >\r\n                            {formaDePagamento.urlImagem ? <img src={formaDePagamento.urlImagem} alt={formaDePagamento.descricao} className=\"bandeiraCartao\"/> : <PaymentIcon className=\"bandeiraCartao\"/>}                    \r\n                            <FormControlLabel value={\"forma\"+index} control={<Radio />} label={`${formaDePagamento.descricao} ${formaDePagamento.desconto ? ` - ${formaDePagamento.desconto}% de desconto` : \"\"}` } />                \r\n                            </span>\r\n                        ))\r\n                        }       \r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => {setPagamentoOpen(false)}} style={{\"color\": \"#dc3545\"}}>\r\n                    Fechar\r\n                    </Button>  \r\n                    { formaDePagamento\r\n                    ? (<Button variant=\"contained\" style={{\"background\": \"#28a745\", \"color\":\"white\"}} onClick={ async () => {\r\n\r\n                        selecionarFormaDePagamento(formaDePagamento)\r\n\r\n                    }}>Enviar Pedido\r\n                    </Button>)\r\n                    : (<Button variant=\"contained\" disabled >Enviar Pedido\r\n                    </Button>)\r\n                    }\r\n                \r\n                    \r\n                \r\n                </DialogActions>\r\n                </Dialog> : null} \r\n\r\n                </>) : null}\r\n\r\n\r\n                <Dialog\r\n                open={troco[0]}\r\n                aria-labelledby=\"trocoModal\">\r\n                <DialogTitle id=\"trocoModal\">{\"Insira o valor para trocar\"}</DialogTitle>\r\n                <DialogContent>\r\n                            <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            autoFocus\r\n                            value={troco[1]}\r\n                            onChange={(e) => {\r\n                                setTroco([true, \"R$ \"+formatReal(getMoney(e.target.value))])\r\n                            }}\r\n                            id=\"valorTroco\"\r\n                            label=\"Valor para Trocar\"\r\n                            name=\"valorTroco\"\r\n                            />  \r\n\r\n                <FormControlLabel\r\n                    control={\r\n                    <Checkbox\r\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                        checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                        name=\"naoPrecisoDeTroco\"\r\n                        onClick={() => { setTroco([true, '' ]) }}\r\n                    />\r\n                    }\r\n                    label=\"Não preciso de troco\"\r\n                />\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => {setTroco([false, ''])}} style={{\"color\": \"#dc3545\"}}>\r\n                    Trocar\r\n                    </Button>  \r\n                    <Button onClick={() => {\r\n                        var valorTroco = parseFloat(troco[1].replace('R$ ', '').replace('.', '').replace(',', '.'))\r\n                        ////console.log(\"valorTroco\", /*valorTroco */)\r\n\r\n                        if(document.getElementsByName('naoPrecisoDeTroco')[0].checked && !valorTroco){\r\n                        valorTroco = 0   \r\n                        }else if(valorTroco < carrinho.pedido.valorTotal){\r\n                        alertStart(\"Valor do troco deve ser maior que o total.\", \"warning\")\r\n                        document.getElementById('valorTroco').focus()\r\n                        return false\r\n                        }else if(!valorTroco){\r\n                        alertStart(\"Valor inválido!\", \"warning\")\r\n                        document.getElementById('valorTroco').focus()\r\n                        return false\r\n                        }      \r\n\r\n                        carrinho.pedido.troco = valorTroco\r\n                        setTroco([false, troco[1]])\r\n                        setInformacoesPedido(true)   \r\n                        //enviarPedido()\r\n                    }} style={{\"backgroundColor\": \"#28a745\", \"color\": \"white\"}}>\r\n                    Pronto\r\n                    </Button>  \r\n                </DialogActions>\r\n                </Dialog>\r\n\r\n\r\n                <Dialog\r\n                open={PagamentoOnline[0]}\r\n                aria-labelledby=\"pagamentoOnlineModal\">\r\n                <DialogTitle id=\"pagamentoOnlineModal\">{MeusCartoes === 0 ? \"Pagamento Online\" : \"Meus Cartões\"}</DialogTitle>\r\n                \r\n                { MeusCartoes.length === 0 || CriarCartao === true\r\n                ?(<form id=\"payment-form\"  name=\"payment-form\" method=\"POST\" autoComplete=\"off\" onSubmit={(e) => {VerificarPagamentoOnline(e)}}>\r\n\r\n                <DialogContent>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        \r\n                        //autoFocus\r\n                        //value={troco[1]}\r\n                        /*onChange={(e) => {\r\n                            setTroco([true, \"R$ \"+formatReal(getMoney(e.target.value))])\r\n                        }}*/\r\n                        id=\"numeroCartao_PagamentoOnline\"\r\n                        label=\"Número Cartão\"\r\n                        name=\"numeroCartao_PagamentoOnline\"\r\n                        className=\"credit_card_number\"\r\n                        inputProps={{ 'data-iugu': 'number' }} \r\n                        required\r\n                        type=\"number\"\r\n\r\n                    />  \r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                        //autoFocus\r\n                        //value={troco[1]}\r\n                        /*onChange={(e) => {\r\n                            setTroco([true, \"R$ \"+formatReal(getMoney(e.target.value))])\r\n                        }}*/\r\n                        id=\"cvv_PagamentoOnline\"\r\n                        label=\"CVV\"\r\n                        name=\"cvv_PagamentoOnline\"\r\n                        inputProps={{ 'data-iugu': 'verification_value' }} \r\n                        required\r\n                        className=\"credit_card_cvv\"\r\n\r\n                    /> \r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        required\r\n                        inputProps={{ 'data-iugu': 'full_name' }} \r\n                        //autoFocus\r\n                        //value={troco[1]}\r\n                        /*onChange={(e) => {\r\n                            setTroco([true, \"R$ \"+formatReal(getMoney(e.target.value))])\r\n                        }}*/\r\n                        id=\"titular_PagamentoOnline\"\r\n                        label=\"Titular do Cartão\"\r\n                        name=\"titular_PagamentoOnline\"\r\n                        className=\"credit_card_name\"\r\n                    />  \r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        required\r\n                        //value={troco[1]}\r\n                        id=\"expiracao_PagamentoOnline\"\r\n                        className=\"credit_card_expiration\"\r\n                        inputProps={{ 'data-iugu': 'expiration' }} \r\n                        label=\"MM/AA\"\r\n                        name=\"expiracao_PagamentoOnline\"\r\n                    />    \r\n\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        required\r\n                        id=\"cpf_PagamentoOnline\"\r\n                        label=\"CPF\"\r\n                        name=\"cpf_PagamentoOnline\"\r\n                    />\r\n                    \r\n                    \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => {setPagamentoOnline([false, {}])}} style={{\"color\": \"#dc3545\"}}>\r\n                    Trocar\r\n                    </Button>  \r\n                    <Button type=\"submit\" style={{\"backgroundColor\": \"#28a745\", \"color\": \"white\"}} >\r\n                    Pronto\r\n                    </Button>  \r\n                </DialogActions>\r\n                </form>)\r\n                \r\n                : MeusCartoes.length && (<div>\r\n                    <DialogContent>\r\n                        {\r\n                        MeusCartoes.map((cartao, index) => (\r\n                            <div key={index}>\r\n                            <ListItem button onClick={() => EscolhiMeuCartaoPagamentoOnline(index)}  style={{\"padding\": \"8px 0\"}}>\r\n                                <ListItemAvatar>\r\n                                <Avatar>\r\n                                    <PaymentIcon />\r\n                                </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={cartao.numeroCartao} />\r\n                            </ListItem>   \r\n                            <Divider/>\r\n                            </div>                   \r\n                        ))\r\n                        }\r\n                    </DialogContent>\r\n                    <DialogActions> \r\n                        <Button onClick={() => {setPagamentoOnline([false, {}])}} style={{\"color\": \"#dc3545\"}}>\r\n                        Trocar\r\n                        </Button>  \r\n                        <Button onClick={() =>{ setCriarCartao(true) }} style={{\"color\": \"#28a745\"}}>\r\n                        Outro Cartão\r\n                        </Button>  \r\n                    </DialogActions>\r\n                </div>)}\r\n                \r\n                </Dialog>\r\n\r\n\r\n\r\n\r\n\r\n                {cardapio.id ?\r\n                <><Dialog\r\n                open={InformacoesDoTipoEntrega}\r\n                aria-labelledby=\"informacoesFormaDeEntregaModal\">\r\n                {/* <DialogTitle id=\"informacoesFormaDeEntregaModal\">{(carrinho.pedido?.tipoPedido || enderecoAtual.ativo) ? (carrinho.pedido.tipoPedido === 1 ? \"Para Retirada\" : \"Para Entrega\") : \"Tipo de Entrega\"}</DialogTitle> */}\r\n\r\n                \r\n\r\n                {\r\n                (usuarioLogado?.logado) \r\n                ? <DialogTitle id=\"informacoesFormaDeEntregaModal\">\r\n                    {\r\n                        (isRetiradaNoLocal\r\n                        ? \"Para Retirada\" \r\n                        : \"Para Entrega\" )\r\n                    }\r\n                    </DialogTitle>\r\n                : <DialogTitle id=\"informacoesFormaDeEntregaModal\">\r\n                    Faça Login\r\n                    </DialogTitle>\r\n                }\r\n\r\n                \r\n                <DialogContent>\r\n                {(carrinho.pedido?.tipoPedido || enderecoAtual.ativo)\r\n                    ? carrinho.pedido?.tipoPedido !== 1\r\n                    ?<Typography>\r\n                    <b>Rua: </b>{enderecoAtual.logradouro + \" - n°: \" + enderecoAtual.numero}<br/><br/>\r\n                    <b>Bairro: </b>{enderecoAtual.bairro}<br/><br/>\r\n                    <b>Cidade: </b>{enderecoAtual.cidade + \" - \" + enderecoAtual.uf}<br/><br/>\r\n                    <b>Complemento: </b>{enderecoAtual.complemento}<br/><br/>            \r\n                    <b>Referencia: </b>{enderecoAtual.referencia}<br/><br/>\r\n                    <b>Taxa: </b>{Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(enderecoAtual?.taxaEntrega)}<br/><br/>\r\n                    </Typography>\r\n            \r\n                    :<Typography>\r\n                    <b>Retirar no estabelecimento: </b>{estabelecimentoAtual.nome}<br/><br/>\r\n                    <b>Endereco: </b>{estabelecimentoAtual.endereco}<br/><br/>\r\n                    <b>Telefone: </b>{estabelecimentoAtual.telefone}<br/><br/>\r\n                    </Typography>\r\n                    : !usuarioLogado?.logado \r\n                    ? <Typography>\r\n                        Você não esta logado com nenhum usuário\r\n                        </Typography>\r\n                    : <Typography>\r\n                        Não definido\r\n                        </Typography>\r\n                }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={() => {setInformacoesDoTipoEntrega(false)}} style={{\"color\": \"#dc3545\"}}>\r\n                    Voltar\r\n                </Button>  \r\n                {usuarioLogado?.logado\r\n                \r\n                ? /* LOGADO */ <Button onClick={() =>{\r\n                    if(estabelecimentoAtual.permiteRetiradaBalcao){\r\n                        setTelaRetiradaOuEntrega(true)\r\n                    }else{\r\n                        irParaEnderecos()\r\n                    }\r\n                    }} style={{\"backgroundColor\": \"#28a745\", \"color\": \"white\"}} >\r\n                    {(carrinho.pedido?.tipoPedido || enderecoAtual.ativo) ? \"Trocar\" : \"Adicionar\"}\r\n                    </Button> \r\n                \r\n                : /* DESLOGADO */ <Button onClick={() =>{\r\n                    if(!!JSON.parse(localStorage.getItem('carrinhoCF')).pedido?.itens){\r\n                        localStorage.setItem('backupItensCarrinhoCF', JSON.stringify(JSON.parse(localStorage.getItem('carrinhoCF')).pedido.itens))\r\n                    }\r\n                    irParaLogin()\r\n                    }} style={{\"color\": \"white\", 'backgroundColor': '#28a745'}}>\r\n                    Fazer Login\r\n                    </Button>  }\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n            <Dialog\r\n                open={AbrirMostrarFotoProduto}\r\n                aria-labelledby=\"MostrarFotoProdutoModal\">\r\n\r\n                <DialogContent style={{\"textAlign\": \"center\"}}>\r\n                <img className={MostrarFotoProduto.urlImagem ? '' : \"opacity05\"} style={{\"width\": \"250px\"}} alt={MostrarFotoProduto.nome} src={MostrarFotoProduto.urlImagem ? MostrarFotoProduto.urlImagem : (MostrarFotoProduto.produtoExibicao ? Megafone : /**Prato */ Comida)}/>\r\n                <Typography component=\"h5\" variant=\"h5\" >\r\n                    {MostrarFotoProduto.nome}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                    {MostrarFotoProduto.descricao}\r\n                </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                {MostrarFotoProduto.produtoExibicao ? null : \r\n                    <Button onClick={() => {\r\n                    // if(carrinho?.pedido?.valorEntrega === -1 || carrinho?.pedido?.taxaEntrega === -1){\r\n                    if( isEntregaNoEndereco === false && temEndereco){\r\n                        if(estabelecimentoAtual.permiteRetiradaBalcao){\r\n                        setTelaRetiradaOuEntrega(true)\r\n                        }else{\r\n                        irParaEnderecos()\r\n                        }\r\n                    }else{\r\n                        irParaProduto(MostrarFotoProduto.id)\r\n                    }\r\n                    }} style={{\"color\": \"#28a745\"}}>\r\n                    Adicionar \r\n                    </Button>\r\n                }\r\n                <Button onClick={() => {\r\n                    setAbrirMostrarFotoProduto(false)}} style={{\"color\": \"#dc3545\"}}>\r\n                    Voltar\r\n                </Button>  \r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={TelaRetiradaOuEntrega}\r\n                fullWidth\r\n                aria-labelledby=\"TelaRetiradaOuEntregaModal\">\r\n                <DialogTitle id=\"TelaRetiradaOuEntregaModal\">{\"Melhor Opção\"}</DialogTitle>\r\n                <DialogContent style={{\"textAlign\": \"center\"}}>\r\n\r\n                {/* {(enderecoAtual.taxaEntrega === -1  && carrinho.pedido?.tipoPedido != 1) */}\r\n                {( isEntregaNoEndereco === false && temEndereco)\r\n                ? /* ========== ALERTA ESTABELECIMENTO NAO ENTREGA NESSE ENDEREÇO ============ */ \r\n                (<AlertFixo style={{\"marginBottom\": \"1em\"}} severity=\"error\"> Essa loja não entrega no seu endereço <b>{enderecoAtual.logradouro}, {enderecoAtual.numero}</b> </AlertFixo>)\r\n                : null}\r\n                \r\n                <Button variant=\"contained\"  onClick={selecioneiRetiradaNoLocal} style={{\"background\": `#28a745`, \"color\":\"white\", \"margin\": \"5px 10px\"}} >\r\n                    Para Retirada \r\n                </Button>\r\n\r\n                <Button variant=\"contained\" onClick={selecioneiEndereco} style={{\"background\": `#28a745`, \"color\":\"white\"}} >\r\n                    {/* {enderecoAtual.taxaEntrega === -1 ? \"Outro Endereço\" : \"Entregar No Endereço\"} */}\r\n                    Para Entrega\r\n                </Button>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={() => {setTelaRetiradaOuEntrega(false)}} style={{ \"margin\": \"5px 10px\", \"color\": \"#dc3545\"}}>\r\n                    Voltar\r\n                </Button>  \r\n                </DialogActions>\r\n            </Dialog></>\r\n            : null}\r\n        </>\r\n    )\r\n}","C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\Delivery\\ganheDescontos.js",["647","648","649","650","651","652","653","654","655","656","657","658","659","660"],"C:\\Users\\laris\\OneDrive\\Área de Trabalho\\site-pedidos-react\\src\\pages\\StatusPedido\\popupDoacao.js",["661","662","663"],{"ruleId":"664","replacedBy":"665"},{"ruleId":"666","replacedBy":"667"},{"ruleId":"668","severity":1,"message":"669","line":14,"column":81,"nodeType":"670","messageId":"671","endLine":14,"endColumn":83},{"ruleId":"672","severity":1,"message":"673","line":16,"column":11,"nodeType":"674","messageId":"675","endLine":16,"endColumn":26},{"ruleId":"672","severity":1,"message":"676","line":20,"column":11,"nodeType":"674","messageId":"675","endLine":20,"endColumn":22},{"ruleId":"672","severity":1,"message":"677","line":4,"column":8,"nodeType":"674","messageId":"675","endLine":4,"endColumn":11},{"ruleId":"668","severity":1,"message":"669","line":56,"column":14,"nodeType":"670","messageId":"671","endLine":56,"endColumn":16},{"ruleId":"668","severity":1,"message":"669","line":328,"column":81,"nodeType":"670","messageId":"671","endLine":328,"endColumn":83},{"ruleId":"668","severity":1,"message":"669","line":415,"column":94,"nodeType":"670","messageId":"671","endLine":415,"endColumn":96},{"ruleId":"668","severity":1,"message":"669","line":415,"column":135,"nodeType":"670","messageId":"671","endLine":415,"endColumn":137},{"ruleId":"668","severity":1,"message":"669","line":416,"column":76,"nodeType":"670","messageId":"671","endLine":416,"endColumn":78},{"ruleId":"668","severity":1,"message":"669","line":416,"column":104,"nodeType":"670","messageId":"671","endLine":416,"endColumn":106},{"ruleId":"668","severity":1,"message":"669","line":436,"column":128,"nodeType":"670","messageId":"671","endLine":436,"endColumn":130},{"ruleId":"678","severity":1,"message":"679","line":436,"column":138,"nodeType":"680","messageId":"681","endLine":436,"endColumn":140},{"ruleId":"678","severity":1,"message":"679","line":436,"column":283,"nodeType":"680","messageId":"681","endLine":436,"endColumn":285},{"ruleId":"682","severity":1,"message":"683","line":613,"column":7,"nodeType":"674","messageId":"684","endLine":613,"endColumn":20},{"ruleId":"685","severity":1,"message":"686","line":798,"column":7,"nodeType":"687","messageId":"671","endLine":798,"endColumn":20},{"ruleId":"672","severity":1,"message":"688","line":839,"column":11,"nodeType":"674","messageId":"675","endLine":839,"endColumn":22},{"ruleId":"672","severity":1,"message":"689","line":4,"column":8,"nodeType":"674","messageId":"675","endLine":4,"endColumn":13},{"ruleId":"668","severity":1,"message":"690","line":105,"column":63,"nodeType":"670","messageId":"671","endLine":105,"endColumn":65},{"ruleId":"668","severity":1,"message":"669","line":116,"column":25,"nodeType":"670","messageId":"671","endLine":116,"endColumn":27},{"ruleId":"672","severity":1,"message":"691","line":11,"column":8,"nodeType":"674","messageId":"675","endLine":11,"endColumn":20},{"ruleId":"672","severity":1,"message":"692","line":12,"column":8,"nodeType":"674","messageId":"675","endLine":12,"endColumn":16},{"ruleId":"672","severity":1,"message":"693","line":17,"column":8,"nodeType":"674","messageId":"675","endLine":17,"endColumn":17},{"ruleId":"672","severity":1,"message":"677","line":19,"column":8,"nodeType":"674","messageId":"675","endLine":19,"endColumn":11},{"ruleId":"672","severity":1,"message":"694","line":20,"column":8,"nodeType":"674","messageId":"675","endLine":20,"endColumn":23},{"ruleId":"672","severity":1,"message":"695","line":23,"column":8,"nodeType":"674","messageId":"675","endLine":23,"endColumn":15},{"ruleId":"672","severity":1,"message":"696","line":26,"column":8,"nodeType":"674","messageId":"675","endLine":26,"endColumn":21},{"ruleId":"672","severity":1,"message":"697","line":30,"column":8,"nodeType":"674","messageId":"675","endLine":30,"endColumn":19},{"ruleId":"668","severity":1,"message":"669","line":111,"column":20,"nodeType":"670","messageId":"671","endLine":111,"endColumn":22},{"ruleId":"668","severity":1,"message":"690","line":123,"column":33,"nodeType":"670","messageId":"671","endLine":123,"endColumn":35},{"ruleId":"668","severity":1,"message":"690","line":123,"column":46,"nodeType":"670","messageId":"671","endLine":123,"endColumn":48},{"ruleId":"668","severity":1,"message":"669","line":152,"column":13,"nodeType":"670","messageId":"671","endLine":152,"endColumn":15},{"ruleId":"668","severity":1,"message":"669","line":154,"column":19,"nodeType":"670","messageId":"671","endLine":154,"endColumn":21},{"ruleId":"668","severity":1,"message":"669","line":154,"column":32,"nodeType":"670","messageId":"671","endLine":154,"endColumn":34},{"ruleId":"668","severity":1,"message":"669","line":154,"column":45,"nodeType":"670","messageId":"671","endLine":154,"endColumn":47},{"ruleId":"668","severity":1,"message":"690","line":158,"column":46,"nodeType":"670","messageId":"671","endLine":158,"endColumn":48},{"ruleId":"668","severity":1,"message":"669","line":164,"column":17,"nodeType":"670","messageId":"671","endLine":164,"endColumn":19},{"ruleId":"668","severity":1,"message":"669","line":167,"column":17,"nodeType":"670","messageId":"671","endLine":167,"endColumn":19},{"ruleId":"668","severity":1,"message":"669","line":169,"column":23,"nodeType":"670","messageId":"671","endLine":169,"endColumn":25},{"ruleId":"668","severity":1,"message":"669","line":171,"column":23,"nodeType":"670","messageId":"671","endLine":171,"endColumn":25},{"ruleId":"668","severity":1,"message":"669","line":171,"column":49,"nodeType":"670","messageId":"671","endLine":171,"endColumn":51},{"ruleId":"672","severity":1,"message":"698","line":181,"column":7,"nodeType":"674","messageId":"675","endLine":181,"endColumn":21},{"ruleId":"668","severity":1,"message":"669","line":186,"column":29,"nodeType":"670","messageId":"671","endLine":186,"endColumn":31},{"ruleId":"668","severity":1,"message":"669","line":188,"column":60,"nodeType":"670","messageId":"671","endLine":188,"endColumn":62},{"ruleId":"672","severity":1,"message":"699","line":225,"column":7,"nodeType":"674","messageId":"675","endLine":225,"endColumn":18},{"ruleId":"672","severity":1,"message":"700","line":243,"column":9,"nodeType":"674","messageId":"675","endLine":243,"endColumn":19},{"ruleId":"672","severity":1,"message":"701","line":246,"column":10,"nodeType":"674","messageId":"675","endLine":246,"endColumn":18},{"ruleId":"672","severity":1,"message":"702","line":264,"column":10,"nodeType":"674","messageId":"675","endLine":264,"endColumn":32},{"ruleId":"672","severity":1,"message":"703","line":267,"column":10,"nodeType":"674","messageId":"675","endLine":267,"endColumn":25},{"ruleId":"672","severity":1,"message":"704","line":269,"column":10,"nodeType":"674","messageId":"675","endLine":269,"endColumn":35},{"ruleId":"668","severity":1,"message":"669","line":270,"column":80,"nodeType":"670","messageId":"671","endLine":270,"endColumn":82},{"ruleId":"705","severity":1,"message":"706","line":285,"column":6,"nodeType":"707","endLine":285,"endColumn":86,"suggestions":"708"},{"ruleId":"705","severity":1,"message":"709","line":311,"column":6,"nodeType":"707","endLine":311,"endColumn":8,"suggestions":"710"},{"ruleId":"672","severity":1,"message":"711","line":327,"column":24,"nodeType":"674","messageId":"675","endLine":327,"endColumn":39},{"ruleId":"672","severity":1,"message":"712","line":351,"column":9,"nodeType":"674","messageId":"675","endLine":351,"endColumn":21},{"ruleId":"668","severity":1,"message":"669","line":359,"column":28,"nodeType":"670","messageId":"671","endLine":359,"endColumn":30},{"ruleId":"672","severity":1,"message":"713","line":406,"column":9,"nodeType":"674","messageId":"675","endLine":406,"endColumn":25},{"ruleId":"668","severity":1,"message":"669","line":408,"column":29,"nodeType":"670","messageId":"671","endLine":408,"endColumn":31},{"ruleId":"672","severity":1,"message":"714","line":415,"column":9,"nodeType":"674","messageId":"675","endLine":415,"endColumn":31},{"ruleId":"668","severity":1,"message":"669","line":418,"column":39,"nodeType":"670","messageId":"671","endLine":418,"endColumn":41},{"ruleId":"668","severity":1,"message":"669","line":418,"column":81,"nodeType":"670","messageId":"671","endLine":418,"endColumn":83},{"ruleId":"668","severity":1,"message":"669","line":424,"column":37,"nodeType":"670","messageId":"671","endLine":424,"endColumn":39},{"ruleId":"672","severity":1,"message":"715","line":438,"column":9,"nodeType":"674","messageId":"675","endLine":438,"endColumn":31},{"ruleId":"668","severity":1,"message":"669","line":439,"column":31,"nodeType":"670","messageId":"671","endLine":439,"endColumn":33},{"ruleId":"668","severity":1,"message":"690","line":466,"column":62,"nodeType":"670","messageId":"671","endLine":466,"endColumn":64},{"ruleId":"668","severity":1,"message":"669","line":503,"column":32,"nodeType":"670","messageId":"671","endLine":503,"endColumn":34},{"ruleId":"668","severity":1,"message":"669","line":513,"column":76,"nodeType":"670","messageId":"671","endLine":513,"endColumn":78},{"ruleId":"668","severity":1,"message":"690","line":515,"column":100,"nodeType":"670","messageId":"671","endLine":515,"endColumn":102},{"ruleId":"668","severity":1,"message":"690","line":565,"column":100,"nodeType":"670","messageId":"671","endLine":565,"endColumn":102},{"ruleId":"716","severity":1,"message":"717","line":610,"column":7,"nodeType":"718","messageId":"719","endLine":621,"endColumn":8},{"ruleId":"668","severity":1,"message":"669","line":663,"column":21,"nodeType":"670","messageId":"671","endLine":663,"endColumn":23},{"ruleId":"672","severity":1,"message":"720","line":678,"column":11,"nodeType":"674","messageId":"675","endLine":678,"endColumn":29},{"ruleId":"716","severity":1,"message":"717","line":691,"column":7,"nodeType":"718","messageId":"719","endLine":708,"endColumn":8},{"ruleId":"668","severity":1,"message":"669","line":737,"column":46,"nodeType":"670","messageId":"671","endLine":737,"endColumn":48},{"ruleId":"672","severity":1,"message":"721","line":812,"column":11,"nodeType":"674","messageId":"675","endLine":812,"endColumn":33},{"ruleId":"668","severity":1,"message":"669","line":862,"column":48,"nodeType":"670","messageId":"671","endLine":862,"endColumn":50},{"ruleId":"722","severity":1,"message":"723","line":918,"column":25,"nodeType":"724","endLine":918,"endColumn":115},{"ruleId":"722","severity":1,"message":"723","line":932,"column":17,"nodeType":"724","endLine":932,"endColumn":81},{"ruleId":"668","severity":1,"message":"669","line":952,"column":36,"nodeType":"670","messageId":"671","endLine":952,"endColumn":38},{"ruleId":"668","severity":1,"message":"669","line":957,"column":42,"nodeType":"670","messageId":"671","endLine":957,"endColumn":44},{"ruleId":"668","severity":1,"message":"669","line":959,"column":43,"nodeType":"670","messageId":"671","endLine":959,"endColumn":45},{"ruleId":"678","severity":1,"message":"725","line":1007,"column":141,"nodeType":"680","messageId":"681","endLine":1007,"endColumn":143},{"ruleId":"678","severity":1,"message":"725","line":1007,"column":180,"nodeType":"680","messageId":"681","endLine":1007,"endColumn":182},{"ruleId":"668","severity":1,"message":"669","line":1115,"column":59,"nodeType":"670","messageId":"671","endLine":1115,"endColumn":61},{"ruleId":"668","severity":1,"message":"669","line":1115,"column":95,"nodeType":"670","messageId":"671","endLine":1115,"endColumn":97},{"ruleId":"668","severity":1,"message":"669","line":1119,"column":36,"nodeType":"670","messageId":"671","endLine":1119,"endColumn":38},{"ruleId":"672","severity":1,"message":"726","line":10,"column":8,"nodeType":"674","messageId":"675","endLine":10,"endColumn":20},{"ruleId":"672","severity":1,"message":"727","line":37,"column":8,"nodeType":"674","messageId":"675","endLine":37,"endColumn":21},{"ruleId":"672","severity":1,"message":"728","line":38,"column":8,"nodeType":"674","messageId":"675","endLine":38,"endColumn":24},{"ruleId":"672","severity":1,"message":"729","line":128,"column":19,"nodeType":"674","messageId":"675","endLine":128,"endColumn":29},{"ruleId":"672","severity":1,"message":"730","line":134,"column":27,"nodeType":"674","messageId":"675","endLine":134,"endColumn":45},{"ruleId":"668","severity":1,"message":"690","line":493,"column":73,"nodeType":"670","messageId":"671","endLine":493,"endColumn":75},{"ruleId":"668","severity":1,"message":"690","line":493,"column":141,"nodeType":"670","messageId":"671","endLine":493,"endColumn":143},{"ruleId":"668","severity":1,"message":"669","line":882,"column":131,"nodeType":"670","messageId":"671","endLine":882,"endColumn":133},{"ruleId":"668","severity":1,"message":"669","line":882,"column":205,"nodeType":"670","messageId":"671","endLine":882,"endColumn":207},{"ruleId":"668","severity":1,"message":"669","line":882,"column":230,"nodeType":"670","messageId":"671","endLine":882,"endColumn":232},{"ruleId":"672","severity":1,"message":"677","line":33,"column":8,"nodeType":"674","messageId":"675","endLine":33,"endColumn":11},{"ruleId":"672","severity":1,"message":"731","line":85,"column":10,"nodeType":"674","messageId":"675","endLine":85,"endColumn":30},{"ruleId":"672","severity":1,"message":"732","line":85,"column":32,"nodeType":"674","messageId":"675","endLine":85,"endColumn":55},{"ruleId":"668","severity":1,"message":"669","line":103,"column":36,"nodeType":"670","messageId":"671","endLine":103,"endColumn":38},{"ruleId":"672","severity":1,"message":"691","line":14,"column":8,"nodeType":"674","messageId":"675","endLine":14,"endColumn":20},{"ruleId":"672","severity":1,"message":"692","line":15,"column":8,"nodeType":"674","messageId":"675","endLine":15,"endColumn":16},{"ruleId":"672","severity":1,"message":"677","line":22,"column":8,"nodeType":"674","messageId":"675","endLine":22,"endColumn":11},{"ruleId":"672","severity":1,"message":"733","line":47,"column":8,"nodeType":"674","messageId":"675","endLine":47,"endColumn":18},{"ruleId":"672","severity":1,"message":"734","line":48,"column":8,"nodeType":"674","messageId":"675","endLine":48,"endColumn":17},{"ruleId":"668","severity":1,"message":"669","line":126,"column":20,"nodeType":"670","messageId":"671","endLine":126,"endColumn":22},{"ruleId":"668","severity":1,"message":"690","line":138,"column":33,"nodeType":"670","messageId":"671","endLine":138,"endColumn":35},{"ruleId":"668","severity":1,"message":"690","line":138,"column":46,"nodeType":"670","messageId":"671","endLine":138,"endColumn":48},{"ruleId":"668","severity":1,"message":"669","line":167,"column":13,"nodeType":"670","messageId":"671","endLine":167,"endColumn":15},{"ruleId":"668","severity":1,"message":"669","line":169,"column":19,"nodeType":"670","messageId":"671","endLine":169,"endColumn":21},{"ruleId":"668","severity":1,"message":"669","line":169,"column":32,"nodeType":"670","messageId":"671","endLine":169,"endColumn":34},{"ruleId":"668","severity":1,"message":"669","line":169,"column":45,"nodeType":"670","messageId":"671","endLine":169,"endColumn":47},{"ruleId":"668","severity":1,"message":"690","line":173,"column":46,"nodeType":"670","messageId":"671","endLine":173,"endColumn":48},{"ruleId":"668","severity":1,"message":"669","line":179,"column":17,"nodeType":"670","messageId":"671","endLine":179,"endColumn":19},{"ruleId":"668","severity":1,"message":"669","line":182,"column":17,"nodeType":"670","messageId":"671","endLine":182,"endColumn":19},{"ruleId":"668","severity":1,"message":"669","line":184,"column":23,"nodeType":"670","messageId":"671","endLine":184,"endColumn":25},{"ruleId":"668","severity":1,"message":"669","line":186,"column":23,"nodeType":"670","messageId":"671","endLine":186,"endColumn":25},{"ruleId":"668","severity":1,"message":"669","line":186,"column":49,"nodeType":"670","messageId":"671","endLine":186,"endColumn":51},{"ruleId":"672","severity":1,"message":"698","line":196,"column":7,"nodeType":"674","messageId":"675","endLine":196,"endColumn":21},{"ruleId":"668","severity":1,"message":"669","line":201,"column":29,"nodeType":"670","messageId":"671","endLine":201,"endColumn":31},{"ruleId":"668","severity":1,"message":"669","line":203,"column":60,"nodeType":"670","messageId":"671","endLine":203,"endColumn":62},{"ruleId":"672","severity":1,"message":"699","line":240,"column":7,"nodeType":"674","messageId":"675","endLine":240,"endColumn":18},{"ruleId":"672","severity":1,"message":"701","line":262,"column":10,"nodeType":"674","messageId":"675","endLine":262,"endColumn":18},{"ruleId":"668","severity":1,"message":"669","line":288,"column":80,"nodeType":"670","messageId":"671","endLine":288,"endColumn":82},{"ruleId":"705","severity":1,"message":"706","line":303,"column":6,"nodeType":"707","endLine":303,"endColumn":86,"suggestions":"735"},{"ruleId":"705","severity":1,"message":"709","line":329,"column":6,"nodeType":"707","endLine":329,"endColumn":8,"suggestions":"736"},{"ruleId":"672","severity":1,"message":"711","line":345,"column":24,"nodeType":"674","messageId":"675","endLine":345,"endColumn":39},{"ruleId":"668","severity":1,"message":"669","line":377,"column":28,"nodeType":"670","messageId":"671","endLine":377,"endColumn":30},{"ruleId":"668","severity":1,"message":"669","line":426,"column":29,"nodeType":"670","messageId":"671","endLine":426,"endColumn":31},{"ruleId":"672","severity":1,"message":"714","line":462,"column":9,"nodeType":"674","messageId":"675","endLine":462,"endColumn":31},{"ruleId":"668","severity":1,"message":"669","line":465,"column":39,"nodeType":"670","messageId":"671","endLine":465,"endColumn":41},{"ruleId":"668","severity":1,"message":"669","line":465,"column":81,"nodeType":"670","messageId":"671","endLine":465,"endColumn":83},{"ruleId":"668","severity":1,"message":"669","line":471,"column":37,"nodeType":"670","messageId":"671","endLine":471,"endColumn":39},{"ruleId":"672","severity":1,"message":"715","line":485,"column":9,"nodeType":"674","messageId":"675","endLine":485,"endColumn":31},{"ruleId":"668","severity":1,"message":"669","line":486,"column":31,"nodeType":"670","messageId":"671","endLine":486,"endColumn":33},{"ruleId":"668","severity":1,"message":"690","line":513,"column":62,"nodeType":"670","messageId":"671","endLine":513,"endColumn":64},{"ruleId":"668","severity":1,"message":"669","line":550,"column":32,"nodeType":"670","messageId":"671","endLine":550,"endColumn":34},{"ruleId":"668","severity":1,"message":"669","line":560,"column":76,"nodeType":"670","messageId":"671","endLine":560,"endColumn":78},{"ruleId":"668","severity":1,"message":"690","line":562,"column":100,"nodeType":"670","messageId":"671","endLine":562,"endColumn":102},{"ruleId":"668","severity":1,"message":"690","line":612,"column":100,"nodeType":"670","messageId":"671","endLine":612,"endColumn":102},{"ruleId":"716","severity":1,"message":"717","line":657,"column":7,"nodeType":"718","messageId":"719","endLine":668,"endColumn":8},{"ruleId":"668","severity":1,"message":"669","line":710,"column":21,"nodeType":"670","messageId":"671","endLine":710,"endColumn":23},{"ruleId":"716","severity":1,"message":"717","line":738,"column":7,"nodeType":"718","messageId":"719","endLine":755,"endColumn":8},{"ruleId":"668","severity":1,"message":"669","line":784,"column":46,"nodeType":"670","messageId":"671","endLine":784,"endColumn":48},{"ruleId":"668","severity":1,"message":"669","line":909,"column":48,"nodeType":"670","messageId":"671","endLine":909,"endColumn":50},{"ruleId":"668","severity":1,"message":"669","line":1199,"column":50,"nodeType":"670","messageId":"671","endLine":1199,"endColumn":52},{"ruleId":"668","severity":1,"message":"669","line":1259,"column":50,"nodeType":"670","messageId":"671","endLine":1259,"endColumn":52},{"ruleId":"722","severity":1,"message":"723","line":1342,"column":25,"nodeType":"724","endLine":1344,"endColumn":29},{"ruleId":"722","severity":1,"message":"723","line":1358,"column":17,"nodeType":"724","endLine":1358,"endColumn":81},{"ruleId":"668","severity":1,"message":"669","line":1419,"column":36,"nodeType":"670","messageId":"671","endLine":1419,"endColumn":38},{"ruleId":"668","severity":1,"message":"669","line":1424,"column":42,"nodeType":"670","messageId":"671","endLine":1424,"endColumn":44},{"ruleId":"668","severity":1,"message":"669","line":1426,"column":43,"nodeType":"670","messageId":"671","endLine":1426,"endColumn":45},{"ruleId":"678","severity":1,"message":"725","line":1535,"column":141,"nodeType":"680","messageId":"681","endLine":1535,"endColumn":143},{"ruleId":"678","severity":1,"message":"725","line":1535,"column":180,"nodeType":"680","messageId":"681","endLine":1535,"endColumn":182},{"ruleId":"668","severity":1,"message":"669","line":1703,"column":59,"nodeType":"670","messageId":"671","endLine":1703,"endColumn":61},{"ruleId":"668","severity":1,"message":"669","line":1703,"column":95,"nodeType":"670","messageId":"671","endLine":1703,"endColumn":97},{"ruleId":"668","severity":1,"message":"669","line":1707,"column":36,"nodeType":"670","messageId":"671","endLine":1707,"endColumn":38},{"ruleId":"672","severity":1,"message":"677","line":15,"column":8,"nodeType":"674","messageId":"675","endLine":15,"endColumn":11},{"ruleId":"672","severity":1,"message":"731","line":107,"column":12,"nodeType":"674","messageId":"675","endLine":107,"endColumn":32},{"ruleId":"672","severity":1,"message":"732","line":107,"column":34,"nodeType":"674","messageId":"675","endLine":107,"endColumn":57},{"ruleId":"672","severity":1,"message":"737","line":8,"column":8,"nodeType":"674","messageId":"675","endLine":8,"endColumn":18},{"ruleId":"672","severity":1,"message":"738","line":10,"column":9,"nodeType":"674","messageId":"675","endLine":10,"endColumn":13},{"ruleId":"672","severity":1,"message":"739","line":16,"column":8,"nodeType":"674","messageId":"675","endLine":16,"endColumn":19},{"ruleId":"672","severity":1,"message":"740","line":77,"column":10,"nodeType":"674","messageId":"675","endLine":77,"endColumn":15},{"ruleId":"672","severity":1,"message":"741","line":89,"column":9,"nodeType":"674","messageId":"675","endLine":89,"endColumn":16},{"ruleId":"672","severity":1,"message":"742","line":95,"column":9,"nodeType":"674","messageId":"675","endLine":95,"endColumn":19},{"ruleId":"672","severity":1,"message":"743","line":99,"column":9,"nodeType":"674","messageId":"675","endLine":99,"endColumn":19},{"ruleId":"672","severity":1,"message":"729","line":110,"column":19,"nodeType":"674","messageId":"675","endLine":110,"endColumn":29},{"ruleId":"705","severity":1,"message":"744","line":119,"column":6,"nodeType":"707","endLine":119,"endColumn":8,"suggestions":"745"},{"ruleId":"722","severity":1,"message":"723","line":142,"column":15,"nodeType":"724","endLine":142,"endColumn":78},{"ruleId":"722","severity":1,"message":"723","line":154,"column":15,"nodeType":"724","endLine":154,"endColumn":74},{"ruleId":"722","severity":1,"message":"723","line":167,"column":15,"nodeType":"724","endLine":167,"endColumn":80},{"ruleId":"722","severity":1,"message":"723","line":180,"column":15,"nodeType":"724","endLine":180,"endColumn":79},{"ruleId":"672","severity":1,"message":"677","line":26,"column":8,"nodeType":"674","messageId":"675","endLine":26,"endColumn":11},{"ruleId":"672","severity":1,"message":"746","line":9,"column":8,"nodeType":"674","messageId":"675","endLine":9,"endColumn":25},{"ruleId":"672","severity":1,"message":"747","line":61,"column":10,"nodeType":"674","messageId":"675","endLine":61,"endColumn":18},{"ruleId":"672","severity":1,"message":"731","line":68,"column":10,"nodeType":"674","messageId":"675","endLine":68,"endColumn":30},{"ruleId":"672","severity":1,"message":"732","line":68,"column":32,"nodeType":"674","messageId":"675","endLine":68,"endColumn":55},{"ruleId":"705","severity":1,"message":"748","line":141,"column":6,"nodeType":"707","endLine":141,"endColumn":8,"suggestions":"749"},{"ruleId":"668","severity":1,"message":"669","line":230,"column":49,"nodeType":"670","messageId":"671","endLine":230,"endColumn":51},{"ruleId":"672","severity":1,"message":"677","line":3,"column":8,"nodeType":"674","messageId":"675","endLine":3,"endColumn":11},{"ruleId":"672","severity":1,"message":"731","line":19,"column":10,"nodeType":"674","messageId":"675","endLine":19,"endColumn":30},{"ruleId":"672","severity":1,"message":"732","line":19,"column":32,"nodeType":"674","messageId":"675","endLine":19,"endColumn":55},{"ruleId":"668","severity":1,"message":"669","line":93,"column":25,"nodeType":"670","messageId":"671","endLine":93,"endColumn":27},{"ruleId":"668","severity":1,"message":"669","line":123,"column":35,"nodeType":"670","messageId":"671","endLine":123,"endColumn":37},{"ruleId":"668","severity":1,"message":"669","line":126,"column":41,"nodeType":"670","messageId":"671","endLine":126,"endColumn":43},{"ruleId":"668","severity":1,"message":"669","line":130,"column":40,"nodeType":"670","messageId":"671","endLine":130,"endColumn":42},{"ruleId":"668","severity":1,"message":"669","line":224,"column":17,"nodeType":"670","messageId":"671","endLine":224,"endColumn":19},{"ruleId":"668","severity":1,"message":"669","line":224,"column":69,"nodeType":"670","messageId":"671","endLine":224,"endColumn":71},{"ruleId":"705","severity":1,"message":"750","line":307,"column":6,"nodeType":"707","endLine":307,"endColumn":8,"suggestions":"751"},{"ruleId":"672","severity":1,"message":"732","line":83,"column":32,"nodeType":"674","messageId":"675","endLine":83,"endColumn":55},{"ruleId":"668","severity":1,"message":"669","line":85,"column":167,"nodeType":"670","messageId":"671","endLine":85,"endColumn":169},{"ruleId":"672","severity":1,"message":"752","line":108,"column":17,"nodeType":"674","messageId":"675","endLine":108,"endColumn":25},{"ruleId":"672","severity":1,"message":"753","line":109,"column":17,"nodeType":"674","messageId":"675","endLine":109,"endColumn":25},{"ruleId":"672","severity":1,"message":"754","line":110,"column":22,"nodeType":"674","messageId":"675","endLine":110,"endColumn":35},{"ruleId":"668","severity":1,"message":"669","line":186,"column":24,"nodeType":"670","messageId":"671","endLine":186,"endColumn":26},{"ruleId":"672","severity":1,"message":"755","line":343,"column":11,"nodeType":"674","messageId":"675","endLine":343,"endColumn":19},{"ruleId":"668","severity":1,"message":"669","line":431,"column":297,"nodeType":"670","messageId":"671","endLine":431,"endColumn":299},{"ruleId":"668","severity":1,"message":"669","line":431,"column":381,"nodeType":"670","messageId":"671","endLine":431,"endColumn":383},{"ruleId":"668","severity":1,"message":"669","line":583,"column":96,"nodeType":"670","messageId":"671","endLine":583,"endColumn":98},{"ruleId":"668","severity":1,"message":"669","line":583,"column":122,"nodeType":"670","messageId":"671","endLine":583,"endColumn":124},{"ruleId":"668","severity":1,"message":"669","line":884,"column":42,"nodeType":"670","messageId":"671","endLine":884,"endColumn":44},{"ruleId":"756","severity":1,"message":"757","line":952,"column":45,"nodeType":"758","messageId":"759","endLine":952,"endColumn":46},{"ruleId":"756","severity":1,"message":"757","line":1130,"column":42,"nodeType":"758","messageId":"759","endLine":1130,"endColumn":43},{"ruleId":"672","severity":1,"message":"740","line":59,"column":10,"nodeType":"674","messageId":"675","endLine":59,"endColumn":15},{"ruleId":"672","severity":1,"message":"742","line":77,"column":9,"nodeType":"674","messageId":"675","endLine":77,"endColumn":19},{"ruleId":"672","severity":1,"message":"743","line":81,"column":9,"nodeType":"674","messageId":"675","endLine":81,"endColumn":19},{"ruleId":"672","severity":1,"message":"760","line":11,"column":8,"nodeType":"674","messageId":"675","endLine":11,"endColumn":19},{"ruleId":"672","severity":1,"message":"677","line":23,"column":8,"nodeType":"674","messageId":"675","endLine":23,"endColumn":11},{"ruleId":"672","severity":1,"message":"761","line":36,"column":8,"nodeType":"674","messageId":"675","endLine":36,"endColumn":17},{"ruleId":"672","severity":1,"message":"731","line":139,"column":12,"nodeType":"674","messageId":"675","endLine":139,"endColumn":32},{"ruleId":"672","severity":1,"message":"732","line":139,"column":34,"nodeType":"674","messageId":"675","endLine":139,"endColumn":57},{"ruleId":"668","severity":1,"message":"690","line":233,"column":49,"nodeType":"670","messageId":"671","endLine":233,"endColumn":51},{"ruleId":"668","severity":1,"message":"690","line":238,"column":53,"nodeType":"670","messageId":"671","endLine":238,"endColumn":55},{"ruleId":"705","severity":1,"message":"762","line":477,"column":8,"nodeType":"707","endLine":477,"endColumn":22,"suggestions":"763"},{"ruleId":"764","severity":1,"message":"765","line":1017,"column":21,"nodeType":"724","endLine":1017,"endColumn":143},{"ruleId":"672","severity":1,"message":"738","line":6,"column":9,"nodeType":"674","messageId":"675","endLine":6,"endColumn":13},{"ruleId":"672","severity":1,"message":"766","line":16,"column":20,"nodeType":"674","messageId":"675","endLine":16,"endColumn":27},{"ruleId":"672","severity":1,"message":"767","line":16,"column":60,"nodeType":"674","messageId":"675","endLine":16,"endColumn":77},{"ruleId":"672","severity":1,"message":"768","line":16,"column":79,"nodeType":"674","messageId":"675","endLine":16,"endColumn":88},{"ruleId":"672","severity":1,"message":"769","line":16,"column":90,"nodeType":"674","messageId":"675","endLine":16,"endColumn":102},{"ruleId":"672","severity":1,"message":"770","line":22,"column":18,"nodeType":"674","messageId":"675","endLine":22,"endColumn":27},{"ruleId":"672","severity":1,"message":"771","line":23,"column":18,"nodeType":"674","messageId":"675","endLine":23,"endColumn":27},{"ruleId":"672","severity":1,"message":"772","line":24,"column":18,"nodeType":"674","messageId":"675","endLine":24,"endColumn":27},{"ruleId":"672","severity":1,"message":"773","line":25,"column":18,"nodeType":"674","messageId":"675","endLine":25,"endColumn":27},{"ruleId":"672","severity":1,"message":"774","line":26,"column":10,"nodeType":"674","messageId":"675","endLine":26,"endColumn":16},{"ruleId":"672","severity":1,"message":"775","line":26,"column":18,"nodeType":"674","messageId":"675","endLine":26,"endColumn":27},{"ruleId":"672","severity":1,"message":"776","line":60,"column":9,"nodeType":"674","messageId":"675","endLine":60,"endColumn":12},{"ruleId":"672","severity":1,"message":"777","line":63,"column":9,"nodeType":"674","messageId":"675","endLine":63,"endColumn":18},{"ruleId":"668","severity":1,"message":"669","line":108,"column":29,"nodeType":"670","messageId":"671","endLine":108,"endColumn":31},{"ruleId":"668","severity":1,"message":"669","line":108,"column":49,"nodeType":"670","messageId":"671","endLine":108,"endColumn":51},{"ruleId":"668","severity":1,"message":"669","line":112,"column":32,"nodeType":"670","messageId":"671","endLine":112,"endColumn":34},{"ruleId":"668","severity":1,"message":"690","line":112,"column":52,"nodeType":"670","messageId":"671","endLine":112,"endColumn":54},{"ruleId":"672","severity":1,"message":"778","line":159,"column":9,"nodeType":"674","messageId":"675","endLine":159,"endColumn":19},{"ruleId":"779","severity":1,"message":"780","line":182,"column":9,"nodeType":"781","messageId":"671","endLine":184,"endColumn":17},{"ruleId":"672","severity":1,"message":"782","line":207,"column":13,"nodeType":"674","messageId":"675","endLine":207,"endColumn":22},{"ruleId":"722","severity":1,"message":"723","line":239,"column":11,"nodeType":"724","endLine":239,"endColumn":34},{"ruleId":"722","severity":1,"message":"723","line":331,"column":11,"nodeType":"724","endLine":333,"endColumn":15},{"ruleId":"672","severity":1,"message":"783","line":6,"column":8,"nodeType":"674","messageId":"675","endLine":6,"endColumn":17},{"ruleId":"668","severity":1,"message":"669","line":223,"column":44,"nodeType":"670","messageId":"671","endLine":223,"endColumn":46},{"ruleId":"668","severity":1,"message":"669","line":451,"column":53,"nodeType":"670","messageId":"671","endLine":451,"endColumn":55},{"ruleId":"668","severity":1,"message":"669","line":512,"column":28,"nodeType":"670","messageId":"671","endLine":512,"endColumn":30},{"ruleId":"668","severity":1,"message":"669","line":747,"column":58,"nodeType":"670","messageId":"671","endLine":747,"endColumn":60},{"ruleId":"672","severity":1,"message":"677","line":20,"column":8,"nodeType":"674","messageId":"675","endLine":20,"endColumn":11},{"ruleId":"716","severity":1,"message":"717","line":74,"column":3,"nodeType":"718","messageId":"719","endLine":113,"endColumn":4},{"ruleId":"668","severity":1,"message":"669","line":162,"column":31,"nodeType":"670","messageId":"671","endLine":162,"endColumn":33},{"ruleId":"668","severity":1,"message":"669","line":205,"column":29,"nodeType":"670","messageId":"671","endLine":205,"endColumn":31},{"ruleId":"705","severity":1,"message":"784","line":267,"column":6,"nodeType":"707","endLine":267,"endColumn":8,"suggestions":"785"},{"ruleId":"716","severity":1,"message":"717","line":270,"column":3,"nodeType":"718","messageId":"719","endLine":304,"endColumn":4},{"ruleId":"672","severity":1,"message":"786","line":2,"column":37,"nodeType":"674","messageId":"675","endLine":2,"endColumn":46},{"ruleId":"672","severity":1,"message":"787","line":4,"column":13,"nodeType":"674","messageId":"675","endLine":4,"endColumn":19},{"ruleId":"672","severity":1,"message":"788","line":8,"column":8,"nodeType":"674","messageId":"675","endLine":8,"endColumn":17},{"ruleId":"672","severity":1,"message":"789","line":9,"column":8,"nodeType":"674","messageId":"675","endLine":9,"endColumn":14},{"ruleId":"672","severity":1,"message":"790","line":10,"column":8,"nodeType":"674","messageId":"675","endLine":10,"endColumn":20},{"ruleId":"672","severity":1,"message":"791","line":11,"column":8,"nodeType":"674","messageId":"675","endLine":11,"endColumn":14},{"ruleId":"672","severity":1,"message":"738","line":13,"column":10,"nodeType":"674","messageId":"675","endLine":13,"endColumn":14},{"ruleId":"672","severity":1,"message":"792","line":13,"column":37,"nodeType":"674","messageId":"675","endLine":13,"endColumn":45},{"ruleId":"672","severity":1,"message":"793","line":14,"column":8,"nodeType":"674","messageId":"675","endLine":14,"endColumn":12},{"ruleId":"672","severity":1,"message":"794","line":18,"column":5,"nodeType":"674","messageId":"675","endLine":18,"endColumn":25},{"ruleId":"672","severity":1,"message":"795","line":19,"column":5,"nodeType":"674","messageId":"675","endLine":19,"endColumn":42},{"ruleId":"672","severity":1,"message":"677","line":22,"column":8,"nodeType":"674","messageId":"675","endLine":22,"endColumn":11},{"ruleId":"672","severity":1,"message":"796","line":25,"column":8,"nodeType":"674","messageId":"675","endLine":25,"endColumn":12},{"ruleId":"672","severity":1,"message":"695","line":26,"column":8,"nodeType":"674","messageId":"675","endLine":26,"endColumn":15},{"ruleId":"672","severity":1,"message":"797","line":27,"column":8,"nodeType":"674","messageId":"675","endLine":27,"endColumn":16},{"ruleId":"672","severity":1,"message":"798","line":28,"column":8,"nodeType":"674","messageId":"675","endLine":28,"endColumn":20},{"ruleId":"672","severity":1,"message":"726","line":29,"column":8,"nodeType":"674","messageId":"675","endLine":29,"endColumn":20},{"ruleId":"672","severity":1,"message":"799","line":30,"column":8,"nodeType":"674","messageId":"675","endLine":30,"endColumn":22},{"ruleId":"672","severity":1,"message":"800","line":31,"column":8,"nodeType":"674","messageId":"675","endLine":31,"endColumn":20},{"ruleId":"672","severity":1,"message":"801","line":32,"column":8,"nodeType":"674","messageId":"675","endLine":32,"endColumn":23},{"ruleId":"672","severity":1,"message":"802","line":33,"column":8,"nodeType":"674","messageId":"675","endLine":33,"endColumn":21},{"ruleId":"672","severity":1,"message":"803","line":34,"column":8,"nodeType":"674","messageId":"675","endLine":34,"endColumn":20},{"ruleId":"672","severity":1,"message":"761","line":35,"column":8,"nodeType":"674","messageId":"675","endLine":35,"endColumn":17},{"ruleId":"672","severity":1,"message":"804","line":36,"column":8,"nodeType":"674","messageId":"675","endLine":36,"endColumn":11},{"ruleId":"672","severity":1,"message":"805","line":38,"column":8,"nodeType":"674","messageId":"675","endLine":38,"endColumn":15},{"ruleId":"672","severity":1,"message":"806","line":39,"column":8,"nodeType":"674","messageId":"675","endLine":39,"endColumn":26},{"ruleId":"672","severity":1,"message":"807","line":64,"column":8,"nodeType":"674","messageId":"675","endLine":64,"endColumn":19},{"ruleId":"672","severity":1,"message":"808","line":67,"column":10,"nodeType":"674","messageId":"675","endLine":67,"endColumn":18},{"ruleId":"672","severity":1,"message":"809","line":71,"column":10,"nodeType":"674","messageId":"675","endLine":71,"endColumn":20},{"ruleId":"672","severity":1,"message":"810","line":121,"column":7,"nodeType":"674","messageId":"675","endLine":121,"endColumn":17},{"ruleId":"672","severity":1,"message":"732","line":127,"column":34,"nodeType":"674","messageId":"675","endLine":127,"endColumn":57},{"ruleId":"672","severity":1,"message":"741","line":130,"column":11,"nodeType":"674","messageId":"675","endLine":130,"endColumn":18},{"ruleId":"672","severity":1,"message":"811","line":135,"column":12,"nodeType":"674","messageId":"675","endLine":135,"endColumn":36},{"ruleId":"672","severity":1,"message":"812","line":135,"column":38,"nodeType":"674","messageId":"675","endLine":135,"endColumn":65},{"ruleId":"722","severity":1,"message":"723","line":244,"column":28,"nodeType":"724","endLine":244,"endColumn":96},{"ruleId":"722","severity":1,"message":"723","line":245,"column":28,"nodeType":"724","endLine":245,"endColumn":100},{"ruleId":"672","severity":1,"message":"677","line":7,"column":8,"nodeType":"674","messageId":"675","endLine":7,"endColumn":11},{"ruleId":"672","severity":1,"message":"731","line":82,"column":10,"nodeType":"674","messageId":"675","endLine":82,"endColumn":30},{"ruleId":"672","severity":1,"message":"732","line":82,"column":32,"nodeType":"674","messageId":"675","endLine":82,"endColumn":55},{"ruleId":"672","severity":1,"message":"740","line":93,"column":12,"nodeType":"674","messageId":"675","endLine":93,"endColumn":17},{"ruleId":"672","severity":1,"message":"743","line":100,"column":9,"nodeType":"674","messageId":"675","endLine":100,"endColumn":19},{"ruleId":"672","severity":1,"message":"813","line":4,"column":11,"nodeType":"674","messageId":"675","endLine":4,"endColumn":14},{"ruleId":"672","severity":1,"message":"814","line":4,"column":16,"nodeType":"674","messageId":"675","endLine":4,"endColumn":19},{"ruleId":"672","severity":1,"message":"795","line":6,"column":3,"nodeType":"674","messageId":"675","endLine":6,"endColumn":40},{"ruleId":"672","severity":1,"message":"755","line":39,"column":9,"nodeType":"674","messageId":"675","endLine":39,"endColumn":17},{"ruleId":"672","severity":1,"message":"815","line":40,"column":9,"nodeType":"674","messageId":"675","endLine":40,"endColumn":17},{"ruleId":"672","severity":1,"message":"816","line":41,"column":9,"nodeType":"674","messageId":"675","endLine":41,"endColumn":26},{"ruleId":"672","severity":1,"message":"817","line":44,"column":9,"nodeType":"674","messageId":"675","endLine":44,"endColumn":22},{"ruleId":"672","severity":1,"message":"741","line":48,"column":9,"nodeType":"674","messageId":"675","endLine":48,"endColumn":16},{"ruleId":"672","severity":1,"message":"818","line":9,"column":8,"nodeType":"674","messageId":"675","endLine":9,"endColumn":22},{"ruleId":"672","severity":1,"message":"800","line":14,"column":8,"nodeType":"674","messageId":"675","endLine":14,"endColumn":20},{"ruleId":"672","severity":1,"message":"731","line":37,"column":10,"nodeType":"674","messageId":"675","endLine":37,"endColumn":30},{"ruleId":"672","severity":1,"message":"732","line":37,"column":32,"nodeType":"674","messageId":"675","endLine":37,"endColumn":55},{"ruleId":"672","severity":1,"message":"819","line":1,"column":16,"nodeType":"674","messageId":"675","endLine":1,"endColumn":24},{"ruleId":"672","severity":1,"message":"738","line":3,"column":9,"nodeType":"674","messageId":"675","endLine":3,"endColumn":13},{"ruleId":"672","severity":1,"message":"820","line":7,"column":8,"nodeType":"674","messageId":"675","endLine":7,"endColumn":18},{"ruleId":"672","severity":1,"message":"821","line":8,"column":8,"nodeType":"674","messageId":"675","endLine":8,"endColumn":16},{"ruleId":"672","severity":1,"message":"822","line":10,"column":8,"nodeType":"674","messageId":"675","endLine":10,"endColumn":19},{"ruleId":"672","severity":1,"message":"823","line":11,"column":8,"nodeType":"674","messageId":"675","endLine":11,"endColumn":14},{"ruleId":"672","severity":1,"message":"824","line":54,"column":7,"nodeType":"674","messageId":"675","endLine":54,"endColumn":16},{"ruleId":"722","severity":1,"message":"723","line":243,"column":13,"nodeType":"724","endLine":243,"endColumn":101},{"ruleId":"722","severity":1,"message":"723","line":257,"column":13,"nodeType":"724","endLine":257,"endColumn":98},{"ruleId":"672","severity":1,"message":"819","line":1,"column":16,"nodeType":"674","messageId":"675","endLine":1,"endColumn":24},{"ruleId":"672","severity":1,"message":"738","line":3,"column":9,"nodeType":"674","messageId":"675","endLine":3,"endColumn":13},{"ruleId":"672","severity":1,"message":"820","line":7,"column":8,"nodeType":"674","messageId":"675","endLine":7,"endColumn":18},{"ruleId":"672","severity":1,"message":"821","line":8,"column":8,"nodeType":"674","messageId":"675","endLine":8,"endColumn":16},{"ruleId":"672","severity":1,"message":"822","line":10,"column":8,"nodeType":"674","messageId":"675","endLine":10,"endColumn":19},{"ruleId":"672","severity":1,"message":"823","line":11,"column":8,"nodeType":"674","messageId":"675","endLine":11,"endColumn":14},{"ruleId":"672","severity":1,"message":"824","line":54,"column":7,"nodeType":"674","messageId":"675","endLine":54,"endColumn":16},{"ruleId":"722","severity":1,"message":"723","line":243,"column":13,"nodeType":"724","endLine":243,"endColumn":101},{"ruleId":"722","severity":1,"message":"723","line":257,"column":13,"nodeType":"724","endLine":257,"endColumn":98},{"ruleId":"672","severity":1,"message":"819","line":1,"column":16,"nodeType":"674","messageId":"675","endLine":1,"endColumn":24},{"ruleId":"672","severity":1,"message":"738","line":3,"column":9,"nodeType":"674","messageId":"675","endLine":3,"endColumn":13},{"ruleId":"672","severity":1,"message":"820","line":7,"column":8,"nodeType":"674","messageId":"675","endLine":7,"endColumn":18},{"ruleId":"672","severity":1,"message":"821","line":8,"column":8,"nodeType":"674","messageId":"675","endLine":8,"endColumn":16},{"ruleId":"672","severity":1,"message":"822","line":9,"column":8,"nodeType":"674","messageId":"675","endLine":9,"endColumn":19},{"ruleId":"672","severity":1,"message":"823","line":10,"column":8,"nodeType":"674","messageId":"675","endLine":10,"endColumn":14},{"ruleId":"672","severity":1,"message":"824","line":53,"column":7,"nodeType":"674","messageId":"675","endLine":53,"endColumn":16},{"ruleId":"722","severity":1,"message":"723","line":176,"column":13,"nodeType":"724","endLine":176,"endColumn":101},{"ruleId":"722","severity":1,"message":"723","line":190,"column":13,"nodeType":"724","endLine":190,"endColumn":98},{"ruleId":"672","severity":1,"message":"819","line":1,"column":16,"nodeType":"674","messageId":"675","endLine":1,"endColumn":24},{"ruleId":"672","severity":1,"message":"738","line":3,"column":9,"nodeType":"674","messageId":"675","endLine":3,"endColumn":13},{"ruleId":"722","severity":1,"message":"723","line":103,"column":13,"nodeType":"724","endLine":103,"endColumn":101},{"ruleId":"722","severity":1,"message":"723","line":117,"column":13,"nodeType":"724","endLine":117,"endColumn":98},{"ruleId":"672","severity":1,"message":"825","line":5,"column":8,"nodeType":"674","messageId":"675","endLine":5,"endColumn":22},{"ruleId":"672","severity":1,"message":"727","line":6,"column":8,"nodeType":"674","messageId":"675","endLine":6,"endColumn":21},{"ruleId":"672","severity":1,"message":"728","line":7,"column":8,"nodeType":"674","messageId":"675","endLine":7,"endColumn":24},{"ruleId":"672","severity":1,"message":"826","line":8,"column":26,"nodeType":"674","messageId":"675","endLine":8,"endColumn":35},{"ruleId":"672","severity":1,"message":"827","line":9,"column":8,"nodeType":"674","messageId":"675","endLine":9,"endColumn":31},{"ruleId":"672","severity":1,"message":"828","line":11,"column":8,"nodeType":"674","messageId":"675","endLine":11,"endColumn":18},{"ruleId":"672","severity":1,"message":"821","line":40,"column":8,"nodeType":"674","messageId":"675","endLine":40,"endColumn":16},{"ruleId":"672","severity":1,"message":"820","line":41,"column":8,"nodeType":"674","messageId":"675","endLine":41,"endColumn":18},{"ruleId":"672","severity":1,"message":"823","line":42,"column":8,"nodeType":"674","messageId":"675","endLine":42,"endColumn":14},{"ruleId":"672","severity":1,"message":"829","line":45,"column":8,"nodeType":"674","messageId":"675","endLine":45,"endColumn":17},{"ruleId":"672","severity":1,"message":"830","line":46,"column":8,"nodeType":"674","messageId":"675","endLine":46,"endColumn":16},{"ruleId":"672","severity":1,"message":"831","line":47,"column":8,"nodeType":"674","messageId":"675","endLine":47,"endColumn":32},{"ruleId":"672","severity":1,"message":"832","line":48,"column":8,"nodeType":"674","messageId":"675","endLine":48,"endColumn":20},{"ruleId":"672","severity":1,"message":"733","line":53,"column":8,"nodeType":"674","messageId":"675","endLine":53,"endColumn":18},{"ruleId":"672","severity":1,"message":"734","line":54,"column":8,"nodeType":"674","messageId":"675","endLine":54,"endColumn":17},{"ruleId":"672","severity":1,"message":"833","line":60,"column":8,"nodeType":"674","messageId":"675","endLine":60,"endColumn":13},{"ruleId":"672","severity":1,"message":"834","line":66,"column":8,"nodeType":"674","messageId":"675","endLine":66,"endColumn":16},{"ruleId":"672","severity":1,"message":"835","line":67,"column":8,"nodeType":"674","messageId":"675","endLine":67,"endColumn":30},{"ruleId":"672","severity":1,"message":"836","line":72,"column":8,"nodeType":"674","messageId":"675","endLine":72,"endColumn":17},{"ruleId":"672","severity":1,"message":"837","line":76,"column":8,"nodeType":"674","messageId":"675","endLine":76,"endColumn":30},{"ruleId":"672","severity":1,"message":"838","line":77,"column":8,"nodeType":"674","messageId":"675","endLine":77,"endColumn":19},{"ruleId":"672","severity":1,"message":"804","line":89,"column":8,"nodeType":"674","messageId":"675","endLine":89,"endColumn":11},{"ruleId":"672","severity":1,"message":"839","line":90,"column":8,"nodeType":"674","messageId":"675","endLine":90,"endColumn":26},{"ruleId":"672","severity":1,"message":"840","line":93,"column":8,"nodeType":"674","messageId":"675","endLine":93,"endColumn":13},{"ruleId":"672","severity":1,"message":"841","line":94,"column":8,"nodeType":"674","messageId":"675","endLine":94,"endColumn":18},{"ruleId":"672","severity":1,"message":"842","line":95,"column":8,"nodeType":"674","messageId":"675","endLine":95,"endColumn":24},{"ruleId":"672","severity":1,"message":"822","line":96,"column":8,"nodeType":"674","messageId":"675","endLine":96,"endColumn":19},{"ruleId":"672","severity":1,"message":"843","line":97,"column":8,"nodeType":"674","messageId":"675","endLine":97,"endColumn":17},{"ruleId":"672","severity":1,"message":"677","line":99,"column":8,"nodeType":"674","messageId":"675","endLine":99,"endColumn":11},{"ruleId":"672","severity":1,"message":"695","line":103,"column":8,"nodeType":"674","messageId":"675","endLine":103,"endColumn":15},{"ruleId":"672","severity":1,"message":"796","line":105,"column":8,"nodeType":"674","messageId":"675","endLine":105,"endColumn":12},{"ruleId":"672","severity":1,"message":"797","line":106,"column":8,"nodeType":"674","messageId":"675","endLine":106,"endColumn":16},{"ruleId":"672","severity":1,"message":"726","line":107,"column":8,"nodeType":"674","messageId":"675","endLine":107,"endColumn":20},{"ruleId":"672","severity":1,"message":"844","line":109,"column":8,"nodeType":"674","messageId":"675","endLine":109,"endColumn":22},{"ruleId":"672","severity":1,"message":"800","line":110,"column":8,"nodeType":"674","messageId":"675","endLine":110,"endColumn":20},{"ruleId":"672","severity":1,"message":"845","line":113,"column":8,"nodeType":"674","messageId":"675","endLine":113,"endColumn":21},{"ruleId":"672","severity":1,"message":"846","line":301,"column":7,"nodeType":"674","messageId":"675","endLine":301,"endColumn":32},{"ruleId":"672","severity":1,"message":"847","line":383,"column":31,"nodeType":"674","messageId":"675","endLine":383,"endColumn":52},{"ruleId":"672","severity":1,"message":"848","line":387,"column":26,"nodeType":"674","messageId":"675","endLine":387,"endColumn":43},{"ruleId":"672","severity":1,"message":"849","line":464,"column":17,"nodeType":"674","messageId":"675","endLine":464,"endColumn":22},{"ruleId":"668","severity":1,"message":"669","line":485,"column":23,"nodeType":"670","messageId":"671","endLine":485,"endColumn":25},{"ruleId":"668","severity":1,"message":"669","line":503,"column":24,"nodeType":"670","messageId":"671","endLine":503,"endColumn":26},{"ruleId":"668","severity":1,"message":"669","line":503,"column":52,"nodeType":"670","messageId":"671","endLine":503,"endColumn":54},{"ruleId":"668","severity":1,"message":"669","line":513,"column":28,"nodeType":"670","messageId":"671","endLine":513,"endColumn":30},{"ruleId":"668","severity":1,"message":"669","line":541,"column":27,"nodeType":"670","messageId":"671","endLine":541,"endColumn":29},{"ruleId":"668","severity":1,"message":"669","line":553,"column":24,"nodeType":"670","messageId":"671","endLine":553,"endColumn":26},{"ruleId":"668","severity":1,"message":"669","line":553,"column":52,"nodeType":"670","messageId":"671","endLine":553,"endColumn":54},{"ruleId":"668","severity":1,"message":"669","line":567,"column":22,"nodeType":"670","messageId":"671","endLine":567,"endColumn":24},{"ruleId":"668","severity":1,"message":"669","line":627,"column":24,"nodeType":"670","messageId":"671","endLine":627,"endColumn":26},{"ruleId":"668","severity":1,"message":"669","line":633,"column":31,"nodeType":"670","messageId":"671","endLine":633,"endColumn":33},{"ruleId":"668","severity":1,"message":"669","line":730,"column":42,"nodeType":"670","messageId":"671","endLine":730,"endColumn":44},{"ruleId":"668","severity":1,"message":"690","line":730,"column":72,"nodeType":"670","messageId":"671","endLine":730,"endColumn":74},{"ruleId":"668","severity":1,"message":"669","line":778,"column":83,"nodeType":"670","messageId":"671","endLine":778,"endColumn":85},{"ruleId":"668","severity":1,"message":"669","line":789,"column":79,"nodeType":"670","messageId":"671","endLine":789,"endColumn":81},{"ruleId":"668","severity":1,"message":"669","line":823,"column":81,"nodeType":"670","messageId":"671","endLine":823,"endColumn":83},{"ruleId":"668","severity":1,"message":"690","line":852,"column":103,"nodeType":"670","messageId":"671","endLine":852,"endColumn":105},{"ruleId":"668","severity":1,"message":"669","line":855,"column":33,"nodeType":"670","messageId":"671","endLine":855,"endColumn":35},{"ruleId":"668","severity":1,"message":"690","line":887,"column":112,"nodeType":"670","messageId":"671","endLine":887,"endColumn":114},{"ruleId":"668","severity":1,"message":"669","line":957,"column":32,"nodeType":"670","messageId":"671","endLine":957,"endColumn":34},{"ruleId":"668","severity":1,"message":"669","line":963,"column":28,"nodeType":"670","messageId":"671","endLine":963,"endColumn":30},{"ruleId":"705","severity":1,"message":"850","line":1041,"column":6,"nodeType":"707","endLine":1041,"endColumn":8,"suggestions":"851"},{"ruleId":"668","severity":1,"message":"669","line":1519,"column":27,"nodeType":"670","messageId":"671","endLine":1519,"endColumn":29},{"ruleId":"668","severity":1,"message":"669","line":1738,"column":33,"nodeType":"670","messageId":"671","endLine":1738,"endColumn":35},{"ruleId":"668","severity":1,"message":"669","line":1823,"column":48,"nodeType":"670","messageId":"671","endLine":1823,"endColumn":50},{"ruleId":"668","severity":1,"message":"669","line":1834,"column":44,"nodeType":"670","messageId":"671","endLine":1834,"endColumn":46},{"ruleId":"668","severity":1,"message":"669","line":1898,"column":33,"nodeType":"670","messageId":"671","endLine":1898,"endColumn":35},{"ruleId":"756","severity":1,"message":"757","line":2269,"column":33,"nodeType":"758","messageId":"759","endLine":2269,"endColumn":34},{"ruleId":"668","severity":1,"message":"690","line":2391,"column":75,"nodeType":"670","messageId":"671","endLine":2391,"endColumn":77},{"ruleId":"668","severity":1,"message":"669","line":2472,"column":37,"nodeType":"670","messageId":"671","endLine":2472,"endColumn":39},{"ruleId":"852","severity":1,"message":"853","line":2502,"column":38,"nodeType":"854","messageId":"855","endLine":2502,"endColumn":112,"fix":"856"},{"ruleId":"668","severity":1,"message":"669","line":2529,"column":68,"nodeType":"670","messageId":"671","endLine":2529,"endColumn":70},{"ruleId":"668","severity":1,"message":"669","line":2531,"column":65,"nodeType":"670","messageId":"671","endLine":2531,"endColumn":67},{"ruleId":"857","severity":1,"message":"858","line":2540,"column":49,"nodeType":"670","messageId":"859","endLine":2540,"endColumn":74},{"ruleId":"668","severity":1,"message":"669","line":2540,"column":68,"nodeType":"670","messageId":"671","endLine":2540,"endColumn":70},{"ruleId":"668","severity":1,"message":"669","line":2540,"column":97,"nodeType":"670","messageId":"671","endLine":2540,"endColumn":99},{"ruleId":"668","severity":1,"message":"669","line":2546,"column":68,"nodeType":"670","messageId":"671","endLine":2546,"endColumn":70},{"ruleId":"668","severity":1,"message":"669","line":2547,"column":65,"nodeType":"670","messageId":"671","endLine":2547,"endColumn":67},{"ruleId":"668","severity":1,"message":"669","line":2581,"column":37,"nodeType":"670","messageId":"671","endLine":2581,"endColumn":39},{"ruleId":"852","severity":1,"message":"853","line":2615,"column":42,"nodeType":"854","messageId":"855","endLine":2615,"endColumn":116,"fix":"860"},{"ruleId":"668","severity":1,"message":"669","line":2652,"column":35,"nodeType":"670","messageId":"671","endLine":2652,"endColumn":37},{"ruleId":"668","severity":1,"message":"669","line":2656,"column":56,"nodeType":"670","messageId":"671","endLine":2656,"endColumn":58},{"ruleId":"852","severity":1,"message":"853","line":2693,"column":42,"nodeType":"854","messageId":"855","endLine":2693,"endColumn":116,"fix":"861"},{"ruleId":"722","severity":1,"message":"723","line":2751,"column":17,"nodeType":"724","endLine":2751,"endColumn":74},{"ruleId":"672","severity":1,"message":"738","line":2,"column":9,"nodeType":"674","messageId":"675","endLine":2,"endColumn":13},{"ruleId":"672","severity":1,"message":"826","line":2,"column":26,"nodeType":"674","messageId":"675","endLine":2,"endColumn":35},{"ruleId":"672","severity":1,"message":"693","line":3,"column":8,"nodeType":"674","messageId":"675","endLine":3,"endColumn":17},{"ruleId":"668","severity":1,"message":"669","line":32,"column":81,"nodeType":"670","messageId":"671","endLine":32,"endColumn":83},{"ruleId":"722","severity":1,"message":"723","line":40,"column":21,"nodeType":"724","endLine":40,"endColumn":93},{"ruleId":"672","severity":1,"message":"738","line":2,"column":9,"nodeType":"674","messageId":"675","endLine":2,"endColumn":13},{"ruleId":"672","severity":1,"message":"826","line":2,"column":26,"nodeType":"674","messageId":"675","endLine":2,"endColumn":35},{"ruleId":"672","severity":1,"message":"693","line":3,"column":8,"nodeType":"674","messageId":"675","endLine":3,"endColumn":17},{"ruleId":"672","severity":1,"message":"862","line":6,"column":10,"nodeType":"674","messageId":"675","endLine":6,"endColumn":21},{"ruleId":"672","severity":1,"message":"863","line":8,"column":8,"nodeType":"674","messageId":"675","endLine":8,"endColumn":21},{"ruleId":"672","severity":1,"message":"864","line":14,"column":8,"nodeType":"674","messageId":"675","endLine":14,"endColumn":20},{"ruleId":"672","severity":1,"message":"829","line":15,"column":8,"nodeType":"674","messageId":"675","endLine":15,"endColumn":17},{"ruleId":"672","severity":1,"message":"865","line":21,"column":8,"nodeType":"674","messageId":"675","endLine":21,"endColumn":16},{"ruleId":"672","severity":1,"message":"866","line":22,"column":8,"nodeType":"674","messageId":"675","endLine":22,"endColumn":24},{"ruleId":"672","severity":1,"message":"733","line":23,"column":8,"nodeType":"674","messageId":"675","endLine":23,"endColumn":18},{"ruleId":"672","severity":1,"message":"734","line":24,"column":8,"nodeType":"674","messageId":"675","endLine":24,"endColumn":17},{"ruleId":"672","severity":1,"message":"867","line":26,"column":8,"nodeType":"674","messageId":"675","endLine":26,"endColumn":16},{"ruleId":"672","severity":1,"message":"868","line":27,"column":8,"nodeType":"674","messageId":"675","endLine":27,"endColumn":16},{"ruleId":"672","severity":1,"message":"869","line":29,"column":8,"nodeType":"674","messageId":"675","endLine":29,"endColumn":26},{"ruleId":"672","severity":1,"message":"833","line":30,"column":8,"nodeType":"674","messageId":"675","endLine":30,"endColumn":13},{"ruleId":"672","severity":1,"message":"870","line":33,"column":8,"nodeType":"674","messageId":"675","endLine":33,"endColumn":23},{"ruleId":"672","severity":1,"message":"871","line":34,"column":9,"nodeType":"674","messageId":"675","endLine":34,"endColumn":13},{"ruleId":"672","severity":1,"message":"872","line":34,"column":15,"nodeType":"674","messageId":"675","endLine":34,"endColumn":25},{"ruleId":"672","severity":1,"message":"873","line":34,"column":27,"nodeType":"674","messageId":"675","endLine":34,"endColumn":35},{"ruleId":"672","severity":1,"message":"834","line":36,"column":8,"nodeType":"674","messageId":"675","endLine":36,"endColumn":16},{"ruleId":"672","severity":1,"message":"835","line":37,"column":8,"nodeType":"674","messageId":"675","endLine":37,"endColumn":30},{"ruleId":"672","severity":1,"message":"874","line":39,"column":8,"nodeType":"674","messageId":"675","endLine":39,"endColumn":22},{"ruleId":"672","severity":1,"message":"807","line":40,"column":8,"nodeType":"674","messageId":"675","endLine":40,"endColumn":19},{"ruleId":"672","severity":1,"message":"783","line":41,"column":8,"nodeType":"674","messageId":"675","endLine":41,"endColumn":17},{"ruleId":"672","severity":1,"message":"875","line":44,"column":8,"nodeType":"674","messageId":"675","endLine":44,"endColumn":13},{"ruleId":"672","severity":1,"message":"677","line":58,"column":8,"nodeType":"674","messageId":"675","endLine":58,"endColumn":11},{"ruleId":"672","severity":1,"message":"818","line":70,"column":8,"nodeType":"674","messageId":"675","endLine":70,"endColumn":22},{"ruleId":"672","severity":1,"message":"876","line":73,"column":8,"nodeType":"674","messageId":"675","endLine":73,"endColumn":21},{"ruleId":"672","severity":1,"message":"877","line":76,"column":8,"nodeType":"674","messageId":"675","endLine":76,"endColumn":17},{"ruleId":"672","severity":1,"message":"878","line":77,"column":8,"nodeType":"674","messageId":"675","endLine":77,"endColumn":14},{"ruleId":"672","severity":1,"message":"879","line":78,"column":8,"nodeType":"674","messageId":"675","endLine":78,"endColumn":12},{"ruleId":"672","severity":1,"message":"880","line":79,"column":8,"nodeType":"674","messageId":"675","endLine":79,"endColumn":11},{"ruleId":"672","severity":1,"message":"881","line":80,"column":8,"nodeType":"674","messageId":"675","endLine":80,"endColumn":11},{"ruleId":"672","severity":1,"message":"882","line":84,"column":8,"nodeType":"674","messageId":"675","endLine":84,"endColumn":19},{"ruleId":"672","severity":1,"message":"883","line":85,"column":8,"nodeType":"674","messageId":"675","endLine":85,"endColumn":15},{"ruleId":"672","severity":1,"message":"884","line":86,"column":8,"nodeType":"674","messageId":"675","endLine":86,"endColumn":18},{"ruleId":"668","severity":1,"message":"669","line":209,"column":60,"nodeType":"670","messageId":"671","endLine":209,"endColumn":62},{"ruleId":"668","severity":1,"message":"669","line":651,"column":92,"nodeType":"670","messageId":"671","endLine":651,"endColumn":94},{"ruleId":"668","severity":1,"message":"669","line":665,"column":96,"nodeType":"670","messageId":"671","endLine":665,"endColumn":98},{"ruleId":"672","severity":1,"message":"885","line":6,"column":8,"nodeType":"674","messageId":"675","endLine":6,"endColumn":25},{"ruleId":"672","severity":1,"message":"871","line":9,"column":10,"nodeType":"674","messageId":"675","endLine":9,"endColumn":14},{"ruleId":"672","severity":1,"message":"886","line":15,"column":8,"nodeType":"674","messageId":"675","endLine":15,"endColumn":22},{"ruleId":"672","severity":1,"message":"887","line":18,"column":8,"nodeType":"674","messageId":"675","endLine":18,"endColumn":20},{"ruleId":"672","severity":1,"message":"888","line":26,"column":10,"nodeType":"674","messageId":"675","endLine":26,"endColumn":28},{"ruleId":"672","severity":1,"message":"889","line":55,"column":5,"nodeType":"674","messageId":"675","endLine":55,"endColumn":15},{"ruleId":"672","severity":1,"message":"890","line":60,"column":10,"nodeType":"674","messageId":"675","endLine":60,"endColumn":18},{"ruleId":"672","severity":1,"message":"891","line":60,"column":20,"nodeType":"674","messageId":"675","endLine":60,"endColumn":31},{"ruleId":"672","severity":1,"message":"673","line":71,"column":9,"nodeType":"674","messageId":"675","endLine":71,"endColumn":24},{"ruleId":"705","severity":1,"message":"892","line":111,"column":6,"nodeType":"707","endLine":111,"endColumn":8,"suggestions":"893"},{"ruleId":"672","severity":1,"message":"894","line":113,"column":28,"nodeType":"674","messageId":"675","endLine":113,"endColumn":47},{"ruleId":"668","severity":1,"message":"690","line":217,"column":42,"nodeType":"670","messageId":"671","endLine":217,"endColumn":44},{"ruleId":"668","severity":1,"message":"690","line":218,"column":43,"nodeType":"670","messageId":"671","endLine":218,"endColumn":45},{"ruleId":"668","severity":1,"message":"690","line":254,"column":30,"nodeType":"670","messageId":"671","endLine":254,"endColumn":32},{"ruleId":"672","severity":1,"message":"819","line":1,"column":27,"nodeType":"674","messageId":"675","endLine":1,"endColumn":35},{"ruleId":"705","severity":1,"message":"895","line":26,"column":5,"nodeType":"674","endLine":26,"endColumn":14,"suggestions":"896"},{"ruleId":"668","severity":1,"message":"669","line":27,"column":66,"nodeType":"670","messageId":"671","endLine":27,"endColumn":68},"no-native-reassign",["897"],"no-negated-in-lhs",["898"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'handleClickOpen' is assigned a value but never used.","Identifier","unusedVar","'handleClose' is assigned a value but never used.","'api' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-redeclare","'usuarioLogado' is already defined.","redeclared","no-dupe-keys","Duplicate key 'description'.","ObjectExpression","'manifestURL' is assigned a value but never used.","'React' is defined but never used.","Expected '!==' and instead saw '!='.","'LockOpenIcon' is defined but never used.","'LockIcon' is defined but never used.","'AlertFixo' is defined but never used.","'enderecosVazios' is defined but never used.","'Divider' is defined but never used.","'BackspaceIcon' is defined but never used.","'CardActions' is defined but never used.","'quantoEntregam' is assigned a value but never used.","'possuiOpcao' is assigned a value but never used.","'fullScreen' is assigned a value but never used.","'temAlgum' is assigned a value but never used.","'abrirAdicionarEndereco' is assigned a value but never used.","'confirmarDesejo' is assigned a value but never used.","'bairroCepUnicoSelecionado' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'aplicativoDados?.exibirTodasUnidadesNoDelivery'. Either include it or remove the dependency array.","ArrayExpression",["899"],"React Hook useEffect has missing dependencies: 'aplicativoDados.pixelFacebook', 'enderecoAtual', 'filtroTipoRetirada', 'listarEstabelecimentosPorEndereco', and 'retirarNoLocal'. Either include them or remove the dependency array.",["900"],"'setTodosBanners' is assigned a value but never used.","'verificarCep' is assigned a value but never used.","'buscarCardapioId' is assigned a value but never used.","'buscarCardapioDelivery' is assigned a value but never used.","'buscarCardapioRetirada' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'filtroTipoEndereco' is assigned a value but never used.","'buscarLojasQueEntregam' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Unexpected mix of '&&' and '||'.","'ListItemText' is defined but never used.","'AddCircleIcon' is defined but never used.","'RemoveCircleIcon' is defined but never used.","'setLoading' is assigned a value but never used.","'setEstabelecimento' is assigned a value but never used.","'estabelecimentoAtual' is assigned a value but never used.","'setEstabelecimentoAtual' is assigned a value but never used.","'SearchIcon' is defined but never used.","'InputBase' is defined but never used.",["901"],["902"],"'Typography' is defined but never used.","'Card' is defined but never used.","'DialogTitle' is defined but never used.","'Alert' is defined but never used.","'history' is assigned a value but never used.","'alertStart' is assigned a value but never used.","'alertClose' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'get64Logo'. Either include it or remove the dependency array.",["903"],"'HourglassFullIcon' is defined but never used.","'dataSelo' is defined but never used.","React Hook useEffect has a missing dependency: 'atualizarUsuario'. Either include it or remove the dependency array.",["904"],"React Hook useEffect has missing dependencies: 'naoEncontrou' and 'verificarAppDados'. Either include them or remove the dependency array.",["905"],"'setWhats' is assigned a value but never used.","'setChave' is assigned a value but never used.","'setLojaParams' is assigned a value but never used.","'cardapio' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'ReceiptIcon' is defined but never used.","'ShareIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'aplicativoDados' and 'usuarioLogado.cliente'. Either include them or remove the dependency array.",["906"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'appName' is assigned a value but never used.","'idEstabelecimento' is assigned a value but never used.","'clienteId' is assigned a value but never used.","'corPrincipal' is assigned a value but never used.","'setParam1' is assigned a value but never used.","'setParam2' is assigned a value but never used.","'setParam3' is assigned a value but never used.","'setParam4' is assigned a value but never used.","'param5' is assigned a value but never used.","'setParam5' is assigned a value but never used.","'url' is assigned a value but never used.","'publicKey' is assigned a value but never used.","'handleCard' is assigned a value but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","'encrypted' is assigned a value but never used.","'CardMedia' is defined but never used.","React Hook useEffect has a missing dependency: 'verificarStatus'. Either include it or remove the dependency array.",["907"],"'useEffect' is defined but never used.","'Sentry' is defined but never used.","'Cabecalho' is defined but never used.","'Rodape' is defined but never used.","'CropFreeIcon' is defined but never used.","'Avatar' is defined but never used.","'Carousel' is defined but never used.","'Grid' is defined but never used.","'RegistrarSeloSeguro2' is defined but never used.","'identificarEstabelecimentoSelecionado' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'LocationOnIcon' is defined but never used.","'FavoriteIcon' is defined but never used.","'DescriptionIcon' is defined but never used.","'ExitToAppIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'Fab' is defined but never used.","'Tooltip' is defined but never used.","'MonetizationOnIcon' is defined but never used.","'CardContent' is defined but never used.","'getMoney' is defined but never used.","'formatReal' is defined but never used.","'Transition' is assigned a value but never used.","'configuracoesPerfilModal' is assigned a value but never used.","'setConfiguracoesPerfilModal' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'carrinho' is assigned a value but never used.","'usuarioPedidoMesa' is assigned a value but never used.","'enderecoAtual' is assigned a value but never used.","'MotorcycleIcon' is defined but never used.","'useState' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'useStyles' is assigned a value but never used.","'ArrowRightIcon' is defined but never used.","'Container' is defined but never used.","'NotificationsActiveIcon' is defined but never used.","'CachedIcon' is defined but never used.","'ClearIcon' is defined but never used.","'Checkbox' is defined but never used.","'CheckBoxOutlineBlankIcon' is defined but never used.","'CheckBoxIcon' is defined but never used.","'Prato' is defined but never used.","'ListIcon' is defined but never used.","'ViewColumnOutlinedIcon' is defined but never used.","'TextField' is defined but never used.","'ConfirmationNumberIcon' is defined but never used.","'PaymentIcon' is defined but never used.","'ShoppingBasketIcon' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListSubheader' is defined but never used.","'ajustarCardapioQuantidade' is assigned a value but never used.","'setMostrarFotoProduto' is assigned a value but never used.","'setLayoutCardapio' is assigned a value but never used.","'valor' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'aplicativoDados.clienteFielStart', 'buscarUltimoPedido', 'estabelecimentoAtual', 'verificarAberto', and 'verificarCardapio'. Either include them or remove the dependency array.",["908"],"no-whitespace-before-property","Unexpected whitespace before property format.","MemberExpression","unexpectedWhitespace",{"range":"909","text":"910"},"use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN",{"range":"911","text":"910"},{"range":"912","text":"910"},"'TramRounded' is defined but never used.","'useMediaQuery' is defined but never used.","'InfoCardapio' is defined but never used.","'Backdrop' is defined but never used.","'CircularProgress' is defined but never used.","'MuiAlert' is defined but never used.","'Snackbar' is defined but never used.","'DirectionsWalkIcon' is defined but never used.","'DesenvolvidoPor' is defined but never used.","'fade' is defined but never used.","'makeStyles' is defined but never used.","'useTheme' is defined but never used.","'CardActionArea' is defined but never used.","'Slide' is defined but never used.","'carrinhoVazio' is defined but never used.","'PropTypes' is defined but never used.","'AppBar' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Box' is defined but never used.","'ButtonGroup' is defined but never used.","'AddIcon' is defined but never used.","'RemoveIcon' is defined but never used.","'DialogContentText' is defined but never used.","'FormHelperText' is defined but never used.","'NativeSelect' is defined but never used.","'AplicativoDadosUrl' is defined but never used.","'pedidoMesa' is assigned a value but never used.","'progress' is assigned a value but never used.","'setProgress' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'aplicativoDados' and 'estabelecimentoAtual.id'. Either include them or remove the dependency array.",["913"],"'setEstabelecimentos' is assigned a value but never used.","React Hook useEffect contains a call to 'setAbrirPopUp'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [aplicativoDados.urlRibon, params] as a second argument to the useEffect Hook.",["914"],"no-global-assign","no-unsafe-negation",{"desc":"915","fix":"916"},{"desc":"917","fix":"918"},{"desc":"915","fix":"919"},{"desc":"917","fix":"920"},{"desc":"921","fix":"922"},{"desc":"923","fix":"924"},{"desc":"925","fix":"926"},{"desc":"927","fix":"928"},{"desc":"929","fix":"930"},{"desc":"931","fix":"932"},[92892,92894],".",[99885,99887],[104780,104782],{"desc":"933","fix":"934"},{"desc":"935","fix":"936"},"Update the dependencies array to be: [retirarNoLocal, estabelecimentos, filtroSelect, enderecoAtual, verTodasAsLojas, aplicativoDados?.exibirTodasUnidadesNoDelivery]",{"range":"937","text":"938"},"Update the dependencies array to be: [aplicativoDados.pixelFacebook, enderecoAtual, filtroTipoRetirada, listarEstabelecimentosPorEndereco, retirarNoLocal]",{"range":"939","text":"940"},{"range":"941","text":"938"},{"range":"942","text":"940"},"Update the dependencies array to be: [get64Logo]",{"range":"943","text":"944"},"Update the dependencies array to be: [atualizarUsuario]",{"range":"945","text":"946"},"Update the dependencies array to be: [naoEncontrou, verificarAppDados]",{"range":"947","text":"948"},"Update the dependencies array to be: [aplicativoDados, ultimoPedido, usuarioLogado.cliente]",{"range":"949","text":"950"},"Update the dependencies array to be: [verificarStatus]",{"range":"951","text":"952"},"Update the dependencies array to be: [aplicativoDados.clienteFielStart, buscarUltimoPedido, estabelecimentoAtual, verificarAberto, verificarCardapio]",{"range":"953","text":"954"},"Update the dependencies array to be: [aplicativoDados, estabelecimentoAtual.id]",{"range":"955","text":"956"},"Add dependencies array: [aplicativoDados.urlRibon, params]",{"range":"957","text":"958"},[10009,10089],"[retirarNoLocal, estabelecimentos, filtroSelect, enderecoAtual, verTodasAsLojas, aplicativoDados?.exibirTodasUnidadesNoDelivery]",[10838,10840],"[aplicativoDados.pixelFacebook, enderecoAtual, filtroTipoRetirada, listarEstabelecimentosPorEndereco, retirarNoLocal]",[10920,11000],[11749,11751],[3439,3441],"[get64Logo]",[5366,5368],"[atualizarUsuario]",[12125,12127],"[naoEncontrou, verificarAppDados]",[18392,18406],"[aplicativoDados, ultimoPedido, usuarioLogado.cliente]",[7061,7063],"[verificarStatus]",[38364,38366],"[aplicativoDados.clienteFielStart, buscarUltimoPedido, estabelecimentoAtual, verificarAberto, verificarCardapio]",[3575,3577],"[aplicativoDados, estabelecimentoAtual.id]",[1083,1083],", [aplicativoDados.urlRibon, params]"]
